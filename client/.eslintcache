[{"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\index.js":"1","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\App.js":"2","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\store.js":"3","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\setAuthToken.js":"4","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\auth.js":"5","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Alert.js":"6","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Navbar.js":"7","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Landing.js":"8","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Login.js":"9","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Register.js":"10","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\CreateProfile.js":"11","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\EditProfile.js":"12","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\MyProfile.js":"13","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\UserProfile.js":"14","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\routing\\PrivateRoute.js":"15","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\Profiles.js":"17","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\types.js":"18","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\alert.js":"19","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\profile.js":"20","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Spinner.js":"21","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\ProfileItem.js":"22","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendList.js":"23","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\index.js":"24","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\alert.js":"25","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\auth.js":"26","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\profile.js":"27","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\game.js":"28","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\Games.js":"29","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\game.js":"30","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameRoom.js":"31","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\dateformat.js":"32","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\CreateGame.js":"33","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\AccountSettings.js":"34","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\MessageBox.js":"35","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Message.js":"36","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Chat.js":"37","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\chat.js":"38","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\chat.js":"39","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendItem.js":"40","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameChat.js":"41","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameMessage.js":"42","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\gamechat.js":"43","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\gamechat.js":"44","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\PasswordChange.js":"45"},{"size":248,"mtime":1622015683220,"results":"46","hashOfConfig":"47"},{"size":3139,"mtime":1623847663156,"results":"48","hashOfConfig":"47"},{"size":525,"mtime":1622017945910,"results":"49","hashOfConfig":"47"},{"size":253,"mtime":1621834101000,"results":"50","hashOfConfig":"47"},{"size":3395,"mtime":1623856105582,"results":"51","hashOfConfig":"47"},{"size":681,"mtime":1622029844696,"results":"52","hashOfConfig":"47"},{"size":3780,"mtime":1623175227466,"results":"53","hashOfConfig":"47"},{"size":1193,"mtime":1622188968941,"results":"54","hashOfConfig":"47"},{"size":2569,"mtime":1623114736157,"results":"55","hashOfConfig":"47"},{"size":3738,"mtime":1622168655435,"results":"56","hashOfConfig":"47"},{"size":4425,"mtime":1623474395458,"results":"57","hashOfConfig":"47"},{"size":6154,"mtime":1623683989652,"results":"58","hashOfConfig":"47"},{"size":1997,"mtime":1623683989653,"results":"59","hashOfConfig":"47"},{"size":5214,"mtime":1623477385632,"results":"60","hashOfConfig":"47"},{"size":599,"mtime":1622290473306,"results":"61","hashOfConfig":"47"},{"size":5775,"mtime":1623847205614,"results":"62","hashOfConfig":"47"},{"size":1827,"mtime":1623114350195,"results":"63","hashOfConfig":"47"},{"size":1148,"mtime":1623854942224,"results":"64","hashOfConfig":"47"},{"size":636,"mtime":1622033894520,"results":"65","hashOfConfig":"47"},{"size":2820,"mtime":1622962512456,"results":"66","hashOfConfig":"47"},{"size":273,"mtime":1621834101000,"results":"67","hashOfConfig":"47"},{"size":1218,"mtime":1622550892482,"results":"68","hashOfConfig":"47"},{"size":1283,"mtime":1623476012574,"results":"69","hashOfConfig":"47"},{"size":446,"mtime":1623743429712,"results":"70","hashOfConfig":"47"},{"size":611,"mtime":1622039051791,"results":"71","hashOfConfig":"47"},{"size":1581,"mtime":1623854995364,"results":"72","hashOfConfig":"47"},{"size":1040,"mtime":1622964793845,"results":"73","hashOfConfig":"47"},{"size":1423,"mtime":1622880181460,"results":"74","hashOfConfig":"47"},{"size":3351,"mtime":1623842643415,"results":"75","hashOfConfig":"47"},{"size":3249,"mtime":1622863608559,"results":"76","hashOfConfig":"47"},{"size":9702,"mtime":1623806441373,"results":"77","hashOfConfig":"47"},{"size":221,"mtime":1622689019857,"results":"78","hashOfConfig":"47"},{"size":7165,"mtime":1623809742099,"results":"79","hashOfConfig":"47"},{"size":1660,"mtime":1623847680595,"results":"80","hashOfConfig":"47"},{"size":4354,"mtime":1623753344185,"results":"81","hashOfConfig":"47"},{"size":786,"mtime":1623725190497,"results":"82","hashOfConfig":"47"},{"size":1320,"mtime":1623753409743,"results":"83","hashOfConfig":"47"},{"size":898,"mtime":1623473837206,"results":"84","hashOfConfig":"47"},{"size":1110,"mtime":1623727296986,"results":"85","hashOfConfig":"47"},{"size":1669,"mtime":1623727875463,"results":"86","hashOfConfig":"47"},{"size":2416,"mtime":1623816838462,"results":"87","hashOfConfig":"47"},{"size":979,"mtime":1623805635775,"results":"88","hashOfConfig":"47"},{"size":916,"mtime":1623810181643,"results":"89","hashOfConfig":"47"},{"size":1120,"mtime":1623743778545,"results":"90","hashOfConfig":"47"},{"size":2377,"mtime":1623856057761,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1rtdnpg",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\index.js",[],["195","196"],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\App.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\store.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Login.js",["197"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport \"../../App.css\";\nimport '../../css/bootstrap.min.css';\n\n/**\n * Functional component for login page, allows client to\n * change the fields on the login page, as well as log into\n * their account provided their credentials are correct. \n * Parameters will be destructured props\n * @param login Our login action which will dispatch LOGIN_SUCCESS if successfully logged in with provided \n * email and password\n * @param isAuthenticated A boolean state in auth, to ensure that \n * authenticated users who are logged in will be directed to dashboard\n */\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = a => {\n    a.preventDefault();\n    login(formData.email, formData.password);\n  };\n\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Fragment>\n            <div className =\"box-body\">\n              <h1 className=\"large text-primary\">Sign In</h1>\n              \n              <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                      <input\n                        type=\"email\"\n                        placeholder=\"NUS Email Address\"\n                        name=\"email\"\n                        value={formData.email}\n                        onChange={onChange}\n                        required\n                      />\n                </div>\n\n                <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      value={formData.password}\n                      onChange={onChange}\n                      minLength=\"7\"\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" value=\"Login\" />\n              </form>\n             \n            </div>\n    </Fragment>\n  );\n}; \n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\CreateProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\EditProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\MyProfile.js",["198"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst MyProfile = ({ getCurrentProfile, auth: { user }, profile : { profile, loading } }) => {\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n      getCurrentProfile();\r\n    },[]);\r\n  \r\n    return (\r\n      <Fragment>\r\n          { loading || profile.user._id !== user._id ? (\r\n            <Spinner /> ):\r\n        <Fragment> \r\n            <h1 className=\"large\"> \r\n              {user.name}'s Profile  \r\n              <br/> \r\n              <img className=\"profiledp\" src={user.avatar} alt=\"\"/>\r\n            </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n          <p> <strong> Your Interests: </strong></p>\r\n        <ul>\r\n          {profile.interests.map(item => {\r\n              return <li>{item}</li>;\r\n            })}\r\n        </ul>\r\n\r\n        <div className =\"my-2\"> \r\n            <Link to ='/edit-profile' className=\"btn btn-primary my-1\"> Update Profile </Link>\r\n          \r\n          <> </>\r\n          <Link to=\"/dashboard\" className=\"btn btn-dark join-all\">\r\n            Home\r\n          </Link>\r\n          \r\n         \r\n          </div>\r\n        </Fragment> \r\n    }\r\n    </Fragment>\r\n  );\r\n}\r\n   \r\n  \r\n  MyProfile.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n  });\r\n  \r\n  export default connect(mapStateToProps, { getCurrentProfile })(MyProfile);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\UserProfile.js",["199"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfilesById } from '../../actions/profile';\r\nimport { authUser } from '../../actions/auth'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {createChat} from '../../actions/chat';\r\n\r\n\r\nconst UserProfile = ({ createChat, chat:{chats}, authUser, getProfilesById, profile: { profile, loading }, auth, match, history}) => {\r\n\r\n  const chatID = [];\r\n  if (chats.length > 0) {\r\n    chats.map(chat => {\r\n      chatID.push(chat.users.find(id => id !== auth.user._id));\r\n    })\r\n  }\r\n  \r\n\r\n  const startNewConvo= () => {\r\n      try {\r\n        if (!chatID.includes(profile.user._id)) {\r\n            const formData = {\r\n                receiver: profile.user._id\r\n            }\r\n            createChat(formData, history)\r\n        } else {\r\n            history.push('/messagebox')\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n  \r\n\r\n  const [followed, toggle] = useState(\r\n    auth.user.followings.includes(match.params.id)\r\n  );\r\n\r\n  useEffect(() => {\r\n    authUser();\r\n  });\r\n\r\n\r\n  //cannot rerender if not clicking directly on the main page will conflict with main page rerender\r\n  useEffect(() => {\r\n      getProfilesById(match.params.id);\r\n      // eslint-disable-next-line\r\n    },[getProfilesById]);\r\n\r\n\r\n  const followUnfollow = () => {\r\n      try {\r\n        if (!followed) {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/follow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        } else {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/unfollow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        }\r\n      }catch (err) { \r\n        console.log(err.status)\r\n      }\r\n    };\r\n    \r\n    if (profile === null || loading) {\r\n      return < Spinner />\r\n    } else {\r\n      if (profile.user._id === auth.user._id) {\r\n        return <Spinner />\r\n      } else {\r\n        return <Fragment>\r\n            <h1> {profile.user.name}'s Profile  </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n            <p> <strong> Your Interests: </strong></p>\r\n                <ul>\r\n                {profile.interests.map(item => {\r\n                    return <li>{item}</li>;\r\n                    })}\r\n                </ul>\r\n            \r\n            {profile.hasOwnProperty(\"social\")  && <Fragment>\r\n              <p> <strong> Social Media: </strong> </p>\r\n                  <ul>\r\n                      {profile.social.hasOwnProperty(\"facebook\") && <Fragment> <li><i class=\"fab fa-facebook\"/> {\" \"} {profile.social.facebook}</li> </Fragment> }\r\n                      {profile.social.hasOwnProperty(\"instagram\") && <Fragment> <li><i class=\"fab fa-instagram\"/> {\" \"} {profile.social.instagram}</li> </Fragment> }\r\n                  </ul>\r\n            </Fragment>\r\n            }\r\n\r\n            <Link to=\"/profiles\" className=\"btn btn-secondary\">\r\n            Find more Friends\r\n            </Link>\r\n            <>  </>\r\n            {!followed && auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-dark\">\r\n                  <i class=\"fas fa-user-plus\"/>   Follow\r\n                </button>\r\n                ) \r\n            }\r\n\r\n            {followed && auth.isAuthenticated &&\r\n                auth.loading === false && \r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-success\">\r\n                   <i class=\"fas fa-user-minus\"/>   Unfollow\r\n                </button>\r\n                ) \r\n            }\r\n            \r\n            <>  </>\r\n            {auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {startNewConvo()}} type=\"button\" className=\"btn btn-primary my-1\"> <i class=\"fas fa-comment-dots\"/>\r\n                    {\" \"} Message\r\n                 </button>\r\n                ) \r\n            }\r\n        </Fragment>\r\n      }\r\n    }\r\n  };\r\n\r\n\r\nUserProfile.propTypes = {\r\n    getProfilesById: PropTypes.func.isRequired,\r\n    authUser: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth,\r\n    chat: state.chat\r\n})\r\n\r\nexport default connect(mapStateToProps, { authUser, getProfilesById, createChat })(withRouter(UserProfile));","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\Dashboard.js",["200"],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\Profiles.js",["201"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport ProfileItem from './ProfileItem'\nimport { clearProfile, getProfiles } from '../../actions/profile';\n\nconst Profiles = ({clearProfile, getProfiles, profile: { profiles, loading }, auth}) => {\n    useEffect(()  => {\n        getProfiles();\n    }, [getProfiles]);\n\n    //additional clear profile to clear out dashboard rerendering\n    useEffect(()  => {\n        clearProfile();\n    }, [clearProfile]);\n\n\n    const displayAll = profiles.length <= 0 ? <h4>No profiles found</h4> : \n        profiles.map(profile => {\n            if (profile.user._id !== auth.user._id) {\n                return <ProfileItem key = {profile._id} profile ={profile} />\n            }\n        })\n\n    return <Fragment> \n        { loading ? <Spinner /> : <Fragment>\n            <h1 className = \"large text-dark big-header\"> Sports Enthusiasts of NUS </h1>\n\n            <div className =\"input-group my-3\">\n                <input type=\"search\" className =\"form-control rounded\" placeholder=\"Search\" aria-label=\"Search\"\n                    aria-describedby=\"search-addon\" />\n                <button type=\"button\" class=\"btn btn-outline-primary\">search</button>\n            </div>\n            <div className=\"profiles\">\n                {displayAll}\n            </div>\n\n        </Fragment>}\n    </Fragment>\n    \n}\n  \nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    clearProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n};\n  \nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    auth: state.auth\n});\n\n  \nexport default connect(mapStateToProps, { clearProfile, getProfiles})(Profiles);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\types.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\ProfileItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendList.js",["202"],"import { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport FriendItem from \"./FriendItem\";\n\n\nconst FriendList = ({auth: { user }, chat:{chats}}) => {\n\n    const [friends, setFriends] = useState([]);\n\n\n    useEffect(() => {\n        const getFriends = async () => {\n          try {\n            const friendList = await axios.get(\"/api/users/friends/\" + user._id);\n            setFriends(friendList.data);\n          } catch (err) {\n            console.log(err);\n          }\n        };\n        getFriends()\n      });\n    \n    \n\n    return (\n      \n      <div className=\"card\">\n          <div className=\"card-header\">\n              <strong> My Friends ({friends.length}) </strong>\n          </div>\n        \n          <ul className=\"list-group list-group-flush\">\n            {friends.map((friend) => (\n                <FriendItem friend ={friend}/>\n           ))}\n          </ul>\n        </div>\n       \n    )\n}\n\n\nFriendList.propTypes = {\n  auth: PropTypes.object.isRequired,\n  chat: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    chat: state.chat\n});\n\nexport default connect(mapStateToProps)(FriendList);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\index.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\Games.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameRoom.js",["203","204","205","206","207"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { authUser } from '../../actions/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { getGameById } from '../../actions/game';\r\nimport { clearProfile } from '../../actions/profile';\r\nimport axios from 'axios';\r\nimport dateformat from '../../utils/dateformat';\r\nimport GameChat from './GameChat';\r\nimport { getChats } from '../../actions/chat';\r\nimport { getGameChat, createGameChat } from '../../actions/gamechat';\r\n\r\n\r\nconst GameRoom = ({ getGameChat, createGameChat, clearProfile, getGameById, authUser, auth, game : {game, loading}, match, gamechat: {gamechat} }) => {\r\n\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const [chatStatus, startChat] = useState(\r\n        messages.length === 0\r\n    );\r\n    \r\n  \r\n    \r\n    const startNewConvo= () => {\r\n        try {\r\n            const formData = {\r\n                room: game._id\r\n            }\r\n            createGameChat(formData)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n    }\r\n\r\n    const quitGame = () => {\r\n        try {\r\n            axios.put(`/api/games/quit/${game._id}`);\r\n        } catch (err) { \r\n            console.log(err.status)\r\n        }\r\n      };\r\n    \r\n    const joinGame = () => {\r\n        try {\r\n            axios.put(`/api/games/join/${game._id}`);\r\n        } catch (err) { \r\n            console.log(err.status)\r\n        }\r\n      };\r\n\r\n    useEffect(() => {\r\n        getGameChat(match.params.id);\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        getGameById(match.params.id);\r\n    });\r\n    \r\n    useEffect(() => {\r\n        authUser();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        clearProfile();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    if (game === null || loading || gamechat === null) {\r\n        return(\r\n            <Fragment>\r\n                <Spinner />\r\n            </Fragment>\r\n        ) \r\n    } else {\r\n        return (\r\n            <Fragment>\r\n                <h1 className=\"text-primary my-3 my-btm\"> {game.name}'s Game Lobby  </h1>\r\n                <div className=\"row\">\r\n                <div className=\"card-body\">\r\n                <Link to=\"/all-games\" className=\"btn btn-dark join-all\"> <i class=\"fas fa-sign-out-alt\" /> Leave Lobby </Link>\r\n                </div>\r\n                </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                            <h5 className=\"card-title my-3 host-title\">{game.sport}</h5>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Experience Level: </span> {game.experience}</p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"?game.otherLoc:game.location}</p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Date: </span> {dateformat(game.dateTime)} </p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Max Players: </span> {game.maxPlayers} </p>\r\n                                <br></br>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                <h5 className=\"card-title my-3 host-title\">Players In Waiting Room : {game.players.length} </h5>\r\n                                {game.players.length > 0 && game.players.map(player => { \r\n                                    if (player.user === auth.user._id) {\r\n                                        return (\r\n                                            <Fragment>\r\n                                            <div className=\"card mb-3\">\r\n                                            <div className=\"card-body player-card\">\r\n                                                {player.name}\r\n                                                <button onClick= {()=> {\r\n                                                    quitGame();\r\n                                                }} type=\"button\" className=\"btn btn-danger btn-round join-all\"> <i class=\"far fa-times-circle\"/> </button>\r\n                                            </div>\r\n                                            </div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    } else {\r\n                                        return (\r\n                                            <Fragment>\r\n                                            <div className=\"card mb-3\">\r\n                                            <div className=\"card-body player-card\">\r\n                                                <Link to={`/profile/${player.user}`}> {player.name} </Link> \r\n                                            </div>\r\n                                            </div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    }\r\n                                })}\r\n                                <p> { game.players.length < game.maxPlayers && game.players.filter(player => \r\n                                    player.user === auth.user._id).length === 0  && \r\n                                    <button onClick= {()=> {\r\n                                        joinGame();\r\n                                    }} type=\"button\" className=\"btn btn-primary join-all\"> Join Game </button>}\r\n                                </p>\r\n\r\n                                <h5> { game.players.length >= game.maxPlayers && <span class=\"badge badge-light\">\r\n                                    Waiting Room is Currently Full</span>}</h5>\r\n                             \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"row g-0\">\r\n                                <div className=\"col-md-4\">\r\n                                    <img height=\"195\" width =\"195\" src={game.avatar} className=\"round-img\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                    <h5 className=\"card-title my-3 host-title \">About Game Host </h5>\r\n                                    <p className=\"card-text\"> <span className='text-primary'> Host Name: </span> {game.name}</p>\r\n                                    <small className=\"card-text text-muted\"> Room Created: {dateformat(game.createTime)} </small>\r\n                                    <br></br>\r\n                                </div>\r\n                            </div>\r\n                                {game.user !== auth.user._id &&  <Link to={`/profile/${game.user}`} className=\"btn btn-dark btn-lg btn-block\"> View Host Profile </Link>}\r\n                                {game.user === auth.user._id &&  <Link to=\"#!\" className=\"btn btn-dark btn-lg btn-block\"> <i class=\"fas fa-cog\"/> Game Settings </Link>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 col-md-12\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title my-3 host-title \"> Game Chat</h5>\r\n                                </div>\r\n\r\n                                { gamechat.length === 0 && game.user !== auth.user._id &&\r\n                                    <Fragment>\r\n                                        <h1 className =\"badge badge-danger\"> Game Chat has not been enabled </h1>\r\n                                    </Fragment>\r\n                                }\r\n\r\n                                { (gamechat.length === 0 && game.user === auth.user._id) \r\n                                    && <button type=\"button\" onClick = {()=> {startNewConvo()}} className=\"btn btn-success btn-lg btn-block \">\r\n                                      Enable Chat\r\n                                </button> }\r\n\r\n                                { gamechat.length > 0 &&  <GameChat />}\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nGameRoom.propTypes = {\r\n    getGameById: PropTypes.func.isRequired,\r\n    authUser: PropTypes.func.isRequired,\r\n    clearProfile: PropTypes.func.isRequired,\r\n    createGameChat: PropTypes.func.isRequired,\r\n    getGameChat: PropTypes.func.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    game: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    gamechat: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    game: state.game,\r\n    auth: state.auth,\r\n    gamechat: state.gamechat\r\n})\r\n\r\nexport default connect(mapStateToProps, { getGameChat, createGameChat, clearProfile, getGameById, authUser })(GameRoom);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\dateformat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\CreateGame.js",["208"],"import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createGame } from '../../actions/game';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst CreateGame = ({ createGame, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        sport: '',\r\n        location: '',\r\n        otherLoc: '',\r\n        experience: '',\r\n        maxPlayers: '',\r\n        dateTime: Date.now,\r\n        createTime: Date.now,\r\n    });\r\n    \r\n    const {\r\n       sport,\r\n       location,\r\n       otherLoc,\r\n       experience,\r\n       maxPlayers,\r\n       dateTime,\r\n       createTime,\r\n    } = formData;\r\n\r\n    const sports = [\r\n        { sport: \"Badminton\", locations:[\"Kent Ridge - MPSH 5\", \"UTown - Sports Hall 1\"], \r\n            maxPlayers:[\"2\",\"3\",\"4\",\"5\",\"6\"] },\r\n        { sport: \"Basketball\", locations:[\"Eusoff Hall\", \"NUS Sports & Recreation Centre\",\"Temasek Hall\",\"Others\"], \r\n        maxPlayers:[\"4\",\"6\",\"8\",\"9\",\"10\"] },\r\n        { sport: \"Frisbee\", locations:[\"Kent Ridge - Multi-Purpose Fields\",\"Utown - Open Field\",\"Others\"], \r\n        maxPlayers:[\"4\",\"6\",\"8\",\"9\",\"10\"] },\r\n        { sport: \"Running\", locations:[\"Kent Ridge - Running Field\", \"West Coast Park\",\"Others\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\"] },\r\n        { sport: \"Squash\", locations:[\"Kent Ridge - Squash Courts\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\"] },\r\n        { sport: \"Swimming\", locations:[\"NUS Sports & Recreation Centre\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\"] },\r\n        { sport: \"Table Tennis\", locations:[\"Kent Ridge - MPSH 2\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\",\"6\"] },\r\n        { sport: \"Tennis\", locations:[\"Kent Ridge - Outdoor Tennis Courts\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\",\"6\"] },\r\n      ];\r\n\r\n    const setToday = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 1;\r\n        var yyyy = today.getFullYear();\r\n        var hh = today.getHours() + 1;\r\n        var mins = \"00\";\r\n\r\n        if (dd<10) {\r\n            dd = \"0\" + dd;\r\n        }\r\n\r\n        if (mm<10) {\r\n            mm = \"0\" + mm;\r\n        }\r\n\r\n\r\n        if (hh<10) {\r\n            hh = \"0\" + hh;\r\n        }\r\n\r\n        if (hh===24) {\r\n            hh = \"00\";\r\n        }\r\n\r\n        today = yyyy+'-'+mm+'-'+dd+'T'+hh+\":\"+mins;\r\n        document.getElementById(\"datefield\").setAttribute(\"min\", today);\r\n    }\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const locationChange = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value});\r\n        if (e.target.value!==\"Others\" && formData.otherLoc!=='') {\r\n            document.getElementById('otherLoc').value = '';\r\n        }\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createGame(formData, history);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className =\"container\">\r\n            <h1 className=\"large my-btm\"> <i class=\"fas fa-football-ball\"/> {\" \"}\r\n                Host Your Own Game\r\n            </h1>\r\n\r\n            <form className=\"form2\" onSubmit = {data => onSubmit(data)}>\r\n                <div className=\"form-group2\">\r\n                    <select name=\"sport\" value={sport} onChange = {e=> onChange(e)}>\r\n                        <option value=\"\" disabled selected hidden> Sport </option>\r\n                        {sports.map(sport => {\r\n                            return <option>{sport.sport}</option>\r\n                        })}\r\n                    </select> \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group2\">\r\n                            <select name=\"location\" value={location} onChange = {e=> locationChange(e)}>\r\n                                <option value=\"\" disabled selected hidden>Location</option>\r\n                                {sports.filter(sport => sport.sport===formData.sport).map(\r\n                                    sport => sport.locations.map(location => {return <option>{location}</option>}))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group2\">\r\n                            {formData.location===\"Others\" && \r\n                            <Fragment>\r\n                            <input \r\n                                    id=\"otherLoc\"\r\n                                    type=\"text\" \r\n                                    name=\"otherLoc\" \r\n                                    value={otherLoc} \r\n                                    placeholder=\"Other Locations\" \r\n                                    onChange = {e=> onChange(e)}/>\r\n                             <small className=\"form-text\"> Facilities booking for these locations will not be allowed within (Match) Maker </small>\r\n                            </Fragment>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group2\">\r\n                    <select name=\"experience\" value={experience} onChange = {e=> onChange(e)}>\r\n                            <option value=\"\" disabled selected hidden>Experience Level</option>\r\n                            <option>Beginner</option>\r\n                            <option>Intermediate</option>\r\n                            <option>Expert</option>\r\n                    </select> \r\n                </div>\r\n               \r\n               \r\n                <div className=\"form-group2\">\r\n                    <select name=\"maxPlayers\" value={maxPlayers} onChange = {e=> onChange(e)}>\r\n                            <option value=\"\" disabled selected hidden>Max Number of Players</option>\r\n                            {sports.filter(sport => sport.sport===formData.sport).map(\r\n                                sport => sport.maxPlayers.map(player => {return <option>{player}</option>}))\r\n                            }\r\n                    </select> \r\n                </div>\r\n\r\n                <div className=\"form-group row my-btm\">\r\n                    <div className=\"col-md-2\"> <h5> Date and Time </h5> </div>\r\n                    <input \r\n                        id=\"datefield\"\r\n                        name=\"dateTime\"\r\n                        type=\"datetime-local\"\r\n                        value={dateTime}\r\n                        onChange={e => onChange(e)}\r\n                        onClick={setToday}\r\n                        className=\"col-md-6\"\r\n                        max=\"2022-06-14T00:00\"\r\n                    />\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-3\" />\r\n\r\n                <>   </>\r\n                <Link className=\"btn btn-light my-3\" to=\"/all-games\">Go Back</Link>\r\n            </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nCreateGame.propTypes = {\r\n    createGame: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {createGame}) (withRouter(CreateGame))\r\n\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\AccountSettings.js",["209"],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\MessageBox.js",["210"],"import React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport Chat from './Chat';\r\nimport Message from './Message';\r\nimport { getChats } from '../../actions/chat';\r\nimport axios from 'axios';\r\nimport ChatBG from '../../img/ChatBG.png'\r\n\r\n//main page for display of all conversations and messages \r\nconst MessageBox = ({getChats, auth: { user }, chat : {chats}}) => {\r\n    const [currChat, setChat] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [formData, setFormData] = useState(\"\");\r\n    const [friendImg, setImg] = useState(null);\r\n    const scroll = useRef();\r\n\r\n    useEffect(() => {\r\n        getChats();\r\n      }, [getChats]);\r\n\r\n      useEffect(() => async () => {\r\n        try {\r\n          if (currChat !== null) {\r\n          const friendId = currChat.users.find((u)=> u !== user._id);\r\n          const res = await axios.get(`/api/profile/user/${friendId}`);\r\n          const img = res.data.user.avatar;\r\n          setImg(img);\r\n          } \r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n    useEffect(() => {\r\n        const getMessages = async () => {\r\n          try {\r\n            const res = await axios.get(`/api/message/${currChat._id}`);\r\n            setMessages(res.data);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        getMessages();\r\n      }, [currChat]);\r\n\r\n    const onSubmit = async (e) => {\r\n      e.preventDefault();\r\n      const message = {\r\n        text: formData\r\n      }\r\n\r\n      try {\r\n        if (message.text !== \"\"){\r\n          const res = await axios.post(`/api/message/${currChat._id}`, message);\r\n          setMessages([...messages, res.data])\r\n          setFormData(\"\")\r\n        } \r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      scroll.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n  \r\n    \r\n    return <Fragment>\r\n        <div className =\"row\">\r\n        <div className=\"col-sm-4 col-md-4 chatbg-dark\">\r\n        <Link to ='/profiles' className=\"btn btn-outline-primary my-top\"> Find More Friends <i class=\"fas fa-plus\"/> </Link>\r\n            {chats.map((chat=> (\r\n                <div onClick ={()=> setChat(chat)}>\r\n                    <Chat chat = {chat}/> \r\n                </div>\r\n            )))}\r\n        </div>\r\n        {currChat ? \r\n        <Fragment>             \r\n        <div className=\"col-sm-8 col-md-8 namebox chatbg-dark\">\r\n        <h4 className=\"nametext my-btm\"> \r\n          {currChat === null ? <></> : currChat.names.find(name => name !== user.name)} \r\n          <img className=\"chatboxdp\" src={friendImg} alt=\"\"/>      \r\n        </h4>     \r\n            <div className=\"chatbox chatbg\">\r\n                {messages.map((msg) => (\r\n                    <div ref = {scroll}>\r\n                      <Message message={msg} sent={msg.sender === user._id} />\r\n                    </div>\r\n                  ))}\r\n            </div>\r\n            <div className =\"input-group my-top\">\r\n            <textarea \r\n                type=\"text\" \r\n                className =\"form-control rounded\" \r\n                placeholder=\"Type Something\" \r\n                onChange={(e)=>setFormData(e.target.value)}\r\n                value = {formData}\r\n                />\r\n            <button type=\"button\" class=\"btn btn-outline-primary my-right\" onClick={onSubmit}> <i class=\"fas fa-paper-plane\" /> </button>\r\n            </div>\r\n        </div>\r\n        </Fragment> : \r\n        <div className=\"col-sm-8 col-md-8 emptychat\">\r\n          <h3 className =\"emptychattextln1\">Howdy, {user.name}!</h3>\r\n          <h3 className =\"emptychattextln2\">Open a Conversation to Start Chatting :-)</h3>\r\n          <br/>\r\n          <img className=\"emptychatimg\" src={ChatBG} alt=\"ChatBG\"/>\r\n          </div>\r\n        }\r\n        </div>\r\n    </Fragment> \r\n}\r\n\r\n\r\nMessageBox.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, {getChats})(MessageBox);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Message.js",["211","212"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {format} from 'timeago.js'\r\n\r\nconst Message = ({auth: { user }, sent, message}) => {\r\n\r\n  return (\r\n    <Fragment>\r\n       <div className={sent ? \"message sent\" : \"message\"}>\r\n        <div className=\"toptext\">\r\n          <p className=\"messagetext\">{message.text}</p>\r\n        </div>\r\n        <div className=\"text-muted btmtext\">{format(message.createdAt)}</div>\r\n      </div>\r\n      </Fragment>\r\n  );\r\n}\r\n\r\n\r\nMessage.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth,\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, {})(Message);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Chat.js",["213"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nconst Chat = ({auth : {user} , chat , loading }) => {\r\n  const [otherUser, setUser] = useState(null);\r\n  const [friendImg, setImg] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    const friendName = chat.names.find((name)=> name !== user.name);\r\n    setUser(friendName);\r\n  });\r\n\r\n  useEffect(() => async () => {\r\n    try {\r\n    const friendId = chat.users.find((u)=> u !== user._id);\r\n      const res = await axios.get(`/api/profile/user/${friendId}`);\r\n      const img = res.data.user.avatar;\r\n      setImg(img);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  });\r\n\r\n    if (loading || otherUser == null) {\r\n      return null;\r\n    }\r\n    else {\r\n      return <Fragment>\r\n        <div className=\"conversation my-top-small\">\r\n          <img className=\"chatdp\" src={friendImg} alt=\"\"/>\r\n          <span className=\"conversationName\">{otherUser}</span>\r\n        </div>\r\n      </Fragment>\r\n    }\r\n}\r\n\r\n\r\n\r\nChat.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth\r\n});\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, {})(Chat);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendItem.js",["214","215"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createChat, getChats } from '../../actions/chat';\r\n\r\n\r\nconst FriendItem = ({createChat, getChats, auth: { user }, friend, chat:{chats}, history}) => {\r\n    useEffect(() => {\r\n        getChats();\r\n      }, [getChats]);\r\n\r\n    const chatID = [];\r\n    \r\n    chats.map(chat => {\r\n        chatID.push(chat.users.find(id => id !== user._id));\r\n    })\r\n\r\n    const startNewConvo= () => {\r\n        try {\r\n          if (!chatID.includes(friend._id)) {\r\n              const formData = {\r\n                  receiver: friend._id\r\n              }\r\n              createChat(formData, history)\r\n          } else {\r\n              history.push('/messagebox')\r\n          }\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n    }\r\n  \r\n\r\n    return (\r\n        <Fragment>\r\n        <li className=\"list-group-item\"> \r\n                {friend.name}  \r\n                <button onClick= {()=> {startNewConvo()}} type=\"button\" className=\"btn btn-dark join-all\">\r\n                <i class=\"fas fa-comment-dots\"/> \r\n                </button>\r\n            </li> \r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nFriendItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, {getChats, createChat})(withRouter(FriendItem));\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameChat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameMessage.js",["216","217","218","219"],"import React, { Fragment, useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {format} from 'timeago.js'\r\nimport axios from 'axios';\r\n\r\n\r\nconst GameMessage = ({auth: { user }, message}) => {\r\n\r\n  const sent = message.name === user.name;\r\n\r\n  return <Fragment>\r\n       <div className={sent ? \"message sent\" : \"message\"}>\r\n        <p>{message.name}</p> \r\n        <div className=\"toptext\">\r\n          {sent ? <></> : <img className=\"gamechatdp\" src={message.avatar} alt=\"\"/>}\r\n          <p className=\"messagetext\">{message.text}</p>\r\n        </div>\r\n        <div className=\"text-muted btmtext\">{format(message.createdAt)}</div>\r\n      </div>\r\n      </Fragment>\r\n\r\n}\r\n\r\n\r\nGameMessage.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth,\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps)(GameMessage);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\PasswordChange.js",["220"],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":1,"column":37,"nodeType":"227","messageId":"228","endLine":1,"endColumn":46},{"ruleId":"229","severity":1,"message":"230","line":12,"column":7,"nodeType":"231","endLine":12,"endColumn":9,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":16,"column":20,"nodeType":"235","messageId":"236","endLine":16,"endColumn":22},{"ruleId":"225","severity":1,"message":"237","line":12,"column":8,"nodeType":"227","messageId":"228","endLine":12,"endColumn":14},{"ruleId":"233","severity":1,"message":"238","line":20,"column":30,"nodeType":"235","messageId":"239","endLine":20,"endColumn":32},{"ruleId":"225","severity":1,"message":"240","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":14},{"ruleId":"225","severity":1,"message":"241","line":12,"column":10,"nodeType":"227","messageId":"228","endLine":12,"endColumn":18},{"ruleId":"225","severity":1,"message":"242","line":18,"column":22,"nodeType":"227","messageId":"228","endLine":18,"endColumn":33},{"ruleId":"225","severity":1,"message":"243","line":20,"column":12,"nodeType":"227","messageId":"228","endLine":20,"endColumn":22},{"ruleId":"225","severity":1,"message":"244","line":20,"column":24,"nodeType":"227","messageId":"228","endLine":20,"endColumn":33},{"ruleId":"229","severity":1,"message":"245","line":55,"column":7,"nodeType":"231","endLine":55,"endColumn":9,"suggestions":"246"},{"ruleId":"225","severity":1,"message":"247","line":26,"column":8,"nodeType":"227","messageId":"228","endLine":26,"endColumn":18},{"ruleId":"229","severity":1,"message":"230","line":13,"column":3,"nodeType":"231","endLine":13,"endColumn":5,"suggestions":"248"},{"ruleId":"225","severity":1,"message":"249","line":5,"column":8,"nodeType":"227","messageId":"228","endLine":5,"endColumn":15},{"ruleId":"225","severity":1,"message":"226","line":1,"column":27,"nodeType":"227","messageId":"228","endLine":1,"endColumn":36},{"ruleId":"225","severity":1,"message":"240","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":14},{"ruleId":"229","severity":1,"message":"250","line":10,"column":3,"nodeType":"227","endLine":10,"endColumn":12,"suggestions":"251"},{"ruleId":"225","severity":1,"message":"252","line":1,"column":38,"nodeType":"227","messageId":"228","endLine":1,"endColumn":46},{"ruleId":"233","severity":1,"message":"234","line":15,"column":20,"nodeType":"235","messageId":"236","endLine":15,"endColumn":22},{"ruleId":"225","severity":1,"message":"226","line":1,"column":27,"nodeType":"227","messageId":"228","endLine":1,"endColumn":36},{"ruleId":"225","severity":1,"message":"252","line":1,"column":38,"nodeType":"227","messageId":"228","endLine":1,"endColumn":46},{"ruleId":"225","severity":1,"message":"240","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":14},{"ruleId":"225","severity":1,"message":"253","line":6,"column":8,"nodeType":"227","messageId":"228","endLine":6,"endColumn":13},{"ruleId":"225","severity":1,"message":"254","line":3,"column":10,"nodeType":"227","messageId":"228","endLine":3,"endColumn":18},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["257"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'bball2' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Link' is defined but never used.","'getChats' is defined but never used.","'setMessages' is assigned a value but never used.","'chatStatus' is assigned a value but never used.","'startChat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getGameChat' and 'match.params.id'. Either include them or remove the dependency array. If 'getGameChat' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["258"],"'createTime' is assigned a value but never used.",["259"],"'Spinner' is defined but never used.","React Hook useEffect contains a call to 'setUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [chat.names, user.name] as a second argument to the useEffect Hook.",["260"],"'useState' is defined but never used.","'axios' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"261","fix":"265"},{"desc":"266","fix":"267"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"268","text":"269"},"Update the dependencies array to be: [getGameChat, match.params.id]",{"range":"270","text":"271"},{"range":"272","text":"269"},"Add dependencies array: [chat.names, user.name]",{"range":"273","text":"274"},[460,462],"[getCurrentProfile]",[1611,1613],"[getGameChat, match.params.id]",[395,397],[444,444],", [chat.names, user.name]"]