[{"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\index.js":"1","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\App.js":"2","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\store.js":"3","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\setAuthToken.js":"4","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\auth.js":"5","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Alert.js":"6","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Navbar.js":"7","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Landing.js":"8","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Login.js":"9","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Register.js":"10","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\CreateProfile.js":"11","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\EditProfile.js":"12","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\MyProfile.js":"13","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\UserProfile.js":"14","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\routing\\PrivateRoute.js":"15","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\Profiles.js":"17","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\types.js":"18","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\alert.js":"19","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\profile.js":"20","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Spinner.js":"21","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\ProfileItem.js":"22","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendList.js":"23","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\index.js":"24","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\alert.js":"25","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\auth.js":"26","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\profile.js":"27","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\game.js":"28","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\Games.js":"29","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\game.js":"30","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameRoom.js":"31","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\dateformat.js":"32","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\CreateGame.js":"33","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\AccountSettings.js":"34","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\MessageBox.js":"35","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Message.js":"36","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Chat.js":"37","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\chat.js":"38","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\chat.js":"39","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendItem.js":"40","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameChat.js":"41","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameMessage.js":"42","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\gamechat.js":"43","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\gamechat.js":"44","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\PasswordChange.js":"45","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\index.js":"46","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\App.js":"47","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\store.js":"48","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\auth.js":"49","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\utils\\setAuthToken.js":"50","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Landing.js":"51","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Navbar.js":"52","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\Login.js":"53","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\Register.js":"54","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\PasswordChange.js":"55","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\AccountSettings.js":"56","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Alert.js":"57","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\CreateProfile.js":"58","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Dashboard.js":"59","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\MyProfile.js":"60","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\EditProfile.js":"61","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\UserProfile.js":"62","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\Profiles.js":"63","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\routing\\PrivateRoute.js":"64","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\Games.js":"65","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameRoom.js":"66","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\CreateGame.js":"67","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\EnterCall.js":"68","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\MessageBox.js":"69","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\types.js":"70","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\alert.js":"71","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\profile.js":"72","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\chat.js":"73","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\Message.js":"74","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\Chat.js":"75","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Spinner.js":"76","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\ChannelForm.js":"77","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\StudyForm.js":"78","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\OnlineGamesForm.js":"79","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\VideoCall.js":"80","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\gamechat.js":"81","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\SportsForm.js":"82","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\utils\\dateformat.js":"83","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\game.js":"84","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameChat.js":"85","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\ProfileItem.js":"86","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FriendList.js":"87","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\index.js":"88","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameMessage.js":"89","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FriendItem.js":"90","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\alert.js":"91","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\auth.js":"92","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\game.js":"93","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\profile.js":"94","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\gamechat.js":"95","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\chat.js":"96","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\BookFacility.js":"97","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Request.js":"98","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FollowerItem.js":"99","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\FriendList.js":"100","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\Request.js":"101","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\FriendItem.js":"102","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\FollowerItem.js":"103","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\GameItem.js":"104","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Loading.js":"105","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\SearchDict.js":"106","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\SuggestedGames.js":"107","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\notification\\Notifications.js":"108","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\notification\\FollowerItem.js":"109","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\notification\\Invite.js":"110","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\notification\\InviteItem.js":"111","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Invite.js":"112","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\InviteItem.js":"113","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\InviteFriend.js":"114","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\FriendItem.js":"115"},{"size":248,"mtime":1622015683220,"results":"116","hashOfConfig":"117"},{"size":3139,"mtime":1623847663156,"results":"118","hashOfConfig":"117"},{"size":525,"mtime":1622017945910,"results":"119","hashOfConfig":"117"},{"size":253,"mtime":1621834101000,"results":"120","hashOfConfig":"117"},{"size":3395,"mtime":1623856105582,"results":"121","hashOfConfig":"117"},{"size":681,"mtime":1622029844696,"results":"122","hashOfConfig":"117"},{"size":3780,"mtime":1623175227466,"results":"123","hashOfConfig":"117"},{"size":1193,"mtime":1622188968941,"results":"124","hashOfConfig":"117"},{"size":2569,"mtime":1623114736157,"results":"125","hashOfConfig":"117"},{"size":3738,"mtime":1622168655435,"results":"126","hashOfConfig":"117"},{"size":4425,"mtime":1623474395458,"results":"127","hashOfConfig":"117"},{"size":6154,"mtime":1623683989652,"results":"128","hashOfConfig":"117"},{"size":1997,"mtime":1623683989653,"results":"129","hashOfConfig":"117"},{"size":5214,"mtime":1623477385632,"results":"130","hashOfConfig":"117"},{"size":599,"mtime":1622290473306,"results":"131","hashOfConfig":"117"},{"size":5775,"mtime":1623847205614,"results":"132","hashOfConfig":"117"},{"size":1827,"mtime":1623114350195,"results":"133","hashOfConfig":"117"},{"size":1148,"mtime":1623854942224,"results":"134","hashOfConfig":"117"},{"size":636,"mtime":1622033894520,"results":"135","hashOfConfig":"117"},{"size":2820,"mtime":1622962512456,"results":"136","hashOfConfig":"117"},{"size":273,"mtime":1621834101000,"results":"137","hashOfConfig":"117"},{"size":1218,"mtime":1622550892482,"results":"138","hashOfConfig":"117"},{"size":1283,"mtime":1623476012574,"results":"139","hashOfConfig":"117"},{"size":446,"mtime":1623743429712,"results":"140","hashOfConfig":"117"},{"size":611,"mtime":1622039051791,"results":"141","hashOfConfig":"117"},{"size":1581,"mtime":1623854995364,"results":"142","hashOfConfig":"117"},{"size":1040,"mtime":1622964793845,"results":"143","hashOfConfig":"117"},{"size":1423,"mtime":1622880181460,"results":"144","hashOfConfig":"117"},{"size":3351,"mtime":1623842643415,"results":"145","hashOfConfig":"117"},{"size":3249,"mtime":1622863608559,"results":"146","hashOfConfig":"117"},{"size":9702,"mtime":1623806441373,"results":"147","hashOfConfig":"117"},{"size":221,"mtime":1622689019857,"results":"148","hashOfConfig":"117"},{"size":7165,"mtime":1623809742099,"results":"149","hashOfConfig":"117"},{"size":1660,"mtime":1623847680595,"results":"150","hashOfConfig":"117"},{"size":4354,"mtime":1623753344185,"results":"151","hashOfConfig":"117"},{"size":786,"mtime":1623725190497,"results":"152","hashOfConfig":"117"},{"size":1320,"mtime":1623753409743,"results":"153","hashOfConfig":"117"},{"size":898,"mtime":1623473837206,"results":"154","hashOfConfig":"117"},{"size":1110,"mtime":1623727296986,"results":"155","hashOfConfig":"117"},{"size":1669,"mtime":1623727875463,"results":"156","hashOfConfig":"117"},{"size":2416,"mtime":1623816838462,"results":"157","hashOfConfig":"117"},{"size":979,"mtime":1623805635775,"results":"158","hashOfConfig":"117"},{"size":916,"mtime":1623810181643,"results":"159","hashOfConfig":"117"},{"size":1120,"mtime":1623743778545,"results":"160","hashOfConfig":"117"},{"size":2377,"mtime":1623856057761,"results":"161","hashOfConfig":"117"},{"size":257,"mtime":1624632065262,"results":"162","hashOfConfig":"163"},{"size":3650,"mtime":1626916724745,"results":"164","hashOfConfig":"163"},{"size":546,"mtime":1624632065290,"results":"165","hashOfConfig":"163"},{"size":3542,"mtime":1624632065027,"results":"166","hashOfConfig":"163"},{"size":264,"mtime":1624632065300,"results":"167","hashOfConfig":"163"},{"size":1236,"mtime":1624632065126,"results":"168","hashOfConfig":"163"},{"size":3900,"mtime":1626928809897,"results":"169","hashOfConfig":"163"},{"size":2749,"mtime":1627089368654,"results":"170","hashOfConfig":"163"},{"size":3970,"mtime":1625366590332,"results":"171","hashOfConfig":"163"},{"size":2331,"mtime":1624890140759,"results":"172","hashOfConfig":"163"},{"size":1343,"mtime":1627061705199,"results":"173","hashOfConfig":"163"},{"size":706,"mtime":1624632065124,"results":"174","hashOfConfig":"163"},{"size":4425,"mtime":1624632065195,"results":"175","hashOfConfig":"163"},{"size":6022,"mtime":1628058335603,"results":"176","hashOfConfig":"163"},{"size":2340,"mtime":1627059553185,"results":"177","hashOfConfig":"163"},{"size":5548,"mtime":1626015645253,"results":"178","hashOfConfig":"163"},{"size":5554,"mtime":1627063573844,"results":"179","hashOfConfig":"163"},{"size":2304,"mtime":1626159650231,"results":"180","hashOfConfig":"163"},{"size":618,"mtime":1624632065192,"results":"181","hashOfConfig":"163"},{"size":25993,"mtime":1627062616005,"results":"182","hashOfConfig":"163"},{"size":14568,"mtime":1628059128709,"results":"183","hashOfConfig":"163"},{"size":1708,"mtime":1626997217176,"results":"184","hashOfConfig":"163"},{"size":694,"mtime":1626749128886,"results":"185","hashOfConfig":"163"},{"size":6061,"mtime":1628006364526,"results":"186","hashOfConfig":"163"},{"size":1148,"mtime":1624632065044,"results":"187","hashOfConfig":"163"},{"size":656,"mtime":1627112832012,"results":"188","hashOfConfig":"163"},{"size":2820,"mtime":1624632065033,"results":"189","hashOfConfig":"163"},{"size":1110,"mtime":1624632065029,"results":"190","hashOfConfig":"163"},{"size":717,"mtime":1626015474164,"results":"191","hashOfConfig":"163"},{"size":1426,"mtime":1626750587388,"results":"192","hashOfConfig":"163"},{"size":286,"mtime":1624632065129,"results":"193","hashOfConfig":"163"},{"size":952,"mtime":1626749133200,"results":"194","hashOfConfig":"163"},{"size":5109,"mtime":1624632065122,"results":"195","hashOfConfig":"163"},{"size":5891,"mtime":1624632065119,"results":"196","hashOfConfig":"163"},{"size":5450,"mtime":1628001490051,"results":"197","hashOfConfig":"163"},{"size":1120,"mtime":1624632065032,"results":"198","hashOfConfig":"163"},{"size":6061,"mtime":1626915095003,"results":"199","hashOfConfig":"163"},{"size":221,"mtime":1624632065298,"results":"200","hashOfConfig":"163"},{"size":3304,"mtime":1626947664091,"results":"201","hashOfConfig":"163"},{"size":4162,"mtime":1627062994306,"results":"202","hashOfConfig":"163"},{"size":1273,"mtime":1627062655082,"results":"203","hashOfConfig":"163"},{"size":1763,"mtime":1626745055856,"results":"204","hashOfConfig":"163"},{"size":465,"mtime":1624632065271,"results":"205","hashOfConfig":"163"},{"size":821,"mtime":1626741938318,"results":"206","hashOfConfig":"163"},{"size":1936,"mtime":1626750535689,"results":"207","hashOfConfig":"163"},{"size":633,"mtime":1624632065262,"results":"208","hashOfConfig":"163"},{"size":1643,"mtime":1624632065262,"results":"209","hashOfConfig":"163"},{"size":1423,"mtime":1624632065262,"results":"210","hashOfConfig":"163"},{"size":1089,"mtime":1624632065271,"results":"211","hashOfConfig":"163"},{"size":916,"mtime":1624632065271,"results":"212","hashOfConfig":"163"},{"size":898,"mtime":1624632065262,"results":"213","hashOfConfig":"163"},{"size":3867,"mtime":1627358524909,"results":"214","hashOfConfig":"163"},{"size":2558,"mtime":1627059202277,"results":"215","hashOfConfig":"163"},{"size":1199,"mtime":1626917048875,"results":"216","hashOfConfig":"163"},{"size":1408,"mtime":1627063332213,"results":"217","hashOfConfig":"163"},{"size":1818,"mtime":1626751573134,"results":"218","hashOfConfig":"163"},{"size":1771,"mtime":1626015663453,"results":"219","hashOfConfig":"163"},{"size":1254,"mtime":1624719813475,"results":"220","hashOfConfig":"163"},{"size":4487,"mtime":1626944720789,"results":"221","hashOfConfig":"163"},{"size":289,"mtime":1626539430225,"results":"222","hashOfConfig":"163"},{"size":4272,"mtime":1626915095003,"results":"223","hashOfConfig":"163"},{"size":1659,"mtime":1626944284238,"results":"224","hashOfConfig":"163"},{"size":7605,"mtime":1628038503652,"results":"225","hashOfConfig":"163"},{"size":0,"mtime":1626917062842,"results":"226","hashOfConfig":"163"},{"size":1583,"mtime":1628039653640,"results":"227","hashOfConfig":"163"},{"size":1452,"mtime":1628040213676,"results":"228","hashOfConfig":"163"},{"size":1679,"mtime":1628061827025,"results":"229","hashOfConfig":"163"},{"size":1850,"mtime":1628063366973,"results":"230","hashOfConfig":"163"},{"size":2027,"mtime":1628063845150,"results":"231","hashOfConfig":"163"},{"size":1979,"mtime":1628061353299,"results":"232","hashOfConfig":"163"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},"1rtdnpg",{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"235"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"235"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"235"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"235"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"235"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"235"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"235"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"235"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"235"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"235"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"235"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"235"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},"bs3a05",{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"338"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"338"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"338"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"380","usedDeprecatedRules":"338"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"338"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"338"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"338"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"338"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"338"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"338"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"338"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"338"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"338"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"338"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"338"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"338"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"338"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\index.js",[],["494","495"],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\App.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\store.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Login.js",["496"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport \"../../App.css\";\nimport '../../css/bootstrap.min.css';\n\n/**\n * Functional component for login page, allows client to\n * change the fields on the login page, as well as log into\n * their account provided their credentials are correct. \n * Parameters will be destructured props\n * @param login Our login action which will dispatch LOGIN_SUCCESS if successfully logged in with provided \n * email and password\n * @param isAuthenticated A boolean state in auth, to ensure that \n * authenticated users who are logged in will be directed to dashboard\n */\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = a => {\n    a.preventDefault();\n    login(formData.email, formData.password);\n  };\n\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Fragment>\n            <div className =\"box-body\">\n              <h1 className=\"large text-primary\">Sign In</h1>\n              \n              <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                      <input\n                        type=\"email\"\n                        placeholder=\"NUS Email Address\"\n                        name=\"email\"\n                        value={formData.email}\n                        onChange={onChange}\n                        required\n                      />\n                </div>\n\n                <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      value={formData.password}\n                      onChange={onChange}\n                      minLength=\"7\"\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" value=\"Login\" />\n              </form>\n             \n            </div>\n    </Fragment>\n  );\n}; \n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\CreateProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\EditProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\MyProfile.js",["497"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst MyProfile = ({ getCurrentProfile, auth: { user }, profile : { profile, loading } }) => {\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n      getCurrentProfile();\r\n    },[]);\r\n  \r\n    return (\r\n      <Fragment>\r\n          { loading || profile.user._id !== user._id ? (\r\n            <Spinner /> ):\r\n        <Fragment> \r\n            <h1 className=\"large\"> \r\n              {user.name}'s Profile  \r\n              <br/> \r\n              <img className=\"profiledp\" src={user.avatar} alt=\"\"/>\r\n            </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n          <p> <strong> Your Interests: </strong></p>\r\n        <ul>\r\n          {profile.interests.map(item => {\r\n              return <li>{item}</li>;\r\n            })}\r\n        </ul>\r\n\r\n        <div className =\"my-2\"> \r\n            <Link to ='/edit-profile' className=\"btn btn-primary my-1\"> Update Profile </Link>\r\n          \r\n          <> </>\r\n          <Link to=\"/dashboard\" className=\"btn btn-dark join-all\">\r\n            Home\r\n          </Link>\r\n          \r\n         \r\n          </div>\r\n        </Fragment> \r\n    }\r\n    </Fragment>\r\n  );\r\n}\r\n   \r\n  \r\n  MyProfile.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n  });\r\n  \r\n  export default connect(mapStateToProps, { getCurrentProfile })(MyProfile);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\UserProfile.js",["498"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfilesById } from '../../actions/profile';\r\nimport { authUser } from '../../actions/auth'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {createChat} from '../../actions/chat';\r\n\r\n\r\nconst UserProfile = ({ createChat, chat:{chats}, authUser, getProfilesById, profile: { profile, loading }, auth, match, history}) => {\r\n\r\n  const chatID = [];\r\n  if (chats.length > 0) {\r\n    chats.map(chat => {\r\n      chatID.push(chat.users.find(id => id !== auth.user._id));\r\n    })\r\n  }\r\n  \r\n\r\n  const startNewConvo= () => {\r\n      try {\r\n        if (!chatID.includes(profile.user._id)) {\r\n            const formData = {\r\n                receiver: profile.user._id\r\n            }\r\n            createChat(formData, history)\r\n        } else {\r\n            history.push('/messagebox')\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n  \r\n\r\n  const [followed, toggle] = useState(\r\n    auth.user.followings.includes(match.params.id)\r\n  );\r\n\r\n  useEffect(() => {\r\n    authUser();\r\n  });\r\n\r\n\r\n  //cannot rerender if not clicking directly on the main page will conflict with main page rerender\r\n  useEffect(() => {\r\n      getProfilesById(match.params.id);\r\n      // eslint-disable-next-line\r\n    },[getProfilesById]);\r\n\r\n\r\n  const followUnfollow = () => {\r\n      try {\r\n        if (!followed) {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/follow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        } else {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/unfollow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        }\r\n      }catch (err) { \r\n        console.log(err.status)\r\n      }\r\n    };\r\n    \r\n    if (profile === null || loading) {\r\n      return < Spinner />\r\n    } else {\r\n      if (profile.user._id === auth.user._id) {\r\n        return <Spinner />\r\n      } else {\r\n        return <Fragment>\r\n            <h1> {profile.user.name}'s Profile  </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n            <p> <strong> Your Interests: </strong></p>\r\n                <ul>\r\n                {profile.interests.map(item => {\r\n                    return <li>{item}</li>;\r\n                    })}\r\n                </ul>\r\n            \r\n            {profile.hasOwnProperty(\"social\")  && <Fragment>\r\n              <p> <strong> Social Media: </strong> </p>\r\n                  <ul>\r\n                      {profile.social.hasOwnProperty(\"facebook\") && <Fragment> <li><i class=\"fab fa-facebook\"/> {\" \"} {profile.social.facebook}</li> </Fragment> }\r\n                      {profile.social.hasOwnProperty(\"instagram\") && <Fragment> <li><i class=\"fab fa-instagram\"/> {\" \"} {profile.social.instagram}</li> </Fragment> }\r\n                  </ul>\r\n            </Fragment>\r\n            }\r\n\r\n            <Link to=\"/profiles\" className=\"btn btn-secondary\">\r\n            Find more Friends\r\n            </Link>\r\n            <>  </>\r\n            {!followed && auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-dark\">\r\n                  <i class=\"fas fa-user-plus\"/>   Follow\r\n                </button>\r\n                ) \r\n            }\r\n\r\n            {followed && auth.isAuthenticated &&\r\n                auth.loading === false && \r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-success\">\r\n                   <i class=\"fas fa-user-minus\"/>   Unfollow\r\n                </button>\r\n                ) \r\n            }\r\n            \r\n            <>  </>\r\n            {auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {startNewConvo()}} type=\"button\" className=\"btn btn-primary my-1\"> <i class=\"fas fa-comment-dots\"/>\r\n                    {\" \"} Message\r\n                 </button>\r\n                ) \r\n            }\r\n        </Fragment>\r\n      }\r\n    }\r\n  };\r\n\r\n\r\nUserProfile.propTypes = {\r\n    getProfilesById: PropTypes.func.isRequired,\r\n    authUser: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth,\r\n    chat: state.chat\r\n})\r\n\r\nexport default connect(mapStateToProps, { authUser, getProfilesById, createChat })(withRouter(UserProfile));","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\Dashboard.js",["499"],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\Profiles.js",["500"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport ProfileItem from './ProfileItem'\nimport { clearProfile, getProfiles } from '../../actions/profile';\n\nconst Profiles = ({clearProfile, getProfiles, profile: { profiles, loading }, auth}) => {\n    useEffect(()  => {\n        getProfiles();\n    }, [getProfiles]);\n\n    //additional clear profile to clear out dashboard rerendering\n    useEffect(()  => {\n        clearProfile();\n    }, [clearProfile]);\n\n\n    const displayAll = profiles.length <= 0 ? <h4>No profiles found</h4> : \n        profiles.map(profile => {\n            if (profile.user._id !== auth.user._id) {\n                return <ProfileItem key = {profile._id} profile ={profile} />\n            }\n        })\n\n    return <Fragment> \n        { loading ? <Spinner /> : <Fragment>\n            <h1 className = \"large text-dark big-header\"> Sports Enthusiasts of NUS </h1>\n\n            <div className =\"input-group my-3\">\n                <input type=\"search\" className =\"form-control rounded\" placeholder=\"Search\" aria-label=\"Search\"\n                    aria-describedby=\"search-addon\" />\n                <button type=\"button\" class=\"btn btn-outline-primary\">search</button>\n            </div>\n            <div className=\"profiles\">\n                {displayAll}\n            </div>\n\n        </Fragment>}\n    </Fragment>\n    \n}\n  \nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    clearProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n};\n  \nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    auth: state.auth\n});\n\n  \nexport default connect(mapStateToProps, { clearProfile, getProfiles})(Profiles);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\types.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\ProfileItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendList.js",["501"],"import { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport FriendItem from \"./FriendItem\";\n\n\nconst FriendList = ({auth: { user }, chat:{chats}}) => {\n\n    const [friends, setFriends] = useState([]);\n\n\n    useEffect(() => {\n        const getFriends = async () => {\n          try {\n            const friendList = await axios.get(\"/api/users/friends/\" + user._id);\n            setFriends(friendList.data);\n          } catch (err) {\n            console.log(err);\n          }\n        };\n        getFriends()\n      });\n    \n    \n\n    return (\n      \n      <div className=\"card\">\n          <div className=\"card-header\">\n              <strong> My Friends ({friends.length}) </strong>\n          </div>\n        \n          <ul className=\"list-group list-group-flush\">\n            {friends.map((friend) => (\n                <FriendItem friend ={friend}/>\n           ))}\n          </ul>\n        </div>\n       \n    )\n}\n\n\nFriendList.propTypes = {\n  auth: PropTypes.object.isRequired,\n  chat: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    chat: state.chat\n});\n\nexport default connect(mapStateToProps)(FriendList);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\index.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\Games.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameRoom.js",["502","503","504","505","506"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { authUser } from '../../actions/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { getGameById } from '../../actions/game';\r\nimport { clearProfile } from '../../actions/profile';\r\nimport axios from 'axios';\r\nimport dateformat from '../../utils/dateformat';\r\nimport GameChat from './GameChat';\r\nimport { getChats } from '../../actions/chat';\r\nimport { getGameChat, createGameChat } from '../../actions/gamechat';\r\n\r\n\r\nconst GameRoom = ({ getGameChat, createGameChat, clearProfile, getGameById, authUser, auth, game : {game, loading}, match, gamechat: {gamechat} }) => {\r\n\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const [chatStatus, startChat] = useState(\r\n        messages.length === 0\r\n    );\r\n    \r\n  \r\n    \r\n    const startNewConvo= () => {\r\n        try {\r\n            const formData = {\r\n                room: game._id\r\n            }\r\n            createGameChat(formData)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n    }\r\n\r\n    const quitGame = () => {\r\n        try {\r\n            axios.put(`/api/games/quit/${game._id}`);\r\n        } catch (err) { \r\n            console.log(err.status)\r\n        }\r\n      };\r\n    \r\n    const joinGame = () => {\r\n        try {\r\n            axios.put(`/api/games/join/${game._id}`);\r\n        } catch (err) { \r\n            console.log(err.status)\r\n        }\r\n      };\r\n\r\n    useEffect(() => {\r\n        getGameChat(match.params.id);\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        getGameById(match.params.id);\r\n    });\r\n    \r\n    useEffect(() => {\r\n        authUser();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        clearProfile();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    if (game === null || loading || gamechat === null) {\r\n        return(\r\n            <Fragment>\r\n                <Spinner />\r\n            </Fragment>\r\n        ) \r\n    } else {\r\n        return (\r\n            <Fragment>\r\n                <h1 className=\"text-primary my-3 my-btm\"> {game.name}'s Game Lobby  </h1>\r\n                <div className=\"row\">\r\n                <div className=\"card-body\">\r\n                <Link to=\"/all-games\" className=\"btn btn-dark join-all\"> <i class=\"fas fa-sign-out-alt\" /> Leave Lobby </Link>\r\n                </div>\r\n                </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                            <h5 className=\"card-title my-3 host-title\">{game.sport}</h5>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Experience Level: </span> {game.experience}</p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"?game.otherLoc:game.location}</p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Date: </span> {dateformat(game.dateTime)} </p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Max Players: </span> {game.maxPlayers} </p>\r\n                                <br></br>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                <h5 className=\"card-title my-3 host-title\">Players In Waiting Room : {game.players.length} </h5>\r\n                                {game.players.length > 0 && game.players.map(player => { \r\n                                    if (player.user === auth.user._id) {\r\n                                        return (\r\n                                            <Fragment>\r\n                                            <div className=\"card mb-3\">\r\n                                            <div className=\"card-body player-card\">\r\n                                                {player.name}\r\n                                                <button onClick= {()=> {\r\n                                                    quitGame();\r\n                                                }} type=\"button\" className=\"btn btn-danger btn-round join-all\"> <i class=\"far fa-times-circle\"/> </button>\r\n                                            </div>\r\n                                            </div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    } else {\r\n                                        return (\r\n                                            <Fragment>\r\n                                            <div className=\"card mb-3\">\r\n                                            <div className=\"card-body player-card\">\r\n                                                <Link to={`/profile/${player.user}`}> {player.name} </Link> \r\n                                            </div>\r\n                                            </div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    }\r\n                                })}\r\n                                <p> { game.players.length < game.maxPlayers && game.players.filter(player => \r\n                                    player.user === auth.user._id).length === 0  && \r\n                                    <button onClick= {()=> {\r\n                                        joinGame();\r\n                                    }} type=\"button\" className=\"btn btn-primary join-all\"> Join Game </button>}\r\n                                </p>\r\n\r\n                                <h5> { game.players.length >= game.maxPlayers && <span class=\"badge badge-light\">\r\n                                    Waiting Room is Currently Full</span>}</h5>\r\n                             \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"row g-0\">\r\n                                <div className=\"col-md-4\">\r\n                                    <img height=\"195\" width =\"195\" src={game.avatar} className=\"round-img\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                    <h5 className=\"card-title my-3 host-title \">About Game Host </h5>\r\n                                    <p className=\"card-text\"> <span className='text-primary'> Host Name: </span> {game.name}</p>\r\n                                    <small className=\"card-text text-muted\"> Room Created: {dateformat(game.createTime)} </small>\r\n                                    <br></br>\r\n                                </div>\r\n                            </div>\r\n                                {game.user !== auth.user._id &&  <Link to={`/profile/${game.user}`} className=\"btn btn-dark btn-lg btn-block\"> View Host Profile </Link>}\r\n                                {game.user === auth.user._id &&  <Link to=\"#!\" className=\"btn btn-dark btn-lg btn-block\"> <i class=\"fas fa-cog\"/> Game Settings </Link>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 col-md-12\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title my-3 host-title \"> Game Chat</h5>\r\n                                </div>\r\n\r\n                                { gamechat.length === 0 && game.user !== auth.user._id &&\r\n                                    <Fragment>\r\n                                        <h1 className =\"badge badge-danger\"> Game Chat has not been enabled </h1>\r\n                                    </Fragment>\r\n                                }\r\n\r\n                                { (gamechat.length === 0 && game.user === auth.user._id) \r\n                                    && <button type=\"button\" onClick = {()=> {startNewConvo()}} className=\"btn btn-success btn-lg btn-block \">\r\n                                      Enable Chat\r\n                                </button> }\r\n\r\n                                { gamechat.length > 0 &&  <GameChat />}\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nGameRoom.propTypes = {\r\n    getGameById: PropTypes.func.isRequired,\r\n    authUser: PropTypes.func.isRequired,\r\n    clearProfile: PropTypes.func.isRequired,\r\n    createGameChat: PropTypes.func.isRequired,\r\n    getGameChat: PropTypes.func.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    game: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    gamechat: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    game: state.game,\r\n    auth: state.auth,\r\n    gamechat: state.gamechat\r\n})\r\n\r\nexport default connect(mapStateToProps, { getGameChat, createGameChat, clearProfile, getGameById, authUser })(GameRoom);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\dateformat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\CreateGame.js",["507"],"import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createGame } from '../../actions/game';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst CreateGame = ({ createGame, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        sport: '',\r\n        location: '',\r\n        otherLoc: '',\r\n        experience: '',\r\n        maxPlayers: '',\r\n        dateTime: Date.now,\r\n        createTime: Date.now,\r\n    });\r\n    \r\n    const {\r\n       sport,\r\n       location,\r\n       otherLoc,\r\n       experience,\r\n       maxPlayers,\r\n       dateTime,\r\n       createTime,\r\n    } = formData;\r\n\r\n    const sports = [\r\n        { sport: \"Badminton\", locations:[\"Kent Ridge - MPSH 5\", \"UTown - Sports Hall 1\"], \r\n            maxPlayers:[\"2\",\"3\",\"4\",\"5\",\"6\"] },\r\n        { sport: \"Basketball\", locations:[\"Eusoff Hall\", \"NUS Sports & Recreation Centre\",\"Temasek Hall\",\"Others\"], \r\n        maxPlayers:[\"4\",\"6\",\"8\",\"9\",\"10\"] },\r\n        { sport: \"Frisbee\", locations:[\"Kent Ridge - Multi-Purpose Fields\",\"Utown - Open Field\",\"Others\"], \r\n        maxPlayers:[\"4\",\"6\",\"8\",\"9\",\"10\"] },\r\n        { sport: \"Running\", locations:[\"Kent Ridge - Running Field\", \"West Coast Park\",\"Others\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\"] },\r\n        { sport: \"Squash\", locations:[\"Kent Ridge - Squash Courts\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\"] },\r\n        { sport: \"Swimming\", locations:[\"NUS Sports & Recreation Centre\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\"] },\r\n        { sport: \"Table Tennis\", locations:[\"Kent Ridge - MPSH 2\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\",\"6\"] },\r\n        { sport: \"Tennis\", locations:[\"Kent Ridge - Outdoor Tennis Courts\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\",\"6\"] },\r\n      ];\r\n\r\n    const setToday = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 1;\r\n        var yyyy = today.getFullYear();\r\n        var hh = today.getHours() + 1;\r\n        var mins = \"00\";\r\n\r\n        if (dd<10) {\r\n            dd = \"0\" + dd;\r\n        }\r\n\r\n        if (mm<10) {\r\n            mm = \"0\" + mm;\r\n        }\r\n\r\n\r\n        if (hh<10) {\r\n            hh = \"0\" + hh;\r\n        }\r\n\r\n        if (hh===24) {\r\n            hh = \"00\";\r\n        }\r\n\r\n        today = yyyy+'-'+mm+'-'+dd+'T'+hh+\":\"+mins;\r\n        document.getElementById(\"datefield\").setAttribute(\"min\", today);\r\n    }\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const locationChange = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value});\r\n        if (e.target.value!==\"Others\" && formData.otherLoc!=='') {\r\n            document.getElementById('otherLoc').value = '';\r\n        }\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createGame(formData, history);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className =\"container\">\r\n            <h1 className=\"large my-btm\"> <i class=\"fas fa-football-ball\"/> {\" \"}\r\n                Host Your Own Game\r\n            </h1>\r\n\r\n            <form className=\"form2\" onSubmit = {data => onSubmit(data)}>\r\n                <div className=\"form-group2\">\r\n                    <select name=\"sport\" value={sport} onChange = {e=> onChange(e)}>\r\n                        <option value=\"\" disabled selected hidden> Sport </option>\r\n                        {sports.map(sport => {\r\n                            return <option>{sport.sport}</option>\r\n                        })}\r\n                    </select> \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group2\">\r\n                            <select name=\"location\" value={location} onChange = {e=> locationChange(e)}>\r\n                                <option value=\"\" disabled selected hidden>Location</option>\r\n                                {sports.filter(sport => sport.sport===formData.sport).map(\r\n                                    sport => sport.locations.map(location => {return <option>{location}</option>}))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group2\">\r\n                            {formData.location===\"Others\" && \r\n                            <Fragment>\r\n                            <input \r\n                                    id=\"otherLoc\"\r\n                                    type=\"text\" \r\n                                    name=\"otherLoc\" \r\n                                    value={otherLoc} \r\n                                    placeholder=\"Other Locations\" \r\n                                    onChange = {e=> onChange(e)}/>\r\n                             <small className=\"form-text\"> Facilities booking for these locations will not be allowed within (Match) Maker </small>\r\n                            </Fragment>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group2\">\r\n                    <select name=\"experience\" value={experience} onChange = {e=> onChange(e)}>\r\n                            <option value=\"\" disabled selected hidden>Experience Level</option>\r\n                            <option>Beginner</option>\r\n                            <option>Intermediate</option>\r\n                            <option>Expert</option>\r\n                    </select> \r\n                </div>\r\n               \r\n               \r\n                <div className=\"form-group2\">\r\n                    <select name=\"maxPlayers\" value={maxPlayers} onChange = {e=> onChange(e)}>\r\n                            <option value=\"\" disabled selected hidden>Max Number of Players</option>\r\n                            {sports.filter(sport => sport.sport===formData.sport).map(\r\n                                sport => sport.maxPlayers.map(player => {return <option>{player}</option>}))\r\n                            }\r\n                    </select> \r\n                </div>\r\n\r\n                <div className=\"form-group row my-btm\">\r\n                    <div className=\"col-md-2\"> <h5> Date and Time </h5> </div>\r\n                    <input \r\n                        id=\"datefield\"\r\n                        name=\"dateTime\"\r\n                        type=\"datetime-local\"\r\n                        value={dateTime}\r\n                        onChange={e => onChange(e)}\r\n                        onClick={setToday}\r\n                        className=\"col-md-6\"\r\n                        max=\"2022-06-14T00:00\"\r\n                    />\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-3\" />\r\n\r\n                <>   </>\r\n                <Link className=\"btn btn-light my-3\" to=\"/all-games\">Go Back</Link>\r\n            </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nCreateGame.propTypes = {\r\n    createGame: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {createGame}) (withRouter(CreateGame))\r\n\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\AccountSettings.js",["508"],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\MessageBox.js",["509"],"import React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport Chat from './Chat';\r\nimport Message from './Message';\r\nimport { getChats } from '../../actions/chat';\r\nimport axios from 'axios';\r\nimport ChatBG from '../../img/ChatBG.png'\r\n\r\n//main page for display of all conversations and messages \r\nconst MessageBox = ({getChats, auth: { user }, chat : {chats}}) => {\r\n    const [currChat, setChat] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [formData, setFormData] = useState(\"\");\r\n    const [friendImg, setImg] = useState(null);\r\n    const scroll = useRef();\r\n\r\n    useEffect(() => {\r\n        getChats();\r\n      }, [getChats]);\r\n\r\n      useEffect(() => async () => {\r\n        try {\r\n          if (currChat !== null) {\r\n          const friendId = currChat.users.find((u)=> u !== user._id);\r\n          const res = await axios.get(`/api/profile/user/${friendId}`);\r\n          const img = res.data.user.avatar;\r\n          setImg(img);\r\n          } \r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n    useEffect(() => {\r\n        const getMessages = async () => {\r\n          try {\r\n            const res = await axios.get(`/api/message/${currChat._id}`);\r\n            setMessages(res.data);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        getMessages();\r\n      }, [currChat]);\r\n\r\n    const onSubmit = async (e) => {\r\n      e.preventDefault();\r\n      const message = {\r\n        text: formData\r\n      }\r\n\r\n      try {\r\n        if (message.text !== \"\"){\r\n          const res = await axios.post(`/api/message/${currChat._id}`, message);\r\n          setMessages([...messages, res.data])\r\n          setFormData(\"\")\r\n        } \r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      scroll.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n  \r\n    \r\n    return <Fragment>\r\n        <div className =\"row\">\r\n        <div className=\"col-sm-4 col-md-4 chatbg-dark\">\r\n        <Link to ='/profiles' className=\"btn btn-outline-primary my-top\"> Find More Friends <i class=\"fas fa-plus\"/> </Link>\r\n            {chats.map((chat=> (\r\n                <div onClick ={()=> setChat(chat)}>\r\n                    <Chat chat = {chat}/> \r\n                </div>\r\n            )))}\r\n        </div>\r\n        {currChat ? \r\n        <Fragment>             \r\n        <div className=\"col-sm-8 col-md-8 namebox chatbg-dark\">\r\n        <h4 className=\"nametext my-btm\"> \r\n          {currChat === null ? <></> : currChat.names.find(name => name !== user.name)} \r\n          <img className=\"chatboxdp\" src={friendImg} alt=\"\"/>      \r\n        </h4>     \r\n            <div className=\"chatbox chatbg\">\r\n                {messages.map((msg) => (\r\n                    <div ref = {scroll}>\r\n                      <Message message={msg} sent={msg.sender === user._id} />\r\n                    </div>\r\n                  ))}\r\n            </div>\r\n            <div className =\"input-group my-top\">\r\n            <textarea \r\n                type=\"text\" \r\n                className =\"form-control rounded\" \r\n                placeholder=\"Type Something\" \r\n                onChange={(e)=>setFormData(e.target.value)}\r\n                value = {formData}\r\n                />\r\n            <button type=\"button\" class=\"btn btn-outline-primary my-right\" onClick={onSubmit}> <i class=\"fas fa-paper-plane\" /> </button>\r\n            </div>\r\n        </div>\r\n        </Fragment> : \r\n        <div className=\"col-sm-8 col-md-8 emptychat\">\r\n          <h3 className =\"emptychattextln1\">Howdy, {user.name}!</h3>\r\n          <h3 className =\"emptychattextln2\">Open a Conversation to Start Chatting :-)</h3>\r\n          <br/>\r\n          <img className=\"emptychatimg\" src={ChatBG} alt=\"ChatBG\"/>\r\n          </div>\r\n        }\r\n        </div>\r\n    </Fragment> \r\n}\r\n\r\n\r\nMessageBox.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, {getChats})(MessageBox);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Message.js",["510","511"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {format} from 'timeago.js'\r\n\r\nconst Message = ({auth: { user }, sent, message}) => {\r\n\r\n  return (\r\n    <Fragment>\r\n       <div className={sent ? \"message sent\" : \"message\"}>\r\n        <div className=\"toptext\">\r\n          <p className=\"messagetext\">{message.text}</p>\r\n        </div>\r\n        <div className=\"text-muted btmtext\">{format(message.createdAt)}</div>\r\n      </div>\r\n      </Fragment>\r\n  );\r\n}\r\n\r\n\r\nMessage.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth,\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, {})(Message);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Chat.js",["512"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nconst Chat = ({auth : {user} , chat , loading }) => {\r\n  const [otherUser, setUser] = useState(null);\r\n  const [friendImg, setImg] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    const friendName = chat.names.find((name)=> name !== user.name);\r\n    setUser(friendName);\r\n  });\r\n\r\n  useEffect(() => async () => {\r\n    try {\r\n    const friendId = chat.users.find((u)=> u !== user._id);\r\n      const res = await axios.get(`/api/profile/user/${friendId}`);\r\n      const img = res.data.user.avatar;\r\n      setImg(img);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  });\r\n\r\n    if (loading || otherUser == null) {\r\n      return null;\r\n    }\r\n    else {\r\n      return <Fragment>\r\n        <div className=\"conversation my-top-small\">\r\n          <img className=\"chatdp\" src={friendImg} alt=\"\"/>\r\n          <span className=\"conversationName\">{otherUser}</span>\r\n        </div>\r\n      </Fragment>\r\n    }\r\n}\r\n\r\n\r\n\r\nChat.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth\r\n});\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, {})(Chat);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendItem.js",["513","514"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createChat, getChats } from '../../actions/chat';\r\n\r\n\r\nconst FriendItem = ({createChat, getChats, auth: { user }, friend, chat:{chats}, history}) => {\r\n    useEffect(() => {\r\n        getChats();\r\n      }, [getChats]);\r\n\r\n    const chatID = [];\r\n    \r\n    chats.map(chat => {\r\n        chatID.push(chat.users.find(id => id !== user._id));\r\n    })\r\n\r\n    const startNewConvo= () => {\r\n        try {\r\n          if (!chatID.includes(friend._id)) {\r\n              const formData = {\r\n                  receiver: friend._id\r\n              }\r\n              createChat(formData, history)\r\n          } else {\r\n              history.push('/messagebox')\r\n          }\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n    }\r\n  \r\n\r\n    return (\r\n        <Fragment>\r\n        <li className=\"list-group-item\"> \r\n                {friend.name}  \r\n                <button onClick= {()=> {startNewConvo()}} type=\"button\" className=\"btn btn-dark join-all\">\r\n                <i class=\"fas fa-comment-dots\"/> \r\n                </button>\r\n            </li> \r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nFriendItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, {getChats, createChat})(withRouter(FriendItem));\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameChat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameMessage.js",["515","516","517","518"],"import React, { Fragment, useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {format} from 'timeago.js'\r\nimport axios from 'axios';\r\n\r\n\r\nconst GameMessage = ({auth: { user }, message}) => {\r\n\r\n  const sent = message.name === user.name;\r\n\r\n  return <Fragment>\r\n       <div className={sent ? \"message sent\" : \"message\"}>\r\n        <p>{message.name}</p> \r\n        <div className=\"toptext\">\r\n          {sent ? <></> : <img className=\"gamechatdp\" src={message.avatar} alt=\"\"/>}\r\n          <p className=\"messagetext\">{message.text}</p>\r\n        </div>\r\n        <div className=\"text-muted btmtext\">{format(message.createdAt)}</div>\r\n      </div>\r\n      </Fragment>\r\n\r\n}\r\n\r\n\r\nGameMessage.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth,\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps)(GameMessage);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\PasswordChange.js",["519"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\index.js",[],["520","521"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\App.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\store.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\PasswordChange.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\AccountSettings.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\CreateProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Dashboard.js",["522"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\MyProfile.js",["523","524"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport FriendList from './FriendList';\r\nimport Request from './Request';\r\n\r\nconst MyProfile = ({ getCurrentProfile, auth: { user }, profile : { profile, loading } }) => {\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n      getCurrentProfile();\r\n    },[]);\r\n  \r\n    return (\r\n      <Fragment>\r\n          {loading || (profile && profile.user._id !== user._id) ? (\r\n            <Spinner /> ):\r\n        <Fragment> \r\n          <h1 className=\"large\"> \r\n              {user.name}'s Profile  </h1>\r\n           <div className =\"row\">  \r\n            <br/> \r\n              <div className=\"col-sm-6 col-md-6\">\r\n             <h1> <img className=\"profiledp\" src={user.avatar} alt=\"\"/>\r\n            </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n          <p> <strong> Your Interests: </strong></p>\r\n            <ul>\r\n              {profile.interests.map(item => {\r\n                  return <li key = {item._id}>{item}</li>;\r\n                })}\r\n            </ul>\r\n\r\n        <div className =\"my-2\"> \r\n            <Link to ='/edit-profile' className=\"btn btn-primary my-1\"> Update Profile </Link>\r\n          \r\n          <> </>\r\n          <Link to=\"/dashboard\" className=\"btn btn-dark join-all\">\r\n            Home\r\n          </Link>         \r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-6 col-md-6\">\r\n              <FriendList />\r\n            </div>\r\n          </div>\r\n        </Fragment> \r\n    }\r\n    </Fragment>\r\n  );\r\n}\r\n   \r\n  \r\n  MyProfile.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n  });\r\n  \r\n  export default connect(mapStateToProps, { getCurrentProfile })(MyProfile);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\EditProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\UserProfile.js",["525"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfilesById } from '../../actions/profile';\r\nimport { authUser } from '../../actions/auth'\r\nimport { Link, withRouter, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {createChat} from '../../actions/chat';\r\n\r\n\r\nconst UserProfile = ({ createChat, chat:{chats}, authUser, getProfilesById, profile: { profile, loading }, auth, match, history}) => {\r\n\r\n\r\n  const chatID = [];\r\n  if (chats.length > 0) {\r\n    chats.map(chat => {\r\n      chatID.push(chat.users.find(id => id !== auth.user._id));\r\n    })\r\n  }\r\n  \r\n\r\n  const startNewConvo= () => {\r\n      try {\r\n        if (!chatID.includes(profile.user._id)) {\r\n            const formData = {\r\n                receiver: profile.user._id\r\n            }\r\n            createChat(formData, history)\r\n        } else {\r\n            history.push('/messagebox')\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n  \r\n\r\n  const [followed, toggle] = useState(\r\n    auth.user.followings.includes(match.params.id)\r\n  );\r\n\r\n  useEffect(() => {\r\n    authUser();\r\n  });\r\n\r\n\r\n  //cannot rerender if not clicking directly on the main page will conflict with main page rerender\r\n  useEffect(() => {\r\n      getProfilesById(match.params.id);\r\n      // eslint-disable-next-line\r\n    },[getProfilesById]);\r\n\r\n  let hist = useHistory();\r\n  const goToPreviousPath = () => {\r\n      hist.goBack()\r\n  }\r\n\r\n\r\n  const followUnfollow = () => {\r\n      try {\r\n        if (!followed) {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/follow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        } else {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/unfollow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        }\r\n      }catch (err) { \r\n        console.log(err.status)\r\n      }\r\n    };\r\n    \r\n    if (profile === null || loading) {\r\n      return < Spinner />\r\n    } else {\r\n        return <Fragment>\r\n            <h1> {profile.user.name}'s Profile  </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n            <p> <strong> Your Interests: </strong></p>\r\n                <ul>\r\n                {profile.interests.map(item => {\r\n                    return <li key={item}>{item}</li>;\r\n                    })}\r\n                </ul>\r\n            \r\n            {profile.hasOwnProperty(\"social\")  && <Fragment>\r\n              <p> <strong> Social Media: </strong> </p>\r\n                  <ul>\r\n                      {profile.social.hasOwnProperty(\"facebook\") && <Fragment> <li><i className=\"fab fa-facebook\"/> {\" \"} {profile.social.facebook}</li> </Fragment> }\r\n                      {profile.social.hasOwnProperty(\"instagram\") && <Fragment> <li><i className=\"fab fa-instagram\"/> {\" \"} {profile.social.instagram}</li> </Fragment> }\r\n                  </ul>\r\n            </Fragment>\r\n            }\r\n\r\n            <Link to=\"/profiles\" className=\"btn btn-secondary\">\r\n            Find more Friends\r\n            </Link>\r\n            <>  </>\r\n            {!followed && auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-success\">\r\n                  <i className=\"fas fa-user-plus\"/>   Follow\r\n                </button>\r\n                ) \r\n            }\r\n\r\n            {followed && auth.isAuthenticated &&\r\n                auth.loading === false && \r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-danger\">\r\n                   <i className=\"fas fa-user-minus\"/>   Unfollow\r\n                </button>\r\n                ) \r\n            }\r\n            \r\n            <>  </>\r\n            {auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && \r\n                auth.user.followings.find(id => id === profile.user._id) !== undefined &&\r\n                auth.user.followers.find(id => id === profile.user._id) !== undefined &&(\r\n                <button onClick= {()=> {startNewConvo()}} type=\"button\" className=\"btn btn-primary my-1\"> <i className=\"fas fa-comment-dots\"/>\r\n                    {\" \"} Message\r\n                 </button>\r\n                ) \r\n            }\r\n             <button onClick={goToPreviousPath} type=\"button\" className=\"btn btn-dark join-all my-btm\">Return</button>\r\n        </Fragment>\r\n      }\r\n  };\r\n\r\n\r\nUserProfile.propTypes = {\r\n    getProfilesById: PropTypes.func.isRequired,\r\n    authUser: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth,\r\n    chat: state.chat\r\n})\r\n\r\nexport default connect(mapStateToProps, { authUser, getProfilesById, createChat })(withRouter(UserProfile));","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\Profiles.js",["526","527","528"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport ProfileItem from './ProfileItem'\r\nimport { clearProfile, getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({clearProfile, getProfiles, profile: { profiles, loading }, auth}) => {\r\n    const [searchterm, setSearch] = useState('')\r\n\r\n    useEffect(()  => {\r\n        getProfiles();\r\n    }, [getProfiles]);\r\n\r\n    //additional clear profile to clear out dashboard rerendering\r\n    useEffect(()  => {\r\n        clearProfile();\r\n    }, [clearProfile]);\r\n\r\n\r\n    const displayAll = profiles.map(profile => {\r\n            if (profile.user._id !== auth.user._id) {\r\n                return <ProfileItem key = {profile._id} profile ={profile} />\r\n            }\r\n        })\r\n\r\n    return <Fragment> \r\n        { loading || displayAll.length===0 ? <Spinner /> : <Fragment>\r\n            <h1 className = \"large text-dark big-header\"> Friends in NUS </h1>\r\n            <h5>Search for Friends :</h5>\r\n            <input type=\"search\" className =\"form-control rounded my-3\" placeholder=\"Find Friend\" aria-label=\"Search\"\r\n            onChange={event => {setSearch(event.target.value)}} />\r\n         \r\n            <div className=\"profiles\">\r\n                {profiles.filter( p => {\r\n                    if (searchterm === \"\") {\r\n                        return p\r\n                    } \r\n                    if (p.user.name.toLowerCase().includes(searchterm.toLowerCase())) {\r\n                        return p\r\n                    }\r\n                }).map(profile => {\r\n                    if (profile.user._id !== auth.user._id) {\r\n                        return <ProfileItem key = {profile._id} profile ={profile} />\r\n                    }\r\n                })}\r\n            </div>\r\n\r\n        </Fragment>}\r\n    </Fragment>\r\n    \r\n}\r\n  \r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    clearProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n  \r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, { clearProfile, getProfiles})(Profiles);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\Games.js",["529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544"],"import React, { Fragment, useEffect, useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getGames, clearGame, deleteGame } from '../../actions/game';\r\nimport Spinner from '../layout/Spinner';\r\nimport dateformat from '../../utils/dateformat';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport {activities} from './SearchDict';\r\nimport { locations } from './SearchDict';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Games = ( {getCurrentProfile, deleteGame, clearGame, getGames, game: {games, game, loading}, auth, auth: { user }}) => {\r\n\r\n    const [friends, setFriends] = useState([]);\r\n    const [filters, setFilters] = useState([]);\r\n    //Search term for UI filter handling\r\n    const [searchterm, setSearch] = useState('');\r\n    //searchdata for backend filtering of games\r\n    const [searchdata, setSearchData] = useState('');\r\n    const [formType, setFormType] = useState(\"\");\r\n    const [suggestions, setSuggestions] = useState(\"\");\r\n\r\n    const disabledActivity = <button type=\"button\" className=\"btn btn-secondary my-right\" disabled={true}>Activity</button>\r\n    const disabledLoc = <button type=\"button\" className=\"btn btn-secondary my-right\" disabled={true}>Location</button>\r\n    const disabledName = <button type=\"button\" className=\"btn btn-secondary my-right\" disabled={true}>Host Name</button>\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        let cancel = false;\r\n        try {\r\n            if (cancel) return;\r\n            getGames();\r\n        } catch(err) {\r\n            console.log(cancel)\r\n        }\r\n        return () => { \r\n            cancel = true;\r\n        }\r\n    }, [getGames]);\r\n\r\n    useEffect(() => {\r\n        let cancel = false;\r\n        try {\r\n            if (cancel) return;\r\n            clearGame();\r\n        } catch (err) {\r\n            console.log(cancel)\r\n        }\r\n        return () => { \r\n            cancel = true;\r\n        }\r\n    },[game]);\r\n\r\n    useEffect(() => {\r\n        let cancel = false;\r\n        try {\r\n            if (cancel) return;\r\n            getCurrentProfile();\r\n        }  catch (err) {\r\n            console.log(cancel)\r\n        }\r\n        return () => { \r\n            cancel = true;\r\n        }\r\n      }, [getCurrentProfile]);\r\n\r\n    useEffect(() => {\r\n        let cancel = false;\r\n        const getFriends = async () => {\r\n            if (cancel) return;\r\n            try {\r\n            const friendList = await axios.get(\"/api/users/friends/\" + user._id);\r\n            setFriends(friendList.data);\r\n            } catch (err) {\r\n            console.log(err);\r\n            }\r\n        };\r\n        getFriends()\r\n        return () => { \r\n            cancel = true;\r\n        }\r\n    }, []);\r\n\r\n    const convertTime = e => {\r\n        var d1 = new Date(e);\r\n        return d1.getTime();\r\n    }\r\n\r\n    const changefilters = (cancel) => {\r\n        setFilters(filters.filter(item => item !== cancel.f).sort());\r\n    }\r\n\r\n    const onChange = e => {\r\n        let matches = [];\r\n        if (e.target.value.length > 0 && formType===\"activity\") {\r\n            matches = activities.filter(activity => {\r\n                const regex = new RegExp(`${e.target.value}`, \"gi\");\r\n                return activity.match(regex);\r\n            })\r\n        } \r\n        if (e.target.value.length > 0 && formType===\"location\") {\r\n            matches = locations.filter(location => {\r\n                const regex = new RegExp(`${e.target.value}`, \"gi\");\r\n                return location.match(regex);\r\n            })\r\n        }\r\n        if (e.target.value.length > 0 && formType===\"name\") {\r\n            matches = friends.filter(friend => {\r\n                const regex = new RegExp(`${e.target.value}`, \"gi\");\r\n                return friend.name.match(regex);\r\n            })\r\n        }\r\n        console.log(matches);\r\n        setSuggestions(matches);\r\n        setSearchData(e.target.value);\r\n    }\r\n\r\n    const onSuggestion = e => {\r\n        setSearchData(e);\r\n        setSuggestions([]);\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        setFilters ((prev) => [...prev, formType + \": \" + searchdata].sort())\r\n        setSearch(\"\")\r\n        setFormType(\"\")\r\n        setSearchData(\"\")\r\n    }\r\n\r\n    const getSecondPart = (str) => str.split(\": \")[1];\r\n    \r\n\r\n    const displayGame = () => games ? games\r\n        .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n        .filter(g => {\r\n            if (getSecondPart(filters[0]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.sport.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n             <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n             <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n             </Fragment>\r\n             }\r\n             \r\n            </div>\r\n        </div>\r\n    ) : <></>\r\n\r\n    const displayLocation = () => games ? games\r\n    .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n    .filter(g => {\r\n        if (getSecondPart(filters[0]) === \"\"){\r\n            return g\r\n        }\r\n        if (g.location.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase()) || g.otherLoc.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n            return g\r\n        }\r\n    })\r\n    .map(game =>\r\n        <div className=\"card mb-3\">\r\n        <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{game.sport}</h5>\r\n        <br></br>\r\n        <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n        <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n        <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n        <p className=\"card-text\">\r\n            <br></br>\r\n            <small className=\"text-muted\"> Host: {game.name} </small>\r\n            <br></br>\r\n            <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n        </p>\r\n        {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n        <Fragment>\r\n         <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n         <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n         </Fragment>\r\n         }\r\n        </div>\r\n    </div>\r\n    ) : <></>\r\n\r\n    const displayName = () => games ? games\r\n        .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n        .filter(g => {\r\n            if (getSecondPart(filters[0]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.name.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n            <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n            <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n            </Fragment>\r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n    ) : <></>\r\n    \r\n    const displayGL = () =>  games ? games\r\n        .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n        .filter(g => {\r\n            if (getSecondPart(filters[0]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.sport.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .filter(g => {\r\n            if (getSecondPart(filters[1]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.location.toLowerCase().includes(getSecondPart(filters[1]).toLowerCase()) || g.otherLoc.toLowerCase().includes(getSecondPart(filters[1]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n            <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n            <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n            </Fragment>\r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n    ) : <></>\r\n    \r\n\r\n    const displayGN = () =>  games ? games\r\n        .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n        .filter(g => {\r\n            if (getSecondPart(filters[0]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.sport.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .filter(g => {\r\n            if (getSecondPart(filters[1]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.name.toLowerCase().includes(getSecondPart(filters[1]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n            <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n            <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n            </Fragment>\r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n    ) : <></>\r\n\r\n\r\n    const displayLN = () =>  games ? games\r\n        .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n        .filter(g => {\r\n            if (getSecondPart(filters[0]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.location.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase()) || g.otherLoc.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .filter(g => {\r\n            if (getSecondPart(filters[1]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.name.toLowerCase().includes(getSecondPart(filters[1]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n            <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n            <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n            </Fragment>\r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n    ) : <></>\r\n\r\n\r\n    const displayAll =  games ? games.filter(game => (convertTime(game.dateTime) > Date.now())).\r\n        map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n            <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n            <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n            </Fragment>\r\n            }      \r\n            </div>\r\n        </div>) : <></>\r\n    \r\n\r\n    const displayALN = () =>  games ? games\r\n        .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n        .filter(g => {\r\n            if (getSecondPart(filters[0]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.sport.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .filter(g => {\r\n            if (getSecondPart(filters[1]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.location.toLowerCase().includes(getSecondPart(filters[1]).toLowerCase()) || g.otherLoc.toLowerCase().includes(getSecondPart(filters[1]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .filter(g => {\r\n            if (getSecondPart(filters[2]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.name.toLowerCase().includes(getSecondPart(filters[2]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n            <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n            <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n            </Fragment>\r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n    ) : <></>\r\n\r\n    const displayAllResults = games.filter(game => (convertTime(game.dateTime) > Date.now())).length;\r\n\r\n    return loading ? <Spinner /> : <Fragment>\r\n          <h1 className = \"large big-header text-dark\"> Available Rooms </h1>\r\n          <div className=\"icon-box\" >\r\n            <h1 className=\"big-description\"> Join an activity or create your own, with just a few clicks. </h1>\r\n                <div className=\"vertical-center\">\r\n                <Link to=\"/create-game\" className=\"btn btn-primary my-2\"> Create Your Activity</Link>\r\n                </div>\r\n            </div>\r\n            \r\n    \r\n\r\n            <h5 className=\"my-top\"> Search By : </h5>\r\n                { filters.filter(f => f.charAt(0) === \"a\").length === 0 ? \r\n                (formType === \"activity\" ? <button type=\"button\" className=\"btn btn-primary my-right\">Activity</button> : \r\n                <button type=\"button\" className=\"btn btn-secondary my-right\" onClick={() => setFormType(\"activity\")}>Activity</button>) :\r\n                   disabledActivity }\r\n\r\n\r\n                { filters.filter(f => f.charAt(0) === \"l\").length === 0 ?\r\n                (formType === \"location\" ? <button type=\"button\" className=\"btn btn-primary my-right\">Location</button> :\r\n                <button type=\"button\" className=\"btn btn-secondary my-right\" onClick={() => setFormType(\"location\")}>Location</button>) :\r\n                    disabledLoc }\r\n\r\n                { filters.filter(f => f.charAt(0) === \"n\").length === 0 ? \r\n                (formType === \"name\" ? <button type=\"button\" className=\"btn btn-primary my-right\">Host Name</button> :\r\n                <button type=\"button\" className=\"btn btn-secondary my-right\" onClick={() => setFormType(\"name\")}>Host Name</button>) :\r\n                    disabledName }      \r\n                \r\n                <form className =\"input-group my-3\" onSubmit={e => e.preventDefault()}>\r\n                    {formType === \"\" ? \r\n                        <input className =\"form-control rounded\" value=\"Too many results? Add more filters\" disabled={true}/> :\r\n                        <input type=\"search\" className =\"form-control rounded\" placeholder= {formType} aria-label=\"Search\" value={searchdata}\r\n                        onChange={(e) => onChange(e)}/> \r\n                    }\r\n                    <input type=\"submit\" className=\"btn btn-outline-primary\" onClick={()=>{onSubmit(); setSearch(searchdata)}} value=\"Filter\" />\r\n                </form>\r\n                        {\r\n                            suggestions && formType ===\"activity\" && suggestions.map(suggestion => \r\n                            <div className=\"suggestion justify-content-md-center\" onClick={() => onSuggestion(suggestion)}>{suggestion}</div>\r\n                        )}\r\n                        {\r\n                            suggestions && formType ===\"location\" && suggestions.map(suggestion => \r\n                            <div className=\"suggestion justify-content-md-center\" onClick={() => onSuggestion(suggestion)}>{suggestion}</div>\r\n                        )}\r\n                        {\r\n                            friends && suggestions && formType ===\"name\" && suggestions.map(suggestion => \r\n                            <div className=\"suggestion justify-content-md-center\" onClick={() => onSuggestion(suggestion.name)}>{suggestion.name}</div>\r\n                        )}\r\n\r\n            { filters.length> 0 && filters.map(f => \r\n                <div className=\"bdg bg-dark my-right\"> <p className=\"filter\"> \"{f}\" </p>  <button type=\"button\" onClick={\r\n                    ()=> changefilters({f}) } className=\"btn2 btn-round join-all\"> <i className=\"far fa-times-circle\"/> </button> </div>\r\n                )}\r\n            \r\n          \r\n            \r\n            <hr className=\"line\"></hr>\r\n            <h6 className=\"my-btm\"> Matching Results: {\" \"}\r\n                { filters.length === 0 && displayAllResults}\r\n                { filters.length === 1 && filters[0].charAt(0) === \"a\" && displayGame().length }\r\n                { filters.length === 1 && filters[0].charAt(0) === \"l\" && displayLocation().length }\r\n                { filters.length === 1 && filters[0].charAt(0) === \"n\" && displayName().length }\r\n                { filters.length === 2 ? \r\n                filters[0].charAt(0) === \"a\" && filters[1].charAt(0) === \"l\" ? displayGL().length :\r\n                <></>\r\n                : <></>}\r\n                { filters.length === 2 ? \r\n                filters[0].charAt(0) === \"a\" && filters[1].charAt(0) === \"n\" ? displayGN().length :\r\n                <></>\r\n                : <></>}\r\n                { filters.length === 2 ? \r\n                filters[0].charAt(0) === \"l\" && filters[1].charAt(0) === \"n\" ? displayLN().length :\r\n                <></>\r\n                : <></>}\r\n                 { filters.length === 3 && displayALN().length } \r\n\r\n            </h6>\r\n\r\n\r\n            { filters.length === 0 && displayAll}\r\n            { filters.length === 1 && filters[0].charAt(0) === \"a\" && displayGame() }\r\n            { filters.length === 1 && filters[0].charAt(0) === \"l\" && displayLocation() }\r\n            { filters.length === 1 && filters[0].charAt(0) === \"n\" && displayName() }\r\n            { filters.length === 2 ? \r\n                filters[0].charAt(0) === \"a\" && filters[1].charAt(0) === \"l\" ? displayGL() :\r\n                <></>\r\n                : <></>}\r\n            { filters.length === 2 ? \r\n                filters[0].charAt(0) === \"a\" && filters[1].charAt(0) === \"n\" ? displayGN() :\r\n                <></>\r\n                : <></>}\r\n             { filters.length === 2 ? \r\n                filters[0].charAt(0) === \"l\" && filters[1].charAt(0) === \"n\" ? displayLN() :\r\n                <></>\r\n                : <></>}\r\n            { filters.length === 3 && displayALN()} \r\n\r\n    \r\n    </Fragment>\r\n}\r\n\r\n\r\nGames.propTypes = {\r\n    getGames: PropTypes.func.isRequired,\r\n    clearGame: PropTypes.func.isRequired,\r\n    deleteGame: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    game: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    game : state.game,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteGame, getGames, clearGame })(Games);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameRoom.js",["545","546"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\CreateGame.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\EnterCall.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\MessageBox.js",["547","548","549"],"import React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Chat from './Chat';\r\nimport Message from './Message';\r\nimport { getChats } from '../../actions/chat';\r\nimport axios from 'axios';\r\nimport ChatBG from '../../img/ChatBG.png';\r\nimport {io} from \"socket.io-client\";\r\nimport { clearProfile } from '../../actions/profile';\r\n\r\n\r\n\r\nlet model;\r\n\r\n//main page for display of all conversations and messages \r\nconst MessageBox = ({clearProfile, getChats, auth: { user }, chat : {chats}}) => {\r\n    const [currChat, setChat] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [formData, setFormData] = useState(\"\");\r\n    const [incomingMessage, setIncomingMessage] = useState(null);\r\n\r\n    const scroll = useRef();\r\n    const socket = useRef();\r\n\r\n    //additional clear profile to clear out dashboard rerendering\r\n    useEffect(()  => {\r\n      let cancel = false;\r\n      try {\r\n        if (cancel) return;\r\n        clearProfile();\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n      return () => { \r\n        cancel = true;\r\n      }\r\n    }, [clearProfile]);\r\n\r\n    useEffect(() => {\r\n      socket.current = io();\r\n      socket.current.on(\"getMessage\", (data) => {\r\n        setIncomingMessage({\r\n          sender: data.senderId,\r\n          text: data.text,\r\n          createdAt: Date.now(),\r\n        });\r\n      });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      incomingMessage &&\r\n        currChat?.users.includes(incomingMessage.sender) &&\r\n        setMessages((prev) => [...prev, incomingMessage]);\r\n    }, [incomingMessage, currChat]);\r\n\r\n    useEffect(() => {\r\n      socket.current.emit(\"addUser\", user._id);\r\n      socket.current.on(\"getUsers\", (users) =>{\r\n        console.log(users); \r\n      });\r\n    }, [user]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getChats();\r\n      }, [getChats]);\r\n\r\n    useEffect(() => async () => {\r\n      try {\r\n        if (currChat !== null) {\r\n          const friendId = currChat.users.find((u)=> u !== user._id);\r\n          const res = await axios.get(`/api/profile/user/${friendId}`);\r\n          } \r\n      } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }, []);\r\n\r\n    useEffect(() => {\r\n        const getMessages = async () => {\r\n          try {\r\n            if (currChat) {\r\n            const res = await axios.get(`/api/message/${currChat._id}`);\r\n            setMessages(res.data);\r\n            }\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        getMessages();\r\n      }, [currChat]);\r\n\r\n    const onSubmit = async (e) => {\r\n      e.preventDefault();\r\n      const message = {\r\n        text: formData\r\n      }\r\n      if(currChat) {\r\n        const receiver = currChat.users.find(id => user._id !== id);\r\n\r\n        socket.current.emit(\"sendMessage\", {\r\n          senderId: user._id,\r\n          receiverId: receiver,\r\n          text: formData,\r\n        });\r\n\r\n      }\r\n      try {\r\n        if (message.text !== \"\"){\r\n          const res = await axios.post(`/api/message/${currChat._id}`, message);\r\n          setMessages([...messages, res.data])\r\n          setFormData(\"\")\r\n        } \r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      scroll.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n  \r\n    \r\n    return <Fragment>\r\n        <div className =\"row\">\r\n        <div className=\"col-sm-4 col-md-4 chatbg-dark\">\r\n        <Link to ='/profiles' className=\"btn btn-outline-primary my-top\"> Find More Friends <i className=\"fas fa-plus\"/> </Link>\r\n            {chats.map((chat=> (\r\n                <div onClick ={()=> setChat(chat)}>\r\n                    <Chat key ={chat._id} chat = {chat} /> \r\n                </div>\r\n            )))}\r\n        </div>\r\n        {currChat ? \r\n        <Fragment>             \r\n        <div className=\"col-sm-8 col-md-8 namebox chatbg-dark\">\r\n        <h4 className=\"nametext my-btm my-top\"> \r\n        <span className='name'>{currChat === null ? <></> : currChat.names.find(name => name !== user.name) } </span>\r\n          { currChat === null \r\n          ? <></> \r\n          : <Link to={`/profile/${currChat.users.find((u)=> u !== user._id)}`} className=\"btn btn-outline-primary join-all\">\r\n            View Profile\r\n          </Link>  \r\n          }\r\n        </h4> \r\n  \r\n            <div className=\"chatbox chatbg\">\r\n                {messages.length>0 && messages.map((msg) => (\r\n                    <div ref = {scroll}>\r\n                      <Message message={msg} sent={msg.sender === user._id} key= {msg._id}/>\r\n                    </div>\r\n                  ))}\r\n            </div>\r\n            <form className =\"input-group my-top\" onSubmit={e => e.preventDefault()}> \r\n              <input  \r\n                type=\"text\" \r\n                className =\"form-control rounded\" \r\n                placeholder=\"Type Something\"  \r\n                aria-label=\"Search\" value={formData}\r\n                onChange={(e)=>setFormData(e.target.value)}/>   \r\n            <input type=\"submit\" className=\"btn btn-outline-primary\" onClick={onSubmit} value=\"Send\" />\r\n            </form>\r\n        </div>\r\n        </Fragment> : \r\n        <div className=\"col-sm-8 col-md-8 emptychat\">\r\n          <h3 className =\"emptychattextln1\">Howdy, {user.name}!</h3>\r\n          <h3 className =\"emptychattextln2\">Open a Conversation to Start Chatting :-)</h3>\r\n          <br/>\r\n          <img className=\"emptychatimg\" src={ChatBG} alt=\"ChatBG\"/>\r\n          </div>\r\n        }\r\n        </div>\r\n    </Fragment> \r\n}\r\n\r\n\r\nMessageBox.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    clearProfile: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat,\r\n    profile: state.profile\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, {getChats,clearProfile})(MessageBox);\r\n\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\types.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\Message.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\Chat.js",["550","551"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nconst Chat = ({auth : {user} , chat , loading }) => {\r\n  const [otherUser, setUser] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    let cancel = false;\r\n    if (cancel) return;\r\n    try {\r\n      const friendName = chat.names.find((name)=> name !== user.name);\r\n      setUser(friendName);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return () => { \r\n      cancel = true;\r\n    }\r\n  });\r\n\r\n  useEffect(() => async () => {\r\n    let cancel = false;\r\n    if (cancel) return;\r\n    try {\r\n      const friendId = chat.users.find((u)=> u !== user._id);\r\n      const res = await axios.get(`/api/profile/user/${friendId}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return () => { \r\n      cancel = true;\r\n    }\r\n  });\r\n\r\n    if (loading || otherUser == null) {\r\n      return null;\r\n    }\r\n    else {\r\n      return <Fragment>\r\n        <div className=\"conversation my-top-small\">\r\n          <span className=\"conversationName\">{otherUser}</span>\r\n        </div>\r\n      </Fragment>\r\n    }\r\n}\r\n\r\n\r\n\r\nChat.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth\r\n});\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, {})(Chat);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\ChannelForm.js",["552"],"import React, { Component, Fragment } from \"react\";\r\n\r\n\r\nexport default class ChannelForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      channel: \"\",\r\n      click: true\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    let { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.selectChannel(\"Matchmaker\");\r\n  };\r\n\r\n  click = () => {\r\n    this.state.click = false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"my-btm\">\r\n          <form onSubmit={this.onSubmit}>\r\n            {this.state.click ? <input type=\"submit\" value=\"Join Call\" onClick={this.click()} className=\"btn btn-success btn-full\" /> \r\n            : this.state.click === false && <button type=\"button\" class=\"btn btn-secondary btn-full\" disabled>Joined Call</button>}\r\n          </form>\r\n\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\StudyForm.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\OnlineGamesForm.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\VideoCall.js",["553"],"import React, { Fragment, Component } from \"react\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet client = AgoraRTC.createClient({ mode: \"live\", codec: \"h264\" });\r\n\r\nconst USER_ID = Math.floor(Math.random() * 1000000001);\r\n\r\nclass Call extends Component {\r\n\r\n  handleClick = () => {\r\n    this.props.history.push(\"/all-games\");\r\n  }\r\n\r\n  localStream = AgoraRTC.createStream({\r\n    streamID: this.props.auth.user.name,\r\n    audio: true,\r\n    video: true,\r\n    screen: false\r\n  });\r\n\r\n  componentDidMount() {\r\n    this.initLocalStream();\r\n    this.initClient();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.channel !== this.props.channel && this.props.channel !== \"\") {\r\n      this.joinChannel();\r\n    }\r\n  }\r\n\r\n  initLocalStream = () => {\r\n    let me = this;\r\n    me.localStream.init(\r\n      function () {\r\n        console.log(\"getUserMedia successfully\");\r\n        me.localStream.play(\"agora_local\");\r\n      },\r\n      function (err) {\r\n        console.log(\"getUserMedia failed\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  initClient = () => {\r\n    client.init(\r\n      \"1eb6cb9def814e4e96ac6afc003a47b0\",\r\n      function () {\r\n        console.log(\"AgoraRTC client initialized\");\r\n      },\r\n      function (err) {\r\n        console.log(\"AgoraRTC client init failed\", err);\r\n      }\r\n    );\r\n    this.subscribeToClient();\r\n  };\r\n\r\n  subscribeToClient = () => {\r\n    let me = this;\r\n    client.on(\"stream-added\", me.onStreamAdded);\r\n    client.on(\"stream-subscribed\", me.onRemoteClientAdded);\r\n    client.on(\"stream-removed\", me.onStreamRemoved);\r\n    client.on(\"peer-leave\", me.onPeerLeave);\r\n  };\r\n\r\n  state = {\r\n    remoteStreams: {}\r\n  }\r\n\r\n  onStreamAdded = evt => {\r\n    let me = this;\r\n    let stream = evt.stream;\r\n    console.log(\"New stream added: \" + stream.getId());\r\n    me.setState(\r\n      {\r\n        remoteStreams: {\r\n          ...me.state.remoteStream,\r\n          [stream.getId()]: stream\r\n        }\r\n      },\r\n      () => {\r\n        client.subscribe(stream, function (err) {\r\n          console.log(\"Subscribe stream failed\", err);\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  joinChannel = () => {\r\n    let me = this;\r\n    client.join(\r\n      \"0061eb6cb9def814e4e96ac6afc003a47b0IADKGe/YGPMjN2DiAp+fkYpXU4QTYYkftbjE+WBZILdkIQ29DrUAAAAAEACwfmgrghkIYQEAAQCAGQhh\",\r\n      me.props.channel,\r\n      this.props.auth.user.name,\r\n      function (uid) {\r\n        console.log(\"User \" + uid + \" join channel successfully\");\r\n        client.publish(me.localStream, function (err) {\r\n          console.log(\"Publish local stream error: \" + err);\r\n        });\r\n\r\n        client.on(\"stream-published\", function (evt) {\r\n          console.log(\"Publish local stream successfully\");\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(\"Join channel failed\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  leaveChannel = () => {\r\n    client.leave();\r\n    this.handleClick();\r\n  }\r\n\r\n  onRemoteClientAdded = evt => {\r\n    let me = this;\r\n    let remoteStream = evt.stream;\r\n    me.state.remoteStreams[remoteStream.getId()].play(\r\n      \"agora_remote \" + remoteStream.getId()\r\n    );\r\n  };\r\n\r\n  onStreamRemoved = evt => {\r\n    let me = this;\r\n    let stream = evt.stream;\r\n    if (stream) {\r\n      let streamId = stream.getId();\r\n      let { remoteStreams } = me.state;\r\n\r\n      stream.stop();\r\n      delete remoteStreams[streamId];\r\n\r\n      me.setState({ remoteStreams });\r\n\r\n      console.log(\"Remote stream is removed \" + stream.getId());\r\n    }\r\n  };\r\n\r\n  onPeerLeave = evt => {\r\n    let me = this;\r\n    let stream = evt.stream;\r\n    if (stream) {\r\n      let streamId = stream.getId();\r\n      let { remoteStreams } = me.state;\r\n\r\n      stream.stop();\r\n      delete remoteStreams[streamId];\r\n\r\n      me.setState({ remoteStreams });\r\n\r\n      console.log(\"Remote stream is removed \" + stream.getId());\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n            <h1 className=\"large big-header my-btm\"> Video Chat Room </h1>\r\n\r\n      <div className =\"row my-btm\">\r\n        <div className=\"icon-box2 col-sm-4 col-md-4\" style={{ width: \"400px\", height: \"400px\" }}>\r\n          <div id=\"agora_local\" style={{ width: \"100%\", height: \"80%\" }} className=\"my-top-small\"/>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title whiten\">{this.props.auth.user.name} (Me) </h5>\r\n          </div>\r\n        </div>\r\n        {Object.keys(this.state.remoteStreams).map(key => {\r\n          let stream = this.state.remoteStreams[key];\r\n          let streamId = stream.getId();\r\n          return (\r\n            <Fragment>\r\n            <div className=\"icon-box2 col-sm-4 col-md-4\" style={{ width: \"400px\", height: \"400px\" }}>\r\n              <div \r\n                key={streamId}\r\n                id={`agora_remote ${streamId}`}\r\n                style={{ width: \"100%\", height: \"80%\" }} className=\"my-top-small\"\r\n              />\r\n              <div class=\"card-body\">\r\n              <h5 class=\"card-title whiten\"> {streamId} </h5>\r\n            </div>\r\n            </div>\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n      <button type=\"button\" className=\"btn btn-primary btn-full\" onClick={() => this.leaveChannel()}> Leave </button>\r\n      </Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n      auth: state.auth,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Call));","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\SportsForm.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\utils\\dateformat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameChat.js",["554"],"import React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport GameMessage from './GameMessage';\r\nimport {format} from 'timeago.js'\r\n\r\n\r\nlet model;\r\n\r\nconst GameChat = ({gamechat : {gamechat}, game : {game, loading} }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [formData, setFormData] = useState(\"\");\r\n    const [toxicloading, setLoadingToxic] = useState(false);\r\n    const [toxic, setToxic] = useState();\r\n\r\n    const scroll = useRef();\r\n\r\n    useEffect(() => {\r\n        scroll.current?.scrollIntoView({ behavior: \"smooth\" });\r\n      }, [messages]);\r\n    \r\n    useEffect(() => {\r\n      let cancel = false;\r\n      const loadModel = async () => {\r\n        if (cancel) return;\r\n        model = await window.toxicity.load(0.8);\r\n        setLoadingToxic(false);        \r\n        console.log(\"Model loaded\")\r\n      };\r\n      loadModel();\r\n      return () => {\r\n        cancel = true;\r\n      }\r\n    },[]);\r\n\r\n    const isToxic = async (model, message) => {\r\n      const predictions = await model.classify(message);\r\n      const toxicPredictions = predictions.filter((p) => p.results[0].match);\r\n      return toxicPredictions.length > 0;\r\n    };\r\n  \r\n    useEffect(() => {\r\n      let cancel = false;\r\n      const getToxic = async () => {\r\n        if (cancel) return;\r\n        if (model) {\r\n          const textToxicity = await isToxic(model, formData); \r\n          setToxic(textToxicity);\r\n          setLoadingToxic(false);\r\n        }\r\n      };\r\n      getToxic();\r\n      return () => { \r\n        cancel = true;\r\n      }\r\n    }, [formData]);\r\n \r\n    useEffect(() => {\r\n        let cancel = false;\r\n        const getMessages = async () => {\r\n          if (cancel) return;\r\n          try {\r\n            const res = await axios.get(`/api/message/${gamechat[0]._id}`);\r\n            setMessages(res.data);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        getMessages();\r\n        return () => { \r\n          cancel = true;\r\n        }\r\n      }, [gamechat]);\r\n\r\n    const onSubmit = async (e) => {\r\n      e.preventDefault();\r\n      const message = {\r\n        text: formData\r\n      }\r\n\r\n      try {\r\n        if (message.text !== \"\"){\r\n          const res = await axios.post(`/api/message/${gamechat[0]._id}`, message);\r\n          setMessages([...messages, res.data])\r\n          setFormData(\"\")\r\n        } \r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n\r\n      return <Fragment>\r\n          <div className=\"chatbox chatbg\">\r\n                {messages.length === 0 &&\r\n                 <div ref = {scroll}> \r\n                    <div className=\"messagetext flexi\"> {game.name} has created the ChatRoom</div>\r\n                    </div>\r\n                }\r\n                {messages.length >= 1 && \r\n                <div className=\"messagetext flexi\"> {game.name} has created the ChatRoom</div>}\r\n                {messages.length > 0 && messages.map((msg) => (\r\n                    <div ref = {scroll}>\r\n                    < GameMessage message={msg} key ={msg} />\r\n                    </div>\r\n                  ))}\r\n            <form className =\"input-group my-top\" onSubmit={e => e.preventDefault()}> \r\n              <input  \r\n                type=\"text\" \r\n                className =\"form-control rounded\" \r\n                placeholder=\"Type Something\"  \r\n                value={formData}\r\n                onChange={(e)=>setFormData(e.target.value)}/> \r\n                <input type=\"submit\" className=\"btn btn-outline-primary\" onClick={onSubmit} value=\"Send\" />            \r\n            </form>\r\n        </div>\r\n        {!toxicloading && toxic ? <div className=\"badge bg-danger flexi\"  role=\"alert\">\r\n                Warning: Please chat politely </div> : null}\r\n      </Fragment>\r\n\r\n}\r\n\r\n\r\n\r\nGameChat.propTypes = {\r\n    gamechat: PropTypes.object.isRequired,\r\n    game: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    gamechat: state.gamechat,\r\n    game: state.game\r\n});\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps)(GameChat);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\ProfileItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FriendList.js",["555"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport FriendItem from \"./FriendItem\";\r\nimport Loading from '../layout/Loading';\r\n\r\n\r\nconst FriendList = ({auth: { user }, chat:{chats}}) => {\r\n\r\n    const [friends, setFriends] = useState([]);\r\n    const [friendslength, setLength] = useState(\" \");\r\n\r\n\r\n    useEffect(() => {\r\n        let cancel = false;\r\n        const getFriends = async () => {\r\n          if (cancel) return;\r\n          try {\r\n            const friendList = await axios.get(\"/api/users/friends/\" + user._id);\r\n            setFriends(friendList.data);\r\n            setLength(friendList.data.length)\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        getFriends()\r\n        return () => { \r\n          cancel = true;\r\n        }\r\n      }, []);\r\n    \r\n\r\n    return (\r\n      <div className=\"card\">\r\n          <div className=\"card-header\">\r\n              <strong> My Friends ({friends.length}) </strong>\r\n          </div>\r\n        \r\n          <ul className=\"list-group list-group-flush\">\r\n            {friendslength === \" \" && <Loading/>}\r\n            {friendslength === 0 && \r\n            <li className=\"list-group-item\"> No friends yet <span role=\"img\"> 😞 </span></li>}\r\n            {friends.map((friend) => (\r\n                <FriendItem friend ={friend} key={friend._id}/>\r\n           ))}\r\n          </ul>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n\r\nFriendList.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  chat: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\nexport default connect(mapStateToProps)(FriendList);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\index.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameMessage.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FriendItem.js",["556"],"import React, { Fragment, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createChat, getChats } from '../../actions/chat';\r\n\r\n\r\nconst FriendItem = ({ createChat, getChats, auth: { user }, friend, chat: { chats }, history }) => {\r\n    useEffect(() => {\r\n        getChats();\r\n    }, [getChats]);\r\n\r\n    const chatID = [];\r\n    \r\n    useEffect(() => {\r\n        let cancel = false;\r\n        if (cancel) return;\r\n        const loadchat = async() => {\r\n            chats.map(chat => {\r\n                chatID.push(chat.users.find(id => id !== user._id));\r\n            })\r\n        }\r\n        loadchat();\r\n        return () => { \r\n            cancel = true;\r\n        }\r\n    })\r\n\r\n    const startNewConvo = () => {\r\n        try {\r\n            if (!chatID.includes(friend._id)) {\r\n                const formData = {\r\n                    receiver: friend._id\r\n                }\r\n                createChat(formData, history)\r\n            } else {\r\n                history.push('/messagebox')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <li className=\"list-group-item\">\r\n                {friend.name}\r\n                <button onClick={() => { startNewConvo() }} type=\"button\" className=\"btn btn-dark join-all\">\r\n                    <i className=\"fas fa-comment-dots\" />\r\n                </button>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nFriendItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { getChats, createChat })(withRouter(FriendItem));\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\BookFacility.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Request.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FollowerItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\FriendList.js",["557"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport FriendItem from \"./FriendItem\";\r\n\r\n\r\nconst FriendList = ({auth: { user }, chat:{chats}}) => {\r\n\r\n    const [friends, setFriends] = useState([]);\r\n\r\n    useEffect(() => {\r\n      let cancel = false;\r\n      const getFriends = async () => {\r\n        if (cancel) return;\r\n        try {\r\n          const friendList = await axios.get(\"/api/users/friends/\" + user._id);\r\n          setFriends(friendList.data);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      getFriends()\r\n      return () => { \r\n        cancel = true;\r\n      }\r\n    }, []);\r\n  \r\n\r\n    return (\r\n      \r\n      <div className=\"card\">\r\n          <div className=\"card-header\">\r\n              <strong> My Friends ({friends.length}) </strong>\r\n          </div>\r\n        \r\n          <ul className=\"list-group list-group-flush\">\r\n            {friends.map((friend) => (\r\n                <FriendItem friend ={friend} key = {friend._id}/>\r\n           ))}\r\n          </ul>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n\r\nFriendList.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  chat: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\nexport default connect(mapStateToProps)(FriendList);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\Request.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\FriendItem.js",["558"],"import React, { Fragment, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createChat, getChats } from '../../actions/chat';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst FriendItem = ({ createChat, getChats, auth: { user }, friend, chat: { chats }, history }) => {\r\n    useEffect(() => {\r\n        getChats();\r\n    }, [getChats]);\r\n\r\n    const chatID = [];\r\n\r\n    chats.map(chat => {\r\n        chatID.push(chat.users.find(id => id !== user._id));\r\n    })\r\n\r\n    const startNewConvo = () => {\r\n        try {\r\n            if (!chatID.includes(friend._id)) {\r\n                const formData = {\r\n                    receiver: friend._id\r\n                }\r\n                createChat(formData, history)\r\n            } else {\r\n                history.push('/messagebox')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <li className=\"list-group-item\">\r\n                <Link to={`/profile/${friend._id}`}> {friend.name} </Link>\r\n                <button onClick={() => { startNewConvo() }} type=\"button\" className=\"btn btn-dark join-all\">\r\n                    <i className=\"fas fa-comment-dots\" />\r\n                </button>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nFriendItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { getChats, createChat })(withRouter(FriendItem));\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\FollowerItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\GameItem.js",["559","560","561"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport dateformat from '../../utils/dateformat';\r\nimport axios from 'axios';\r\nimport {format} from 'timeago.js';\r\n\r\nconst GameItem = ({ game, auth, mine }) => {\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [latesttext, setText] = useState(\"\");\r\n    const [latestsender, setSender] = useState(\"\");\r\n    const [timeago, setTime] = useState(\"\");\r\n    const [secondtext, setsecondText] = useState(\"\");\r\n    const [secondsender, setsecondSender] = useState(\"\");\r\n    const [secondtimeago, setsecondTime] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n      let cancel = false;\r\n      const getChatMessages = async () => {\r\n        if (cancel) return;\r\n        try {\r\n          const res = await axios.get(`/api/gamechat/${game._id}`);\r\n          const res2 = await axios.get(`/api/message/${res.data[0]._id}`);\r\n          setMessages(res2.data);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      getChatMessages();\r\n      return () => { \r\n        cancel = true;\r\n      }\r\n    }, []);\r\n\r\n    \r\n    useEffect(() => {\r\n      let cancel = false;\r\n      if (cancel) return;\r\n      try {\r\n        if(messages.length>0) {\r\n          const len = messages.length;\r\n          setText(messages[len-1].text);\r\n          setSender(messages[len-1].name);\r\n          setTime(format(messages[len-1].createdAt));\r\n          if (messages.length>1) {\r\n            setsecondText(messages[len-2].text)\r\n            setsecondSender(messages[len-2].name);\r\n            setsecondTime(format(messages[len-2].createdAt));\r\n          }\r\n        } \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      return () => { \r\n        cancel = true;\r\n      }\r\n    }, [messages]);\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className=\"card mb-3\" >\r\n                {mine && <i className=\"fas fa-crown my-left my-top-small\"></i>}\r\n                <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{game.sport}</h5>\r\n                <br></br>\r\n                <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location === \"Others\" ? game.otherLoc : game.location}</p>\r\n                <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n                <p className=\"card-text\"> <span className='text-primary'> Day: </span> {dateformat(game.dateTime)} </p>\r\n                {!mine && <p className=\"card-text\"> <span className='text-primary'> Host: </span> {game.name} </p>}\r\n                  <div className=\"icon-box mb-3\" >\r\n                    <div className=\"card-body\">\r\n                    <h6 className=\"card-text my-btm-small\"> Latest Messages </h6>\r\n                      {secondsender !== \"\" && <Fragment>\r\n                      <div className=\"flexi\"> {secondsender == auth.user.name && secondsender+ \" (Me)\"} \r\n                      {secondsender !== auth.user.name && secondsender} : <div className=\"messagetext flexi\"> {secondtext}\r\n                      </div> </div>  <span className=\"text-muted btmtext\"> {\" \"}{secondtimeago}</span> </Fragment>}\r\n                      <br></br>\r\n                      {latestsender !== \"\" &&  <Fragment>\r\n                      <div className=\"flexi my-top-small\"> {latestsender == auth.user.name && latestsender+ \" (Me)\"}\r\n                      {latestsender !== auth.user.name && latestsender} : <div className=\"messagetext flexi\"> {latesttext}\r\n                      </div> </div> <span className=\"text-muted btmtext\"> {\" \"}{timeago}</span> </Fragment> }\r\n                      {latestsender === \"\" &&  <Fragment>\r\n                      <div className=\"flexi\"> It is really quiet here <span role=\"img\"> 🤫 </span></div> </Fragment>}\r\n                      </div>\r\n                  </div>\r\n                  <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all my-right\"> Enter Room</Link>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nGameItem.propTypes = {\r\n    gamechat: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    gamechat: state.gamechat,\r\n    auth: state.auth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(withRouter(GameItem));\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Loading.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\SearchDict.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\SuggestedGames.js",["562","563"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport dateformat from '../../utils/dateformat';\r\n\r\nconst GameItem = ({ game, history }) => {\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className=\"icon-box3 mb-3\">\r\n                <div className=\"card-body\" >\r\n                    <div className=\"row g-0\">\r\n                        <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{game.sport}</h5>\r\n                        <br></br>\r\n                        <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location === \"Others\" ? game.otherLoc : game.location}</p>\r\n                        <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n                        <p className=\"card-text\"> <span className='text-primary'> Day: </span> {dateformat(game.dateTime)} </p>\r\n                        <p className=\"card-text\"> <span className='text-primary'> Host: </span> {game.name} </p>\r\n                        <Link to={`/games/${game._id}`} className=\"btn btn-gray btn-lg btn-block\"> Join Now </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nGameItem.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(withRouter(GameItem));\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\notification\\Notifications.js",["564","565","566"],"import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Request from \"../dashboard/Request\";\r\nimport { Fragment } from \"react\";\r\nimport SuggestedGames from \"../dashboard/SuggestedGames\";\r\nimport { getGames } from '../../actions/game';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport axios from \"axios\";\r\nimport Invite from \"./Invite\";\r\n\r\n\r\nconst Notifications = ({getGames, getCurrentProfile, auth: { user }, chat:{chats}, game: {games}, profile: { profile, loading }}) => {\r\n\r\n    \r\n    const [friends, setFriends] = useState([]);\r\n    const [showing, toggleShow] = useState(false)\r\n    const [fgames, setFGames] = useState([]);\r\n    const [igames, setIGames] = useState([]);\r\n    \r\n    const convertTime = e => {\r\n        var d1 = new Date(e);\r\n        return d1.getTime();\r\n    }\r\n\r\n    useEffect(() => {\r\n        let cancel = false;\r\n        try {\r\n          if (cancel) return;\r\n          getGames();\r\n        } catch (err) {\r\n          console.log(err)\r\n        }\r\n        return () => { \r\n          cancel = true;\r\n        }\r\n    }, [games, getGames]);\r\n    \r\n    useEffect(() => {\r\n        let cancel = false;\r\n        try {\r\n          if (cancel) return;\r\n          getCurrentProfile();\r\n        } catch (err) {\r\n          console.log(err)\r\n        }\r\n        return () => { \r\n          cancel = true;\r\n        }\r\n      }, [profile, getCurrentProfile]);\r\n\r\n    useEffect(() => {\r\n        let cancel = false;\r\n        const getFriends = async () => {\r\n          try {\r\n            if (cancel) return;\r\n            const friendList = await axios.get(\"/api/users/friends/\" + user._id);\r\n            setFriends(friendList.data);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        getFriends()\r\n        return () => { \r\n          cancel = true;\r\n        }\r\n      }, []);\r\n    \r\n    useEffect(() => {\r\n      let cancel = false;\r\n      try {\r\n      if (cancel) return;  \r\n      var suggestedGames = new Array(4);\r\n      var friendGames = new Array(2);\r\n      const not_joined = games.filter(game => game.user !== user._id && game.players.filter(player => player.user === user._id).length === 0 && convertTime(game.dateTime) > Date.now());\r\n      for (let i = 0; i < 4; i++) {\r\n        suggestedGames[i] = [];\r\n      }\r\n      for (let i = 0; i < 2; i++) {\r\n        friendGames[i] = [];\r\n      }\r\n\r\n    \r\n      const suggestGames = (game) => { \r\n          if (profile.interests.includes(game.sport)) {\r\n            if (friends.filter(friend => friend._id === game.user).length > 0) {\r\n              if (friends.filter(friend => game.players.includes(friend._id)).length > 0) {\r\n                suggestedGames[3].push(game);\r\n                return;\r\n              }\r\n              suggestedGames[2].push(game);\r\n              return;\r\n            }\r\n            if (friends.filter(friend => game.players.includes(friend._id)).length > 0) {\r\n              suggestedGames[2].push(game);\r\n              return;\r\n            }\r\n            suggestedGames[1].push(game);\r\n            return;\r\n          }\r\n          if (friends.filter(friend => friend._id === game.user).length > 0) {\r\n            if (friends.filter(friend => game.players.includes(friend._id)).length > 0) {\r\n              friendGames[1].push(game);\r\n              return;\r\n            }\r\n            friendGames[0].push(game);\r\n            return;\r\n          }\r\n          if (friends.filter(friend => game.players.includes(friend._id)).length > 0) {\r\n            friendGames[0].push(game);\r\n            return;\r\n          }\r\n          suggestedGames[0].push(game);\r\n          return;\r\n        }\r\n\r\n        if (not_joined.length > 0 && profile) {\r\n          not_joined.map(game => suggestGames(game));\r\n        }\r\n      \r\n        var suggestions = new Array(2);\r\n        var withfriends = new Array(2);\r\n        if (suggestedGames[0].length > 0 || suggestedGames[1].length > 0 || suggestedGames[2].length > 0 || suggestedGames[3].length > 0) {\r\n          let i = 0;\r\n          for (i; i <= 1; i++) {\r\n            if(suggestedGames[3].length > 0) {\r\n              suggestions.push(suggestedGames[3].pop());\r\n            } else if(suggestedGames[2].length > 0) {\r\n              suggestions.push(suggestedGames[2].pop());\r\n            } else if(suggestedGames[1].length > 0) {\r\n              suggestions.push(suggestedGames[1].pop());\r\n            } else {\r\n              suggestions.push(suggestedGames[0].pop());\r\n            }\r\n          }\r\n      }\r\n      \r\n      if (friendGames[0].length > 0 || friendGames[1].length > 0) {\r\n        let i = 0;\r\n        for (i; i <= 1; i++) {\r\n          if(friendGames[1].length > 0) {\r\n            withfriends.push(friendGames[1].pop());\r\n          } else {\r\n            withfriends.push(friendGames[0].pop());\r\n          } \r\n        }\r\n      }\r\n      setIGames(suggestions);\r\n      setFGames(withfriends);\r\n    } catch (err) {\r\n      console.log(err);\r\n    } return () => { \r\n      cancel = true;\r\n    }\r\n    }, [friends, games, user, profile, setIGames, setFGames]);\r\n\r\n\r\n\r\n    return <Fragment> \r\n        <div className=\"my-top\">\r\n        <Request/> \r\n\r\n        <Invite/>\r\n            <div className=\"card-header2 my-top\">\r\n                <strong> Recommended for You </strong>  \r\n                {!showing && <button onClick= {()=>toggleShow(!showing)} type=\"button\" className=\"btn btn-dark btn-lg btn-round join-all\">\r\n                    <i className=\"fas fa-arrow-circle-down\"/></button>}\r\n                {showing && <button onClick= {()=>toggleShow(!showing)} type=\"button\" className=\"btn btn-dark btn-lg btn-round join-all\">\r\n                    <i className=\"fas fa-arrow-circle-up\"/></button>}\r\n                </div>\r\n                \r\n                <div className=\"card-header\">\r\n     \r\n                <div className=\"centralize\"><strong> Based on your interests </strong> </div>\r\n                </div>\r\n                {showing ? (igames.length > 0 && \r\n                    igames.map(game => game ? <SuggestedGames game={game}/> : <></>)) : \r\n                    <li className=\"list-group-item\"> <h2 className=\"centralize\"> . . . </h2> </li>}\r\n                  {showing ? (igames.filter(game => game).length == 0 && <li className=\"list-group-item\"> No Recommendations For Now ... <span role=\"img\"> 😒 </span></li>) \r\n                  : <></>}\r\n                <div className=\"card-header my-top\">\r\n                <div className=\"centralize\"><strong> Join Your Friends </strong> </div>\r\n                </div>\r\n                {showing ? (fgames.length > 0 && \r\n                    fgames.map(game =>  game ? <SuggestedGames game={game}/> : <></>)) : \r\n                    <li className=\"list-group-item\"> <h2 className=\"centralize\"> . . . </h2> </li>}\r\n                   {showing ? (fgames.filter(game => game).length == 0 && <li className=\"list-group-item\"> No Recommendations For Now ... <span role=\"img\"> 😒 </span></li>) \r\n                  : <></>}\r\n                </div>  \r\n                \r\n        </Fragment>\r\n}\r\n\r\n\r\nNotifications.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  chat: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  getGames: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat,\r\n    game: state.game,\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {getGames, getCurrentProfile})(Notifications);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\notification\\FollowerItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\notification\\Invite.js",["567"],"import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport InviteItem from \"./InviteItem\"\r\n\r\nconst Invite = ({auth: { user }, chat:{chats}}) => {\r\n\r\n    const [invites, setInvites] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        let cancel = false;\r\n        const getInvites = async () => {\r\n          try {\r\n            if (cancel) return;\r\n            const inviteList = await axios.get(\"/api/users/invitations/\" + user._id);\r\n            setInvites(inviteList.data);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        getInvites()\r\n        return () => { \r\n          cancel = true;\r\n        }\r\n      }, []);\r\n\r\n\r\n    return <Fragment>\r\n        <div className=\"card my-top\">\r\n          <div className=\"card-header2\">\r\n              <strong> Activity Invitations </strong>\r\n              {invites.length > 0 && <span className=\"position-absolute top-0 start-100 translate-middle p-2 bg-danger rounded-circle\">\r\n              </span>}\r\n          </div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {invites.map(i => \r\n                <InviteItem invite = {i}  key={i._id}/>\r\n                )}\r\n          </ul>\r\n        </div>\r\n\r\n    </Fragment>\r\n\r\n}\r\n\r\n\r\nInvite.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  chat: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\nexport default connect(mapStateToProps)(Invite);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\notification\\InviteItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Invite.js",["568","569"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\InviteItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\InviteFriend.js",["570","571","572","573"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\FriendItem.js",[],{"ruleId":"574","replacedBy":"575"},{"ruleId":"576","replacedBy":"577"},{"ruleId":"578","severity":1,"message":"579","line":1,"column":37,"nodeType":"580","messageId":"581","endLine":1,"endColumn":46},{"ruleId":"582","severity":1,"message":"583","line":12,"column":7,"nodeType":"584","endLine":12,"endColumn":9,"suggestions":"585"},{"ruleId":"586","severity":1,"message":"587","line":16,"column":20,"nodeType":"588","messageId":"589","endLine":16,"endColumn":22},{"ruleId":"578","severity":1,"message":"590","line":12,"column":8,"nodeType":"580","messageId":"581","endLine":12,"endColumn":14},{"ruleId":"586","severity":1,"message":"591","line":20,"column":30,"nodeType":"588","messageId":"592","endLine":20,"endColumn":32},{"ruleId":"578","severity":1,"message":"593","line":2,"column":10,"nodeType":"580","messageId":"581","endLine":2,"endColumn":14},{"ruleId":"578","severity":1,"message":"594","line":12,"column":10,"nodeType":"580","messageId":"581","endLine":12,"endColumn":18},{"ruleId":"578","severity":1,"message":"595","line":18,"column":22,"nodeType":"580","messageId":"581","endLine":18,"endColumn":33},{"ruleId":"578","severity":1,"message":"596","line":20,"column":12,"nodeType":"580","messageId":"581","endLine":20,"endColumn":22},{"ruleId":"578","severity":1,"message":"597","line":20,"column":24,"nodeType":"580","messageId":"581","endLine":20,"endColumn":33},{"ruleId":"582","severity":1,"message":"598","line":55,"column":7,"nodeType":"584","endLine":55,"endColumn":9,"suggestions":"599"},{"ruleId":"578","severity":1,"message":"600","line":26,"column":8,"nodeType":"580","messageId":"581","endLine":26,"endColumn":18},{"ruleId":"582","severity":1,"message":"583","line":13,"column":3,"nodeType":"584","endLine":13,"endColumn":5,"suggestions":"601"},{"ruleId":"578","severity":1,"message":"602","line":5,"column":8,"nodeType":"580","messageId":"581","endLine":5,"endColumn":15},{"ruleId":"578","severity":1,"message":"579","line":1,"column":27,"nodeType":"580","messageId":"581","endLine":1,"endColumn":36},{"ruleId":"578","severity":1,"message":"593","line":2,"column":10,"nodeType":"580","messageId":"581","endLine":2,"endColumn":14},{"ruleId":"582","severity":1,"message":"603","line":10,"column":3,"nodeType":"580","endLine":10,"endColumn":12,"suggestions":"604"},{"ruleId":"578","severity":1,"message":"605","line":1,"column":38,"nodeType":"580","messageId":"581","endLine":1,"endColumn":46},{"ruleId":"586","severity":1,"message":"587","line":15,"column":20,"nodeType":"588","messageId":"589","endLine":15,"endColumn":22},{"ruleId":"578","severity":1,"message":"579","line":1,"column":27,"nodeType":"580","messageId":"581","endLine":1,"endColumn":36},{"ruleId":"578","severity":1,"message":"605","line":1,"column":38,"nodeType":"580","messageId":"581","endLine":1,"endColumn":46},{"ruleId":"578","severity":1,"message":"593","line":2,"column":10,"nodeType":"580","messageId":"581","endLine":2,"endColumn":14},{"ruleId":"578","severity":1,"message":"606","line":6,"column":8,"nodeType":"580","messageId":"581","endLine":6,"endColumn":13},{"ruleId":"578","severity":1,"message":"607","line":3,"column":10,"nodeType":"580","messageId":"581","endLine":3,"endColumn":18},{"ruleId":"574","replacedBy":"608"},{"ruleId":"576","replacedBy":"609"},{"ruleId":"578","severity":1,"message":"610","line":43,"column":10,"nodeType":"580","messageId":"581","endLine":43,"endColumn":17},{"ruleId":"578","severity":1,"message":"611","line":8,"column":8,"nodeType":"580","messageId":"581","endLine":8,"endColumn":15},{"ruleId":"582","severity":1,"message":"583","line":14,"column":7,"nodeType":"584","endLine":14,"endColumn":9,"suggestions":"612"},{"ruleId":"586","severity":1,"message":"587","line":17,"column":20,"nodeType":"588","messageId":"589","endLine":17,"endColumn":22},{"ruleId":"586","severity":1,"message":"591","line":21,"column":45,"nodeType":"588","messageId":"592","endLine":21,"endColumn":47},{"ruleId":"586","severity":1,"message":"613","line":35,"column":37,"nodeType":"588","messageId":"592","endLine":35,"endColumn":39},{"ruleId":"586","severity":1,"message":"591","line":42,"column":32,"nodeType":"588","messageId":"592","endLine":42,"endColumn":34},{"ruleId":"578","severity":1,"message":"614","line":19,"column":12,"nodeType":"580","messageId":"581","endLine":19,"endColumn":22},{"ruleId":"582","severity":1,"message":"615","line":54,"column":7,"nodeType":"584","endLine":54,"endColumn":13,"suggestions":"616"},{"ruleId":"582","severity":1,"message":"617","line":84,"column":8,"nodeType":"584","endLine":84,"endColumn":10,"suggestions":"618"},{"ruleId":"586","severity":1,"message":"613","line":137,"column":19,"nodeType":"588","messageId":"592","endLine":137,"endColumn":21},{"ruleId":"586","severity":1,"message":"613","line":172,"column":15,"nodeType":"588","messageId":"592","endLine":172,"endColumn":17},{"ruleId":"586","severity":1,"message":"613","line":206,"column":19,"nodeType":"588","messageId":"592","endLine":206,"endColumn":21},{"ruleId":"586","severity":1,"message":"613","line":241,"column":19,"nodeType":"588","messageId":"592","endLine":241,"endColumn":21},{"ruleId":"586","severity":1,"message":"613","line":249,"column":19,"nodeType":"588","messageId":"592","endLine":249,"endColumn":21},{"ruleId":"586","severity":1,"message":"613","line":285,"column":19,"nodeType":"588","messageId":"592","endLine":285,"endColumn":21},{"ruleId":"586","severity":1,"message":"613","line":293,"column":19,"nodeType":"588","messageId":"592","endLine":293,"endColumn":21},{"ruleId":"586","severity":1,"message":"613","line":329,"column":19,"nodeType":"588","messageId":"592","endLine":329,"endColumn":21},{"ruleId":"586","severity":1,"message":"613","line":337,"column":19,"nodeType":"588","messageId":"592","endLine":337,"endColumn":21},{"ruleId":"619","severity":1,"message":"620","line":371,"column":96,"nodeType":"621","messageId":"622","endLine":371,"endColumn":97,"fix":"623"},{"ruleId":"586","severity":1,"message":"613","line":398,"column":19,"nodeType":"588","messageId":"592","endLine":398,"endColumn":21},{"ruleId":"586","severity":1,"message":"613","line":406,"column":19,"nodeType":"588","messageId":"592","endLine":406,"endColumn":21},{"ruleId":"586","severity":1,"message":"613","line":414,"column":19,"nodeType":"588","messageId":"592","endLine":414,"endColumn":21},{"ruleId":"578","severity":1,"message":"624","line":13,"column":8,"nodeType":"580","messageId":"581","endLine":13,"endColumn":18},{"ruleId":"582","severity":1,"message":"598","line":49,"column":7,"nodeType":"584","endLine":49,"endColumn":9,"suggestions":"625"},{"ruleId":"578","severity":1,"message":"626","line":15,"column":5,"nodeType":"580","messageId":"581","endLine":15,"endColumn":10},{"ruleId":"578","severity":1,"message":"627","line":75,"column":17,"nodeType":"580","messageId":"581","endLine":75,"endColumn":20},{"ruleId":"582","severity":1,"message":"628","line":80,"column":10,"nodeType":"584","endLine":80,"endColumn":12,"suggestions":"629"},{"ruleId":"582","severity":1,"message":"603","line":9,"column":3,"nodeType":"580","endLine":9,"endColumn":12,"suggestions":"630"},{"ruleId":"578","severity":1,"message":"627","line":28,"column":13,"nodeType":"580","messageId":"581","endLine":28,"endColumn":16},{"ruleId":"631","severity":1,"message":"632","line":25,"column":5,"nodeType":"621","endLine":25,"endColumn":15},{"ruleId":"578","severity":1,"message":"633","line":8,"column":7,"nodeType":"580","messageId":"581","endLine":8,"endColumn":14},{"ruleId":"578","severity":1,"message":"634","line":6,"column":9,"nodeType":"580","messageId":"581","endLine":6,"endColumn":15},{"ruleId":"582","severity":1,"message":"617","line":31,"column":10,"nodeType":"584","endLine":31,"endColumn":12,"suggestions":"635"},{"ruleId":"586","severity":1,"message":"587","line":19,"column":28,"nodeType":"588","messageId":"589","endLine":19,"endColumn":30},{"ruleId":"582","severity":1,"message":"617","line":27,"column":8,"nodeType":"584","endLine":27,"endColumn":10,"suggestions":"636"},{"ruleId":"586","severity":1,"message":"587","line":16,"column":20,"nodeType":"588","messageId":"589","endLine":16,"endColumn":22},{"ruleId":"582","severity":1,"message":"637","line":35,"column":8,"nodeType":"584","endLine":35,"endColumn":10,"suggestions":"638"},{"ruleId":"639","severity":1,"message":"640","line":76,"column":61,"nodeType":"641","messageId":"642","endLine":76,"endColumn":63},{"ruleId":"639","severity":1,"message":"640","line":81,"column":74,"nodeType":"641","messageId":"642","endLine":81,"endColumn":76},{"ruleId":"578","severity":1,"message":"579","line":1,"column":27,"nodeType":"580","messageId":"581","endLine":1,"endColumn":36},{"ruleId":"578","severity":1,"message":"605","line":1,"column":38,"nodeType":"580","messageId":"581","endLine":1,"endColumn":46},{"ruleId":"582","severity":1,"message":"617","line":67,"column":10,"nodeType":"584","endLine":67,"endColumn":12,"suggestions":"643"},{"ruleId":"639","severity":1,"message":"640","line":179,"column":66,"nodeType":"641","messageId":"642","endLine":179,"endColumn":68},{"ruleId":"639","severity":1,"message":"640","line":187,"column":67,"nodeType":"641","messageId":"642","endLine":187,"endColumn":69},{"ruleId":"582","severity":1,"message":"617","line":27,"column":10,"nodeType":"584","endLine":27,"endColumn":12,"suggestions":"644"},{"ruleId":"582","severity":1,"message":"617","line":27,"column":10,"nodeType":"584","endLine":27,"endColumn":12,"suggestions":"645"},{"ruleId":"639","severity":1,"message":"640","line":38,"column":29,"nodeType":"641","messageId":"642","endLine":38,"endColumn":31},{"ruleId":"582","severity":1,"message":"617","line":31,"column":10,"nodeType":"584","endLine":31,"endColumn":12,"suggestions":"646"},{"ruleId":"586","severity":1,"message":"591","line":44,"column":35,"nodeType":"588","messageId":"592","endLine":44,"endColumn":37},{"ruleId":"639","severity":1,"message":"640","line":45,"column":70,"nodeType":"641","messageId":"642","endLine":45,"endColumn":72},{"ruleId":"639","severity":1,"message":"640","line":45,"column":86,"nodeType":"641","messageId":"642","endLine":45,"endColumn":88},"no-native-reassign",["647"],"no-negated-in-lhs",["648"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["649"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'bball2' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Link' is defined but never used.","'getChats' is defined but never used.","'setMessages' is assigned a value but never used.","'chatStatus' is assigned a value but never used.","'startChat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getGameChat' and 'match.params.id'. Either include them or remove the dependency array. If 'getGameChat' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["650"],"'createTime' is assigned a value but never used.",["651"],"'Spinner' is defined but never used.","React Hook useEffect contains a call to 'setUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [chat.names, user.name] as a second argument to the useEffect Hook.",["652"],"'useState' is defined but never used.","'axios' is defined but never used.","'Redirect' is defined but never used.",["647"],["648"],"'friends' is assigned a value but never used.","'Request' is defined but never used.",["653"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","'searchterm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clearGame'. Either include it or remove the dependency array. If 'clearGame' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["654"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["655"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"656","text":"657"},"'FriendList' is defined but never used.",["658"],"'model' is defined but never used.","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currChat' and 'user._id'. Either include them or remove the dependency array.",["659"],["660"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","'USER_ID' is assigned a value but never used.","'format' is defined but never used.",["661"],["662"],"React Hook useEffect has a missing dependency: 'game._id'. Either include it or remove the dependency array.",["663"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["664"],["665"],["666"],["667"],"no-global-assign","no-unsafe-negation",{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"668","fix":"672"},{"desc":"673","fix":"674"},{"desc":"668","fix":"675"},{"desc":"676","fix":"677"},{"desc":"678","fix":"679"},[15924,15935],"\r\n        .",{"desc":"670","fix":"680"},{"desc":"681","fix":"682"},{"desc":"673","fix":"683"},{"desc":"678","fix":"684"},{"desc":"678","fix":"685"},{"desc":"686","fix":"687"},{"desc":"678","fix":"688"},{"desc":"678","fix":"689"},{"desc":"678","fix":"690"},{"desc":"678","fix":"691"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"692","text":"693"},"Update the dependencies array to be: [getGameChat, match.params.id]",{"range":"694","text":"695"},{"range":"696","text":"693"},"Add dependencies array: [chat.names, user.name]",{"range":"697","text":"698"},{"range":"699","text":"693"},"Update the dependencies array to be: [clearGame, game]",{"range":"700","text":"701"},"Update the dependencies array to be: [user._id]",{"range":"702","text":"703"},{"range":"704","text":"695"},"Update the dependencies array to be: [currChat, user._id]",{"range":"705","text":"706"},{"range":"707","text":"698"},{"range":"708","text":"703"},{"range":"709","text":"703"},"Update the dependencies array to be: [game._id]",{"range":"710","text":"711"},{"range":"712","text":"703"},{"range":"713","text":"703"},{"range":"714","text":"703"},{"range":"715","text":"703"},[460,462],"[getCurrentProfile]",[1611,1613],"[getGameChat, match.params.id]",[395,397],[444,444],", [chat.names, user.name]",[534,536],[2002,2008],"[clearGame, game]",[2767,2769],"[user._id]",[1560,1562],[2286,2288],"[currChat, user._id]",[569,569],[902,904],[726,728],[1218,1220],"[game._id]",[1910,1912],[767,769],[767,769],[936,938]]