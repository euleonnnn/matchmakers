[{"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\index.js":"1","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\App.js":"2","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\store.js":"3","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\setAuthToken.js":"4","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\auth.js":"5","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Alert.js":"6","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Navbar.js":"7","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Landing.js":"8","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Login.js":"9","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Register.js":"10","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\CreateProfile.js":"11","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\EditProfile.js":"12","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\MyProfile.js":"13","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\UserProfile.js":"14","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\routing\\PrivateRoute.js":"15","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\Profiles.js":"17","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\types.js":"18","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\alert.js":"19","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\profile.js":"20","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Spinner.js":"21","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\ProfileItem.js":"22","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendList.js":"23","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\index.js":"24","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\alert.js":"25","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\auth.js":"26","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\profile.js":"27","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\game.js":"28","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\Games.js":"29","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\game.js":"30","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameRoom.js":"31","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\dateformat.js":"32","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\CreateGame.js":"33","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\AccountSettings.js":"34","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\MessageBox.js":"35","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Message.js":"36","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Chat.js":"37","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\chat.js":"38","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\chat.js":"39","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendItem.js":"40","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameChat.js":"41","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameMessage.js":"42","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\gamechat.js":"43","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\gamechat.js":"44","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\PasswordChange.js":"45","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\index.js":"46","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\App.js":"47","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\store.js":"48","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\auth.js":"49","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\utils\\setAuthToken.js":"50","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Landing.js":"51","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Navbar.js":"52","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\Login.js":"53","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\Register.js":"54","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\PasswordChange.js":"55","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\AccountSettings.js":"56","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Alert.js":"57","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\CreateProfile.js":"58","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Dashboard.js":"59","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\MyProfile.js":"60","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\EditProfile.js":"61","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\UserProfile.js":"62","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\Profiles.js":"63","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\routing\\PrivateRoute.js":"64","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\Games.js":"65","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameRoom.js":"66","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\CreateGame.js":"67","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\EnterCall.js":"68","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\MessageBox.js":"69","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\types.js":"70","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\alert.js":"71","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\profile.js":"72","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\chat.js":"73","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\Message.js":"74","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\Chat.js":"75","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Spinner.js":"76","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\ChannelForm.js":"77","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\StudyForm.js":"78","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\OnlineGamesForm.js":"79","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\VideoCall.js":"80","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\gamechat.js":"81","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\SportsForm.js":"82","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\utils\\dateformat.js":"83","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\game.js":"84","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameChat.js":"85","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\ProfileItem.js":"86","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FriendList.js":"87","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\index.js":"88","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameMessage.js":"89","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FriendItem.js":"90","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\alert.js":"91","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\auth.js":"92","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\game.js":"93","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\profile.js":"94","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\gamechat.js":"95","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\chat.js":"96","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\BookFacility.js":"97","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Request.js":"98","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FollowerItem.js":"99","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\FriendList.js":"100","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\Request.js":"101","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\FriendItem.js":"102","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\FollowerItem.js":"103","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\GameItem.js":"104","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Loading.js":"105","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\SearchDict.js":"106"},{"size":248,"mtime":1622015683220,"results":"107","hashOfConfig":"108"},{"size":3139,"mtime":1623847663156,"results":"109","hashOfConfig":"108"},{"size":525,"mtime":1622017945910,"results":"110","hashOfConfig":"108"},{"size":253,"mtime":1621834101000,"results":"111","hashOfConfig":"108"},{"size":3395,"mtime":1623856105582,"results":"112","hashOfConfig":"108"},{"size":681,"mtime":1622029844696,"results":"113","hashOfConfig":"108"},{"size":3780,"mtime":1623175227466,"results":"114","hashOfConfig":"108"},{"size":1193,"mtime":1622188968941,"results":"115","hashOfConfig":"108"},{"size":2569,"mtime":1623114736157,"results":"116","hashOfConfig":"108"},{"size":3738,"mtime":1622168655435,"results":"117","hashOfConfig":"108"},{"size":4425,"mtime":1623474395458,"results":"118","hashOfConfig":"108"},{"size":6154,"mtime":1623683989652,"results":"119","hashOfConfig":"108"},{"size":1997,"mtime":1623683989653,"results":"120","hashOfConfig":"108"},{"size":5214,"mtime":1623477385632,"results":"121","hashOfConfig":"108"},{"size":599,"mtime":1622290473306,"results":"122","hashOfConfig":"108"},{"size":5775,"mtime":1623847205614,"results":"123","hashOfConfig":"108"},{"size":1827,"mtime":1623114350195,"results":"124","hashOfConfig":"108"},{"size":1148,"mtime":1623854942224,"results":"125","hashOfConfig":"108"},{"size":636,"mtime":1622033894520,"results":"126","hashOfConfig":"108"},{"size":2820,"mtime":1622962512456,"results":"127","hashOfConfig":"108"},{"size":273,"mtime":1621834101000,"results":"128","hashOfConfig":"108"},{"size":1218,"mtime":1622550892482,"results":"129","hashOfConfig":"108"},{"size":1283,"mtime":1623476012574,"results":"130","hashOfConfig":"108"},{"size":446,"mtime":1623743429712,"results":"131","hashOfConfig":"108"},{"size":611,"mtime":1622039051791,"results":"132","hashOfConfig":"108"},{"size":1581,"mtime":1623854995364,"results":"133","hashOfConfig":"108"},{"size":1040,"mtime":1622964793845,"results":"134","hashOfConfig":"108"},{"size":1423,"mtime":1622880181460,"results":"135","hashOfConfig":"108"},{"size":3351,"mtime":1623842643415,"results":"136","hashOfConfig":"108"},{"size":3249,"mtime":1622863608559,"results":"137","hashOfConfig":"108"},{"size":9702,"mtime":1623806441373,"results":"138","hashOfConfig":"108"},{"size":221,"mtime":1622689019857,"results":"139","hashOfConfig":"108"},{"size":7165,"mtime":1623809742099,"results":"140","hashOfConfig":"108"},{"size":1660,"mtime":1623847680595,"results":"141","hashOfConfig":"108"},{"size":4354,"mtime":1623753344185,"results":"142","hashOfConfig":"108"},{"size":786,"mtime":1623725190497,"results":"143","hashOfConfig":"108"},{"size":1320,"mtime":1623753409743,"results":"144","hashOfConfig":"108"},{"size":898,"mtime":1623473837206,"results":"145","hashOfConfig":"108"},{"size":1110,"mtime":1623727296986,"results":"146","hashOfConfig":"108"},{"size":1669,"mtime":1623727875463,"results":"147","hashOfConfig":"108"},{"size":2416,"mtime":1623816838462,"results":"148","hashOfConfig":"108"},{"size":979,"mtime":1623805635775,"results":"149","hashOfConfig":"108"},{"size":916,"mtime":1623810181643,"results":"150","hashOfConfig":"108"},{"size":1120,"mtime":1623743778545,"results":"151","hashOfConfig":"108"},{"size":2377,"mtime":1623856057761,"results":"152","hashOfConfig":"108"},{"size":257,"mtime":1624632065262,"results":"153","hashOfConfig":"154"},{"size":3495,"mtime":1625332849667,"results":"155","hashOfConfig":"154"},{"size":546,"mtime":1624632065290,"results":"156","hashOfConfig":"154"},{"size":3542,"mtime":1624632065027,"results":"157","hashOfConfig":"154"},{"size":264,"mtime":1624632065300,"results":"158","hashOfConfig":"154"},{"size":1236,"mtime":1624632065126,"results":"159","hashOfConfig":"154"},{"size":3780,"mtime":1624760806822,"results":"160","hashOfConfig":"154"},{"size":2640,"mtime":1626159343752,"results":"161","hashOfConfig":"154"},{"size":3970,"mtime":1625366590332,"results":"162","hashOfConfig":"154"},{"size":2331,"mtime":1624890140759,"results":"163","hashOfConfig":"154"},{"size":1681,"mtime":1625752575649,"results":"164","hashOfConfig":"154"},{"size":706,"mtime":1624632065124,"results":"165","hashOfConfig":"154"},{"size":4425,"mtime":1624632065195,"results":"166","hashOfConfig":"154"},{"size":5851,"mtime":1626543113382,"results":"167","hashOfConfig":"154"},{"size":2383,"mtime":1624633192848,"results":"168","hashOfConfig":"154"},{"size":5548,"mtime":1626015645253,"results":"169","hashOfConfig":"154"},{"size":5554,"mtime":1624670207163,"results":"170","hashOfConfig":"154"},{"size":2304,"mtime":1626159650231,"results":"171","hashOfConfig":"154"},{"size":618,"mtime":1624632065192,"results":"172","hashOfConfig":"154"},{"size":25213,"mtime":1626625472370,"results":"173","hashOfConfig":"154"},{"size":14290,"mtime":1624761523333,"results":"174","hashOfConfig":"154"},{"size":1664,"mtime":1624667259090,"results":"175","hashOfConfig":"154"},{"size":610,"mtime":1624632065209,"results":"176","hashOfConfig":"154"},{"size":5297,"mtime":1626741046579,"results":"177","hashOfConfig":"154"},{"size":1148,"mtime":1624632065044,"results":"178","hashOfConfig":"154"},{"size":656,"mtime":1624632065025,"results":"179","hashOfConfig":"154"},{"size":2820,"mtime":1624632065033,"results":"180","hashOfConfig":"154"},{"size":1110,"mtime":1624632065029,"results":"181","hashOfConfig":"154"},{"size":717,"mtime":1626015474164,"results":"182","hashOfConfig":"154"},{"size":1152,"mtime":1626019838008,"results":"183","hashOfConfig":"154"},{"size":286,"mtime":1624632065129,"results":"184","hashOfConfig":"154"},{"size":958,"mtime":1624632065207,"results":"185","hashOfConfig":"154"},{"size":5109,"mtime":1624632065122,"results":"186","hashOfConfig":"154"},{"size":5891,"mtime":1624632065119,"results":"187","hashOfConfig":"154"},{"size":5296,"mtime":1625411742341,"results":"188","hashOfConfig":"154"},{"size":1120,"mtime":1624632065032,"results":"189","hashOfConfig":"154"},{"size":7073,"mtime":1624632065120,"results":"190","hashOfConfig":"154"},{"size":221,"mtime":1624632065298,"results":"191","hashOfConfig":"154"},{"size":3249,"mtime":1624632065030,"results":"192","hashOfConfig":"154"},{"size":3614,"mtime":1626741637850,"results":"193","hashOfConfig":"154"},{"size":1277,"mtime":1624668904967,"results":"194","hashOfConfig":"154"},{"size":1675,"mtime":1626539680452,"results":"195","hashOfConfig":"154"},{"size":465,"mtime":1624632065271,"results":"196","hashOfConfig":"154"},{"size":821,"mtime":1626741938318,"results":"197","hashOfConfig":"154"},{"size":1684,"mtime":1626535761177,"results":"198","hashOfConfig":"154"},{"size":633,"mtime":1624632065262,"results":"199","hashOfConfig":"154"},{"size":1643,"mtime":1624632065262,"results":"200","hashOfConfig":"154"},{"size":1423,"mtime":1624632065262,"results":"201","hashOfConfig":"154"},{"size":1089,"mtime":1624632065271,"results":"202","hashOfConfig":"154"},{"size":916,"mtime":1624632065271,"results":"203","hashOfConfig":"154"},{"size":898,"mtime":1624632065262,"results":"204","hashOfConfig":"154"},{"size":3582,"mtime":1624632065106,"results":"205","hashOfConfig":"154"},{"size":2390,"mtime":1626544714742,"results":"206","hashOfConfig":"154"},{"size":1199,"mtime":1626015521904,"results":"207","hashOfConfig":"154"},{"size":1322,"mtime":1626015674072,"results":"208","hashOfConfig":"154"},{"size":1818,"mtime":1624719886933,"results":"209","hashOfConfig":"154"},{"size":1771,"mtime":1626015663453,"results":"210","hashOfConfig":"154"},{"size":1254,"mtime":1624719813475,"results":"211","hashOfConfig":"154"},{"size":3482,"mtime":1626741531373,"results":"212","hashOfConfig":"154"},{"size":289,"mtime":1626539430225,"results":"213","hashOfConfig":"154"},{"size":756,"mtime":1626621999186,"results":"214","hashOfConfig":"154"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},"1rtdnpg",{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"217"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"217"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"217"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"217"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"217"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"217"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"217"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"217"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"217"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"217"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"217"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"217"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},"bs3a05",{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"320"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"320"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"320"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"320"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"363","usedDeprecatedRules":"320"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"320"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"320"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"320"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"320"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"320"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"320"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"320"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\index.js",[],["453","454"],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\App.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\store.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Login.js",["455"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport \"../../App.css\";\nimport '../../css/bootstrap.min.css';\n\n/**\n * Functional component for login page, allows client to\n * change the fields on the login page, as well as log into\n * their account provided their credentials are correct. \n * Parameters will be destructured props\n * @param login Our login action which will dispatch LOGIN_SUCCESS if successfully logged in with provided \n * email and password\n * @param isAuthenticated A boolean state in auth, to ensure that \n * authenticated users who are logged in will be directed to dashboard\n */\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = a => {\n    a.preventDefault();\n    login(formData.email, formData.password);\n  };\n\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Fragment>\n            <div className =\"box-body\">\n              <h1 className=\"large text-primary\">Sign In</h1>\n              \n              <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                      <input\n                        type=\"email\"\n                        placeholder=\"NUS Email Address\"\n                        name=\"email\"\n                        value={formData.email}\n                        onChange={onChange}\n                        required\n                      />\n                </div>\n\n                <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      value={formData.password}\n                      onChange={onChange}\n                      minLength=\"7\"\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" value=\"Login\" />\n              </form>\n             \n            </div>\n    </Fragment>\n  );\n}; \n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\CreateProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\EditProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\MyProfile.js",["456"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst MyProfile = ({ getCurrentProfile, auth: { user }, profile : { profile, loading } }) => {\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n      getCurrentProfile();\r\n    },[]);\r\n  \r\n    return (\r\n      <Fragment>\r\n          { loading || profile.user._id !== user._id ? (\r\n            <Spinner /> ):\r\n        <Fragment> \r\n            <h1 className=\"large\"> \r\n              {user.name}'s Profile  \r\n              <br/> \r\n              <img className=\"profiledp\" src={user.avatar} alt=\"\"/>\r\n            </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n          <p> <strong> Your Interests: </strong></p>\r\n        <ul>\r\n          {profile.interests.map(item => {\r\n              return <li>{item}</li>;\r\n            })}\r\n        </ul>\r\n\r\n        <div className =\"my-2\"> \r\n            <Link to ='/edit-profile' className=\"btn btn-primary my-1\"> Update Profile </Link>\r\n          \r\n          <> </>\r\n          <Link to=\"/dashboard\" className=\"btn btn-dark join-all\">\r\n            Home\r\n          </Link>\r\n          \r\n         \r\n          </div>\r\n        </Fragment> \r\n    }\r\n    </Fragment>\r\n  );\r\n}\r\n   \r\n  \r\n  MyProfile.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n  });\r\n  \r\n  export default connect(mapStateToProps, { getCurrentProfile })(MyProfile);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\UserProfile.js",["457"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfilesById } from '../../actions/profile';\r\nimport { authUser } from '../../actions/auth'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {createChat} from '../../actions/chat';\r\n\r\n\r\nconst UserProfile = ({ createChat, chat:{chats}, authUser, getProfilesById, profile: { profile, loading }, auth, match, history}) => {\r\n\r\n  const chatID = [];\r\n  if (chats.length > 0) {\r\n    chats.map(chat => {\r\n      chatID.push(chat.users.find(id => id !== auth.user._id));\r\n    })\r\n  }\r\n  \r\n\r\n  const startNewConvo= () => {\r\n      try {\r\n        if (!chatID.includes(profile.user._id)) {\r\n            const formData = {\r\n                receiver: profile.user._id\r\n            }\r\n            createChat(formData, history)\r\n        } else {\r\n            history.push('/messagebox')\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n  \r\n\r\n  const [followed, toggle] = useState(\r\n    auth.user.followings.includes(match.params.id)\r\n  );\r\n\r\n  useEffect(() => {\r\n    authUser();\r\n  });\r\n\r\n\r\n  //cannot rerender if not clicking directly on the main page will conflict with main page rerender\r\n  useEffect(() => {\r\n      getProfilesById(match.params.id);\r\n      // eslint-disable-next-line\r\n    },[getProfilesById]);\r\n\r\n\r\n  const followUnfollow = () => {\r\n      try {\r\n        if (!followed) {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/follow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        } else {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/unfollow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        }\r\n      }catch (err) { \r\n        console.log(err.status)\r\n      }\r\n    };\r\n    \r\n    if (profile === null || loading) {\r\n      return < Spinner />\r\n    } else {\r\n      if (profile.user._id === auth.user._id) {\r\n        return <Spinner />\r\n      } else {\r\n        return <Fragment>\r\n            <h1> {profile.user.name}'s Profile  </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n            <p> <strong> Your Interests: </strong></p>\r\n                <ul>\r\n                {profile.interests.map(item => {\r\n                    return <li>{item}</li>;\r\n                    })}\r\n                </ul>\r\n            \r\n            {profile.hasOwnProperty(\"social\")  && <Fragment>\r\n              <p> <strong> Social Media: </strong> </p>\r\n                  <ul>\r\n                      {profile.social.hasOwnProperty(\"facebook\") && <Fragment> <li><i class=\"fab fa-facebook\"/> {\" \"} {profile.social.facebook}</li> </Fragment> }\r\n                      {profile.social.hasOwnProperty(\"instagram\") && <Fragment> <li><i class=\"fab fa-instagram\"/> {\" \"} {profile.social.instagram}</li> </Fragment> }\r\n                  </ul>\r\n            </Fragment>\r\n            }\r\n\r\n            <Link to=\"/profiles\" className=\"btn btn-secondary\">\r\n            Find more Friends\r\n            </Link>\r\n            <>  </>\r\n            {!followed && auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-dark\">\r\n                  <i class=\"fas fa-user-plus\"/>   Follow\r\n                </button>\r\n                ) \r\n            }\r\n\r\n            {followed && auth.isAuthenticated &&\r\n                auth.loading === false && \r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-success\">\r\n                   <i class=\"fas fa-user-minus\"/>   Unfollow\r\n                </button>\r\n                ) \r\n            }\r\n            \r\n            <>  </>\r\n            {auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {startNewConvo()}} type=\"button\" className=\"btn btn-primary my-1\"> <i class=\"fas fa-comment-dots\"/>\r\n                    {\" \"} Message\r\n                 </button>\r\n                ) \r\n            }\r\n        </Fragment>\r\n      }\r\n    }\r\n  };\r\n\r\n\r\nUserProfile.propTypes = {\r\n    getProfilesById: PropTypes.func.isRequired,\r\n    authUser: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth,\r\n    chat: state.chat\r\n})\r\n\r\nexport default connect(mapStateToProps, { authUser, getProfilesById, createChat })(withRouter(UserProfile));","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\Dashboard.js",["458"],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\Profiles.js",["459"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport ProfileItem from './ProfileItem'\nimport { clearProfile, getProfiles } from '../../actions/profile';\n\nconst Profiles = ({clearProfile, getProfiles, profile: { profiles, loading }, auth}) => {\n    useEffect(()  => {\n        getProfiles();\n    }, [getProfiles]);\n\n    //additional clear profile to clear out dashboard rerendering\n    useEffect(()  => {\n        clearProfile();\n    }, [clearProfile]);\n\n\n    const displayAll = profiles.length <= 0 ? <h4>No profiles found</h4> : \n        profiles.map(profile => {\n            if (profile.user._id !== auth.user._id) {\n                return <ProfileItem key = {profile._id} profile ={profile} />\n            }\n        })\n\n    return <Fragment> \n        { loading ? <Spinner /> : <Fragment>\n            <h1 className = \"large text-dark big-header\"> Sports Enthusiasts of NUS </h1>\n\n            <div className =\"input-group my-3\">\n                <input type=\"search\" className =\"form-control rounded\" placeholder=\"Search\" aria-label=\"Search\"\n                    aria-describedby=\"search-addon\" />\n                <button type=\"button\" class=\"btn btn-outline-primary\">search</button>\n            </div>\n            <div className=\"profiles\">\n                {displayAll}\n            </div>\n\n        </Fragment>}\n    </Fragment>\n    \n}\n  \nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    clearProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n};\n  \nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    auth: state.auth\n});\n\n  \nexport default connect(mapStateToProps, { clearProfile, getProfiles})(Profiles);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\types.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\ProfileItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendList.js",["460"],"import { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport FriendItem from \"./FriendItem\";\n\n\nconst FriendList = ({auth: { user }, chat:{chats}}) => {\n\n    const [friends, setFriends] = useState([]);\n\n\n    useEffect(() => {\n        const getFriends = async () => {\n          try {\n            const friendList = await axios.get(\"/api/users/friends/\" + user._id);\n            setFriends(friendList.data);\n          } catch (err) {\n            console.log(err);\n          }\n        };\n        getFriends()\n      });\n    \n    \n\n    return (\n      \n      <div className=\"card\">\n          <div className=\"card-header\">\n              <strong> My Friends ({friends.length}) </strong>\n          </div>\n        \n          <ul className=\"list-group list-group-flush\">\n            {friends.map((friend) => (\n                <FriendItem friend ={friend}/>\n           ))}\n          </ul>\n        </div>\n       \n    )\n}\n\n\nFriendList.propTypes = {\n  auth: PropTypes.object.isRequired,\n  chat: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    chat: state.chat\n});\n\nexport default connect(mapStateToProps)(FriendList);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\index.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\Games.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameRoom.js",["461","462","463","464","465"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { authUser } from '../../actions/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { getGameById } from '../../actions/game';\r\nimport { clearProfile } from '../../actions/profile';\r\nimport axios from 'axios';\r\nimport dateformat from '../../utils/dateformat';\r\nimport GameChat from './GameChat';\r\nimport { getChats } from '../../actions/chat';\r\nimport { getGameChat, createGameChat } from '../../actions/gamechat';\r\n\r\n\r\nconst GameRoom = ({ getGameChat, createGameChat, clearProfile, getGameById, authUser, auth, game : {game, loading}, match, gamechat: {gamechat} }) => {\r\n\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const [chatStatus, startChat] = useState(\r\n        messages.length === 0\r\n    );\r\n    \r\n  \r\n    \r\n    const startNewConvo= () => {\r\n        try {\r\n            const formData = {\r\n                room: game._id\r\n            }\r\n            createGameChat(formData)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n    }\r\n\r\n    const quitGame = () => {\r\n        try {\r\n            axios.put(`/api/games/quit/${game._id}`);\r\n        } catch (err) { \r\n            console.log(err.status)\r\n        }\r\n      };\r\n    \r\n    const joinGame = () => {\r\n        try {\r\n            axios.put(`/api/games/join/${game._id}`);\r\n        } catch (err) { \r\n            console.log(err.status)\r\n        }\r\n      };\r\n\r\n    useEffect(() => {\r\n        getGameChat(match.params.id);\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        getGameById(match.params.id);\r\n    });\r\n    \r\n    useEffect(() => {\r\n        authUser();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        clearProfile();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    if (game === null || loading || gamechat === null) {\r\n        return(\r\n            <Fragment>\r\n                <Spinner />\r\n            </Fragment>\r\n        ) \r\n    } else {\r\n        return (\r\n            <Fragment>\r\n                <h1 className=\"text-primary my-3 my-btm\"> {game.name}'s Game Lobby  </h1>\r\n                <div className=\"row\">\r\n                <div className=\"card-body\">\r\n                <Link to=\"/all-games\" className=\"btn btn-dark join-all\"> <i class=\"fas fa-sign-out-alt\" /> Leave Lobby </Link>\r\n                </div>\r\n                </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                            <h5 className=\"card-title my-3 host-title\">{game.sport}</h5>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Experience Level: </span> {game.experience}</p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"?game.otherLoc:game.location}</p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Date: </span> {dateformat(game.dateTime)} </p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Max Players: </span> {game.maxPlayers} </p>\r\n                                <br></br>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                <h5 className=\"card-title my-3 host-title\">Players In Waiting Room : {game.players.length} </h5>\r\n                                {game.players.length > 0 && game.players.map(player => { \r\n                                    if (player.user === auth.user._id) {\r\n                                        return (\r\n                                            <Fragment>\r\n                                            <div className=\"card mb-3\">\r\n                                            <div className=\"card-body player-card\">\r\n                                                {player.name}\r\n                                                <button onClick= {()=> {\r\n                                                    quitGame();\r\n                                                }} type=\"button\" className=\"btn btn-danger btn-round join-all\"> <i class=\"far fa-times-circle\"/> </button>\r\n                                            </div>\r\n                                            </div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    } else {\r\n                                        return (\r\n                                            <Fragment>\r\n                                            <div className=\"card mb-3\">\r\n                                            <div className=\"card-body player-card\">\r\n                                                <Link to={`/profile/${player.user}`}> {player.name} </Link> \r\n                                            </div>\r\n                                            </div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    }\r\n                                })}\r\n                                <p> { game.players.length < game.maxPlayers && game.players.filter(player => \r\n                                    player.user === auth.user._id).length === 0  && \r\n                                    <button onClick= {()=> {\r\n                                        joinGame();\r\n                                    }} type=\"button\" className=\"btn btn-primary join-all\"> Join Game </button>}\r\n                                </p>\r\n\r\n                                <h5> { game.players.length >= game.maxPlayers && <span class=\"badge badge-light\">\r\n                                    Waiting Room is Currently Full</span>}</h5>\r\n                             \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"row g-0\">\r\n                                <div className=\"col-md-4\">\r\n                                    <img height=\"195\" width =\"195\" src={game.avatar} className=\"round-img\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                    <h5 className=\"card-title my-3 host-title \">About Game Host </h5>\r\n                                    <p className=\"card-text\"> <span className='text-primary'> Host Name: </span> {game.name}</p>\r\n                                    <small className=\"card-text text-muted\"> Room Created: {dateformat(game.createTime)} </small>\r\n                                    <br></br>\r\n                                </div>\r\n                            </div>\r\n                                {game.user !== auth.user._id &&  <Link to={`/profile/${game.user}`} className=\"btn btn-dark btn-lg btn-block\"> View Host Profile </Link>}\r\n                                {game.user === auth.user._id &&  <Link to=\"#!\" className=\"btn btn-dark btn-lg btn-block\"> <i class=\"fas fa-cog\"/> Game Settings </Link>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 col-md-12\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title my-3 host-title \"> Game Chat</h5>\r\n                                </div>\r\n\r\n                                { gamechat.length === 0 && game.user !== auth.user._id &&\r\n                                    <Fragment>\r\n                                        <h1 className =\"badge badge-danger\"> Game Chat has not been enabled </h1>\r\n                                    </Fragment>\r\n                                }\r\n\r\n                                { (gamechat.length === 0 && game.user === auth.user._id) \r\n                                    && <button type=\"button\" onClick = {()=> {startNewConvo()}} className=\"btn btn-success btn-lg btn-block \">\r\n                                      Enable Chat\r\n                                </button> }\r\n\r\n                                { gamechat.length > 0 &&  <GameChat />}\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nGameRoom.propTypes = {\r\n    getGameById: PropTypes.func.isRequired,\r\n    authUser: PropTypes.func.isRequired,\r\n    clearProfile: PropTypes.func.isRequired,\r\n    createGameChat: PropTypes.func.isRequired,\r\n    getGameChat: PropTypes.func.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    game: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    gamechat: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    game: state.game,\r\n    auth: state.auth,\r\n    gamechat: state.gamechat\r\n})\r\n\r\nexport default connect(mapStateToProps, { getGameChat, createGameChat, clearProfile, getGameById, authUser })(GameRoom);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\dateformat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\CreateGame.js",["466"],"import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createGame } from '../../actions/game';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst CreateGame = ({ createGame, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        sport: '',\r\n        location: '',\r\n        otherLoc: '',\r\n        experience: '',\r\n        maxPlayers: '',\r\n        dateTime: Date.now,\r\n        createTime: Date.now,\r\n    });\r\n    \r\n    const {\r\n       sport,\r\n       location,\r\n       otherLoc,\r\n       experience,\r\n       maxPlayers,\r\n       dateTime,\r\n       createTime,\r\n    } = formData;\r\n\r\n    const sports = [\r\n        { sport: \"Badminton\", locations:[\"Kent Ridge - MPSH 5\", \"UTown - Sports Hall 1\"], \r\n            maxPlayers:[\"2\",\"3\",\"4\",\"5\",\"6\"] },\r\n        { sport: \"Basketball\", locations:[\"Eusoff Hall\", \"NUS Sports & Recreation Centre\",\"Temasek Hall\",\"Others\"], \r\n        maxPlayers:[\"4\",\"6\",\"8\",\"9\",\"10\"] },\r\n        { sport: \"Frisbee\", locations:[\"Kent Ridge - Multi-Purpose Fields\",\"Utown - Open Field\",\"Others\"], \r\n        maxPlayers:[\"4\",\"6\",\"8\",\"9\",\"10\"] },\r\n        { sport: \"Running\", locations:[\"Kent Ridge - Running Field\", \"West Coast Park\",\"Others\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\"] },\r\n        { sport: \"Squash\", locations:[\"Kent Ridge - Squash Courts\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\"] },\r\n        { sport: \"Swimming\", locations:[\"NUS Sports & Recreation Centre\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\"] },\r\n        { sport: \"Table Tennis\", locations:[\"Kent Ridge - MPSH 2\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\",\"6\"] },\r\n        { sport: \"Tennis\", locations:[\"Kent Ridge - Outdoor Tennis Courts\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\",\"6\"] },\r\n      ];\r\n\r\n    const setToday = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 1;\r\n        var yyyy = today.getFullYear();\r\n        var hh = today.getHours() + 1;\r\n        var mins = \"00\";\r\n\r\n        if (dd<10) {\r\n            dd = \"0\" + dd;\r\n        }\r\n\r\n        if (mm<10) {\r\n            mm = \"0\" + mm;\r\n        }\r\n\r\n\r\n        if (hh<10) {\r\n            hh = \"0\" + hh;\r\n        }\r\n\r\n        if (hh===24) {\r\n            hh = \"00\";\r\n        }\r\n\r\n        today = yyyy+'-'+mm+'-'+dd+'T'+hh+\":\"+mins;\r\n        document.getElementById(\"datefield\").setAttribute(\"min\", today);\r\n    }\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const locationChange = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value});\r\n        if (e.target.value!==\"Others\" && formData.otherLoc!=='') {\r\n            document.getElementById('otherLoc').value = '';\r\n        }\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createGame(formData, history);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className =\"container\">\r\n            <h1 className=\"large my-btm\"> <i class=\"fas fa-football-ball\"/> {\" \"}\r\n                Host Your Own Game\r\n            </h1>\r\n\r\n            <form className=\"form2\" onSubmit = {data => onSubmit(data)}>\r\n                <div className=\"form-group2\">\r\n                    <select name=\"sport\" value={sport} onChange = {e=> onChange(e)}>\r\n                        <option value=\"\" disabled selected hidden> Sport </option>\r\n                        {sports.map(sport => {\r\n                            return <option>{sport.sport}</option>\r\n                        })}\r\n                    </select> \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group2\">\r\n                            <select name=\"location\" value={location} onChange = {e=> locationChange(e)}>\r\n                                <option value=\"\" disabled selected hidden>Location</option>\r\n                                {sports.filter(sport => sport.sport===formData.sport).map(\r\n                                    sport => sport.locations.map(location => {return <option>{location}</option>}))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group2\">\r\n                            {formData.location===\"Others\" && \r\n                            <Fragment>\r\n                            <input \r\n                                    id=\"otherLoc\"\r\n                                    type=\"text\" \r\n                                    name=\"otherLoc\" \r\n                                    value={otherLoc} \r\n                                    placeholder=\"Other Locations\" \r\n                                    onChange = {e=> onChange(e)}/>\r\n                             <small className=\"form-text\"> Facilities booking for these locations will not be allowed within (Match) Maker </small>\r\n                            </Fragment>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group2\">\r\n                    <select name=\"experience\" value={experience} onChange = {e=> onChange(e)}>\r\n                            <option value=\"\" disabled selected hidden>Experience Level</option>\r\n                            <option>Beginner</option>\r\n                            <option>Intermediate</option>\r\n                            <option>Expert</option>\r\n                    </select> \r\n                </div>\r\n               \r\n               \r\n                <div className=\"form-group2\">\r\n                    <select name=\"maxPlayers\" value={maxPlayers} onChange = {e=> onChange(e)}>\r\n                            <option value=\"\" disabled selected hidden>Max Number of Players</option>\r\n                            {sports.filter(sport => sport.sport===formData.sport).map(\r\n                                sport => sport.maxPlayers.map(player => {return <option>{player}</option>}))\r\n                            }\r\n                    </select> \r\n                </div>\r\n\r\n                <div className=\"form-group row my-btm\">\r\n                    <div className=\"col-md-2\"> <h5> Date and Time </h5> </div>\r\n                    <input \r\n                        id=\"datefield\"\r\n                        name=\"dateTime\"\r\n                        type=\"datetime-local\"\r\n                        value={dateTime}\r\n                        onChange={e => onChange(e)}\r\n                        onClick={setToday}\r\n                        className=\"col-md-6\"\r\n                        max=\"2022-06-14T00:00\"\r\n                    />\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-3\" />\r\n\r\n                <>   </>\r\n                <Link className=\"btn btn-light my-3\" to=\"/all-games\">Go Back</Link>\r\n            </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nCreateGame.propTypes = {\r\n    createGame: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {createGame}) (withRouter(CreateGame))\r\n\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\AccountSettings.js",["467"],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\MessageBox.js",["468"],"import React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport Chat from './Chat';\r\nimport Message from './Message';\r\nimport { getChats } from '../../actions/chat';\r\nimport axios from 'axios';\r\nimport ChatBG from '../../img/ChatBG.png'\r\n\r\n//main page for display of all conversations and messages \r\nconst MessageBox = ({getChats, auth: { user }, chat : {chats}}) => {\r\n    const [currChat, setChat] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [formData, setFormData] = useState(\"\");\r\n    const [friendImg, setImg] = useState(null);\r\n    const scroll = useRef();\r\n\r\n    useEffect(() => {\r\n        getChats();\r\n      }, [getChats]);\r\n\r\n      useEffect(() => async () => {\r\n        try {\r\n          if (currChat !== null) {\r\n          const friendId = currChat.users.find((u)=> u !== user._id);\r\n          const res = await axios.get(`/api/profile/user/${friendId}`);\r\n          const img = res.data.user.avatar;\r\n          setImg(img);\r\n          } \r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n    useEffect(() => {\r\n        const getMessages = async () => {\r\n          try {\r\n            const res = await axios.get(`/api/message/${currChat._id}`);\r\n            setMessages(res.data);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        getMessages();\r\n      }, [currChat]);\r\n\r\n    const onSubmit = async (e) => {\r\n      e.preventDefault();\r\n      const message = {\r\n        text: formData\r\n      }\r\n\r\n      try {\r\n        if (message.text !== \"\"){\r\n          const res = await axios.post(`/api/message/${currChat._id}`, message);\r\n          setMessages([...messages, res.data])\r\n          setFormData(\"\")\r\n        } \r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      scroll.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n  \r\n    \r\n    return <Fragment>\r\n        <div className =\"row\">\r\n        <div className=\"col-sm-4 col-md-4 chatbg-dark\">\r\n        <Link to ='/profiles' className=\"btn btn-outline-primary my-top\"> Find More Friends <i class=\"fas fa-plus\"/> </Link>\r\n            {chats.map((chat=> (\r\n                <div onClick ={()=> setChat(chat)}>\r\n                    <Chat chat = {chat}/> \r\n                </div>\r\n            )))}\r\n        </div>\r\n        {currChat ? \r\n        <Fragment>             \r\n        <div className=\"col-sm-8 col-md-8 namebox chatbg-dark\">\r\n        <h4 className=\"nametext my-btm\"> \r\n          {currChat === null ? <></> : currChat.names.find(name => name !== user.name)} \r\n          <img className=\"chatboxdp\" src={friendImg} alt=\"\"/>      \r\n        </h4>     \r\n            <div className=\"chatbox chatbg\">\r\n                {messages.map((msg) => (\r\n                    <div ref = {scroll}>\r\n                      <Message message={msg} sent={msg.sender === user._id} />\r\n                    </div>\r\n                  ))}\r\n            </div>\r\n            <div className =\"input-group my-top\">\r\n            <textarea \r\n                type=\"text\" \r\n                className =\"form-control rounded\" \r\n                placeholder=\"Type Something\" \r\n                onChange={(e)=>setFormData(e.target.value)}\r\n                value = {formData}\r\n                />\r\n            <button type=\"button\" class=\"btn btn-outline-primary my-right\" onClick={onSubmit}> <i class=\"fas fa-paper-plane\" /> </button>\r\n            </div>\r\n        </div>\r\n        </Fragment> : \r\n        <div className=\"col-sm-8 col-md-8 emptychat\">\r\n          <h3 className =\"emptychattextln1\">Howdy, {user.name}!</h3>\r\n          <h3 className =\"emptychattextln2\">Open a Conversation to Start Chatting :-)</h3>\r\n          <br/>\r\n          <img className=\"emptychatimg\" src={ChatBG} alt=\"ChatBG\"/>\r\n          </div>\r\n        }\r\n        </div>\r\n    </Fragment> \r\n}\r\n\r\n\r\nMessageBox.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, {getChats})(MessageBox);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Message.js",["469","470"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {format} from 'timeago.js'\r\n\r\nconst Message = ({auth: { user }, sent, message}) => {\r\n\r\n  return (\r\n    <Fragment>\r\n       <div className={sent ? \"message sent\" : \"message\"}>\r\n        <div className=\"toptext\">\r\n          <p className=\"messagetext\">{message.text}</p>\r\n        </div>\r\n        <div className=\"text-muted btmtext\">{format(message.createdAt)}</div>\r\n      </div>\r\n      </Fragment>\r\n  );\r\n}\r\n\r\n\r\nMessage.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth,\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, {})(Message);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Chat.js",["471"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nconst Chat = ({auth : {user} , chat , loading }) => {\r\n  const [otherUser, setUser] = useState(null);\r\n  const [friendImg, setImg] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    const friendName = chat.names.find((name)=> name !== user.name);\r\n    setUser(friendName);\r\n  });\r\n\r\n  useEffect(() => async () => {\r\n    try {\r\n    const friendId = chat.users.find((u)=> u !== user._id);\r\n      const res = await axios.get(`/api/profile/user/${friendId}`);\r\n      const img = res.data.user.avatar;\r\n      setImg(img);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  });\r\n\r\n    if (loading || otherUser == null) {\r\n      return null;\r\n    }\r\n    else {\r\n      return <Fragment>\r\n        <div className=\"conversation my-top-small\">\r\n          <img className=\"chatdp\" src={friendImg} alt=\"\"/>\r\n          <span className=\"conversationName\">{otherUser}</span>\r\n        </div>\r\n      </Fragment>\r\n    }\r\n}\r\n\r\n\r\n\r\nChat.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth\r\n});\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, {})(Chat);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendItem.js",["472","473"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createChat, getChats } from '../../actions/chat';\r\n\r\n\r\nconst FriendItem = ({createChat, getChats, auth: { user }, friend, chat:{chats}, history}) => {\r\n    useEffect(() => {\r\n        getChats();\r\n      }, [getChats]);\r\n\r\n    const chatID = [];\r\n    \r\n    chats.map(chat => {\r\n        chatID.push(chat.users.find(id => id !== user._id));\r\n    })\r\n\r\n    const startNewConvo= () => {\r\n        try {\r\n          if (!chatID.includes(friend._id)) {\r\n              const formData = {\r\n                  receiver: friend._id\r\n              }\r\n              createChat(formData, history)\r\n          } else {\r\n              history.push('/messagebox')\r\n          }\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n    }\r\n  \r\n\r\n    return (\r\n        <Fragment>\r\n        <li className=\"list-group-item\"> \r\n                {friend.name}  \r\n                <button onClick= {()=> {startNewConvo()}} type=\"button\" className=\"btn btn-dark join-all\">\r\n                <i class=\"fas fa-comment-dots\"/> \r\n                </button>\r\n            </li> \r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nFriendItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, {getChats, createChat})(withRouter(FriendItem));\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameChat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameMessage.js",["474","475","476","477"],"import React, { Fragment, useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {format} from 'timeago.js'\r\nimport axios from 'axios';\r\n\r\n\r\nconst GameMessage = ({auth: { user }, message}) => {\r\n\r\n  const sent = message.name === user.name;\r\n\r\n  return <Fragment>\r\n       <div className={sent ? \"message sent\" : \"message\"}>\r\n        <p>{message.name}</p> \r\n        <div className=\"toptext\">\r\n          {sent ? <></> : <img className=\"gamechatdp\" src={message.avatar} alt=\"\"/>}\r\n          <p className=\"messagetext\">{message.text}</p>\r\n        </div>\r\n        <div className=\"text-muted btmtext\">{format(message.createdAt)}</div>\r\n      </div>\r\n      </Fragment>\r\n\r\n}\r\n\r\n\r\nGameMessage.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth,\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps)(GameMessage);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\PasswordChange.js",["478"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\index.js",[],["479","480"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\App.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\store.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\PasswordChange.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\AccountSettings.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\CreateProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Dashboard.js",["481","482"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport FriendList from './FriendList';\r\nimport Request from './Request';\r\nimport GameItem from './GameItem';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport { getGames } from '../../actions/game';\r\nimport '../../css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport bball from '../layout/bball.jpg';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Dashboard = ({ getGames, getCurrentProfile, auth: { user }, profile: { profile, loading }, game: { games }, logout }) => {\r\n\r\n  const icon_dict = {\r\n    \"basketball\" : <span role=\"img\">🏀</span>,\r\n    \"soccer\" : <span role=\"img\">⚽</span>,\r\n    \"football\" : <span role =\"img\">⚽</span>,\r\n    \"rugby\" : <span role=\"img\">🏉</span>,\r\n    \"running\" : <span role =\"img\">🏃</span>,\r\n    \"jogging\" : <span role =\"img\">🏃</span>,\r\n    \"table tennis\": <span role=\"img\">🏓</span>,\r\n    \"ping pong\" : <span role=\"img\">🏓</span>,\r\n    \"volleyball\" : <span role=\"img\">🏐</span>,\r\n    \"softball\" : <span role=\"img\">🥎</span>,\r\n    \"cycling\" : <span role=\"img\">🚴</span>,\r\n    \"lifting\" :  <span role=\"img\">🏋️</span>,\r\n    \"gym\" :  <span role=\"img\">🏋️</span>,\r\n    \"swimming\" : <span role=\"img\">🏊</span>,\r\n    \"study\": <span role =\"img\">📖</span>,\r\n    \"studying\": <span role =\"img\">📖</span>,\r\n    \"MLBB\": <span role =\"img\">🎮</span>,\r\n    \"game\": <span role =\"img\">🎮</span>,\r\n    \"gaming\": <span role =\"img\">🎮</span>,\r\n    \"tennis\" : <span role=\"img\">🎾</span>,\r\n    \"boxing\" : <span role=\"img\">🥊</span>\r\n  }\r\n\r\n  useEffect(() => {\r\n    getGames();\r\n  }, [games]);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [profile]);\r\n\r\n  const convertTime = e => {\r\n    var d1 = new Date(e);\r\n    return d1.getTime();\r\n  }\r\n\r\n\r\n  if (loading || user === null) {\r\n    return <Spinner />;\r\n  } else {\r\n    const my_games = games.filter(game => game.user === user._id)\r\n    const joined_games = games.filter(game => game.user !== user._id && game.players.filter(player => player.user === user._id).length > 0)\r\n    return <Fragment>\r\n      <h1 className=\"large big-header my-top\"><i className=\"fas fa-dumbbell\" /> {\" \"} Hello There, {user && user.name}</h1>\r\n      {profile !== null && user !== null ?\r\n        (profile.user._id !== user._id ? <Spinner /> :\r\n          <Fragment>\r\n\r\n            <div className=\"container\">\r\n              <div className=\"  row\">\r\n                <div className=\"col-sm-8 col-md-8\">\r\n                  <h4 className=\"text-primary\">  My Interests </h4>\r\n\r\n                  <ul>\r\n                    {profile.interests.map(item => {\r\n                      return <li key={item._id}> \r\n                      {icon_dict[item.toLowerCase()] !== undefined && icon_dict[item.toLowerCase()]} \r\n                      {icon_dict[item.toLowerCase()] === undefined && <i className=\"fas fa-icons\"></i>}\r\n                      {\" \"}\r\n                      {item}</li>;\r\n                    })}\r\n                  </ul>\r\n                      \r\n                  <h4 className=\"text-primary my-top my-btm-small\"> Pending Games </h4>\r\n\r\n\r\n                  {my_games.filter(game => (convertTime(game.dateTime) > Date.now())).length === 0 &&\r\n                    joined_games.filter(game => (convertTime(game.dateTime) > Date.now())).length === 0\r\n                    && <h4 className=\"my-top\">You have no upcoming games</h4>}\r\n\r\n                  {my_games.length > 0 && my_games.map(game => (convertTime(game.dateTime) < Date.now() ? <></> :\r\n                      <GameItem game={game} key={game._id}/>\r\n                  ))}\r\n\r\n                  {joined_games.length > 0 && joined_games.map(game => (convertTime(game.dateTime) < Date.now() ? <></> :\r\n                      <GameItem game={game} key={game._id}/>\r\n                  ))}\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"col-sm-4 col-md-4\">\r\n                  <div className=\"my-btm\"> <FriendList /></div>\r\n\r\n                  <Request />\r\n\r\n                  <Link to=\"/my-profile\" className=\"btn btn-secondary btn-lg btn-block my-top\"> <i className=\"fas fa-cog\" /> Profile Settings </Link>\r\n\r\n\r\n                  <h4 className=\"text-primary my-top\">  Suggested Games : </h4>\r\n                  <div className=\"card mb-3\">\r\n                    <div className=\"row g-0\">\r\n                      <div className=\"col-md-4\">\r\n                        <img height=\"100\" width=\"195\" src={bball} alt=\"Eusoff\" />\r\n                      </div>\r\n                      <div className=\"col-md-8\">\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title\">Placeholder</h5>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </Fragment>) :\r\n\r\n        <Fragment>\r\n          <p> No Profile Yet. You will need a profile to host or join games. </p>\r\n          <Link to='/create-profile' className=\"btn btn-primary my-1\"> Set Up One Now </Link>\r\n\r\n          <Link to=\"#!\" onClick={logout} className=\"btn btn-danger join-all\"> Logout </Link>\r\n\r\n        </Fragment>}\r\n    </Fragment>\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  getGames: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  logout: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n  game: state.game\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGames, getCurrentProfile, logout })(Dashboard);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\MyProfile.js",["483"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport FriendList from './FriendList';\r\nimport Request from './Request';\r\n\r\nconst MyProfile = ({ getCurrentProfile, auth: { user }, profile : { profile, loading } }) => {\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n      getCurrentProfile();\r\n    },[]);\r\n  \r\n    return (\r\n      <Fragment>\r\n          {loading || (profile && profile.user._id !== user._id) ? (\r\n            <Spinner /> ):\r\n        <Fragment> \r\n          <h1 className=\"large\"> \r\n              {user.name}'s Profile  </h1>\r\n           <div className =\"row\">  \r\n            <br/> \r\n              <div className=\"col-sm-6 col-md-6\">\r\n             <h1> <img className=\"profiledp\" src={user.avatar} alt=\"\"/>\r\n            </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n          <p> <strong> Your Interests: </strong></p>\r\n            <ul>\r\n              {profile.interests.map(item => {\r\n                  return <li>{item}</li>;\r\n                })}\r\n            </ul>\r\n\r\n        <div className =\"my-2\"> \r\n            <Link to ='/edit-profile' className=\"btn btn-primary my-1\"> Update Profile </Link>\r\n          \r\n          <> </>\r\n          <Link to=\"/dashboard\" className=\"btn btn-dark join-all\">\r\n            Home\r\n          </Link>         \r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-6 col-md-6\">\r\n              <FriendList />\r\n              <div className =\"my-top\"> <Request /> </div>\r\n            </div>\r\n          </div>\r\n        </Fragment> \r\n    }\r\n    </Fragment>\r\n  );\r\n}\r\n   \r\n  \r\n  MyProfile.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n  });\r\n  \r\n  export default connect(mapStateToProps, { getCurrentProfile })(MyProfile);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\EditProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\UserProfile.js",["484"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfilesById } from '../../actions/profile';\r\nimport { authUser } from '../../actions/auth'\r\nimport { Link, withRouter, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {createChat} from '../../actions/chat';\r\n\r\n\r\nconst UserProfile = ({ createChat, chat:{chats}, authUser, getProfilesById, profile: { profile, loading }, auth, match, history}) => {\r\n\r\n\r\n  const chatID = [];\r\n  if (chats.length > 0) {\r\n    chats.map(chat => {\r\n      chatID.push(chat.users.find(id => id !== auth.user._id));\r\n    })\r\n  }\r\n  \r\n\r\n  const startNewConvo= () => {\r\n      try {\r\n        if (!chatID.includes(profile.user._id)) {\r\n            const formData = {\r\n                receiver: profile.user._id\r\n            }\r\n            createChat(formData, history)\r\n        } else {\r\n            history.push('/messagebox')\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n  \r\n\r\n  const [followed, toggle] = useState(\r\n    auth.user.followings.includes(match.params.id)\r\n  );\r\n\r\n  useEffect(() => {\r\n    authUser();\r\n  });\r\n\r\n\r\n  //cannot rerender if not clicking directly on the main page will conflict with main page rerender\r\n  useEffect(() => {\r\n      getProfilesById(match.params.id);\r\n      // eslint-disable-next-line\r\n    },[getProfilesById]);\r\n\r\n  let hist = useHistory();\r\n  const goToPreviousPath = () => {\r\n      hist.goBack()\r\n  }\r\n\r\n\r\n  const followUnfollow = () => {\r\n      try {\r\n        if (!followed) {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/follow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        } else {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/unfollow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        }\r\n      }catch (err) { \r\n        console.log(err.status)\r\n      }\r\n    };\r\n    \r\n    if (profile === null || loading) {\r\n      return < Spinner />\r\n    } else {\r\n        return <Fragment>\r\n            <h1> {profile.user.name}'s Profile  </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n            <p> <strong> Your Interests: </strong></p>\r\n                <ul>\r\n                {profile.interests.map(item => {\r\n                    return <li key={item._id}>{item}</li>;\r\n                    })}\r\n                </ul>\r\n            \r\n            {profile.hasOwnProperty(\"social\")  && <Fragment>\r\n              <p> <strong> Social Media: </strong> </p>\r\n                  <ul>\r\n                      {profile.social.hasOwnProperty(\"facebook\") && <Fragment> <li><i className=\"fab fa-facebook\"/> {\" \"} {profile.social.facebook}</li> </Fragment> }\r\n                      {profile.social.hasOwnProperty(\"instagram\") && <Fragment> <li><i className=\"fab fa-instagram\"/> {\" \"} {profile.social.instagram}</li> </Fragment> }\r\n                  </ul>\r\n            </Fragment>\r\n            }\r\n\r\n            <Link to=\"/profiles\" className=\"btn btn-secondary\">\r\n            Find more Friends\r\n            </Link>\r\n            <>  </>\r\n            {!followed && auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-success\">\r\n                  <i className=\"fas fa-user-plus\"/>   Follow\r\n                </button>\r\n                ) \r\n            }\r\n\r\n            {followed && auth.isAuthenticated &&\r\n                auth.loading === false && \r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-danger\">\r\n                   <i class=\"fas fa-user-minus\"/>   Unfollow\r\n                </button>\r\n                ) \r\n            }\r\n            \r\n            <>  </>\r\n            {auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && \r\n                auth.user.followings.find(id => id === profile.user._id) !== undefined &&\r\n                auth.user.followers.find(id => id === profile.user._id) !== undefined &&(\r\n                <button onClick= {()=> {startNewConvo()}} type=\"button\" className=\"btn btn-primary my-1\"> <i className=\"fas fa-comment-dots\"/>\r\n                    {\" \"} Message\r\n                 </button>\r\n                ) \r\n            }\r\n             <button onClick={goToPreviousPath} type=\"button\" className=\"btn btn-dark join-all my-btm\">Return</button>\r\n        </Fragment>\r\n      }\r\n  };\r\n\r\n\r\nUserProfile.propTypes = {\r\n    getProfilesById: PropTypes.func.isRequired,\r\n    authUser: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth,\r\n    chat: state.chat\r\n})\r\n\r\nexport default connect(mapStateToProps, { authUser, getProfilesById, createChat })(withRouter(UserProfile));","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\Profiles.js",["485","486","487"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport ProfileItem from './ProfileItem'\r\nimport { clearProfile, getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({clearProfile, getProfiles, profile: { profiles, loading }, auth}) => {\r\n    const [searchterm, setSearch] = useState('')\r\n\r\n    useEffect(()  => {\r\n        getProfiles();\r\n    }, [getProfiles]);\r\n\r\n    //additional clear profile to clear out dashboard rerendering\r\n    useEffect(()  => {\r\n        clearProfile();\r\n    }, [clearProfile]);\r\n\r\n\r\n    const displayAll = profiles.map(profile => {\r\n            if (profile.user._id !== auth.user._id) {\r\n                return <ProfileItem key = {profile._id} profile ={profile} />\r\n            }\r\n        })\r\n\r\n    return <Fragment> \r\n        { loading || displayAll.length===0 ? <Spinner /> : <Fragment>\r\n            <h1 className = \"large text-dark big-header\"> Friends in NUS </h1>\r\n            <h5>Search for Friends :</h5>\r\n            <input type=\"search\" className =\"form-control rounded my-3\" placeholder=\"Find Friend\" aria-label=\"Search\"\r\n            onChange={event => {setSearch(event.target.value)}} />\r\n         \r\n            <div className=\"profiles\">\r\n                {profiles.filter( p => {\r\n                    if (searchterm === \"\") {\r\n                        return p\r\n                    } \r\n                    if (p.user.name.toLowerCase().includes(searchterm.toLowerCase())) {\r\n                        return p\r\n                    }\r\n                }).map(profile => {\r\n                    if (profile.user._id !== auth.user._id) {\r\n                        return <ProfileItem key = {profile._id} profile ={profile} />\r\n                    }\r\n                })}\r\n            </div>\r\n\r\n        </Fragment>}\r\n    </Fragment>\r\n    \r\n}\r\n  \r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    clearProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n  \r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, { clearProfile, getProfiles})(Profiles);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\Games.js",["488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503"],"import React, { Fragment, useEffect, useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getGames, clearGame, deleteGame } from '../../actions/game';\r\nimport Spinner from '../layout/Spinner';\r\nimport dateformat from '../../utils/dateformat';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport {activities} from './SearchDict';\r\nimport { locations } from './SearchDict';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Games = ( {getCurrentProfile, deleteGame, clearGame, getGames, game: {games, game, loading}, auth, auth: { user }}) => {\r\n\r\n    const [friends, setFriends] = useState([]);\r\n    const [filters, setFilters] = useState([]);\r\n    //Search term for UI filter handling\r\n    const [searchterm, setSearch] = useState('');\r\n    //searchdata for backend filtering of games\r\n    const [searchdata, setSearchData] = useState('');\r\n    const [formType, setFormType] = useState(\"\");\r\n    const [suggestions, setSuggestions] = useState(\"\");\r\n\r\n    const disabledActivity = <button type=\"button\" className=\"btn btn-secondary my-right\" disabled={true}>Activity</button>\r\n    const disabledLoc = <button type=\"button\" className=\"btn btn-secondary my-right\" disabled={true}>Location</button>\r\n    const disabledName = <button type=\"button\" className=\"btn btn-secondary my-right\" disabled={true}>Host Name</button>\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        getGames();\r\n    },[getGames]);\r\n\r\n    useEffect(() => {\r\n        clearGame();\r\n    },[game]);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n      }, [getCurrentProfile]);\r\n\r\n    useEffect(() => {\r\n    const getFriends = async () => {\r\n        try {\r\n        const friendList = await axios.get(\"/api/users/friends/\" + user._id);\r\n        setFriends(friendList.data);\r\n        } catch (err) {\r\n        console.log(err);\r\n        }\r\n    };\r\n    getFriends()\r\n    }, []);\r\n\r\n    const convertTime = e => {\r\n        var d1 = new Date(e);\r\n        return d1.getTime();\r\n    }\r\n\r\n    const changefilters = (cancel) => {\r\n        setFilters(filters.filter(item => item !== cancel.f).sort());\r\n        console.log(filters)\r\n    }\r\n\r\n    const onChange = e => {\r\n        let matches = [];\r\n        if (e.target.value.length > 0 && formType===\"activity\") {\r\n            matches = activities.filter(activity => {\r\n                const regex = new RegExp(`${e.target.value}`, \"gi\");\r\n                return activity.match(regex);\r\n            })\r\n        } \r\n        if (e.target.value.length > 0 && formType===\"location\") {\r\n            matches = locations.filter(location => {\r\n                const regex = new RegExp(`${e.target.value}`, \"gi\");\r\n                return location.match(regex);\r\n            })\r\n        }\r\n        if (e.target.value.length > 0 && formType===\"name\") {\r\n            matches = friends.filter(friend => {\r\n                const regex = new RegExp(`${e.target.value}`, \"gi\");\r\n                return friend.name.match(regex);\r\n            })\r\n        }\r\n        console.log(matches);\r\n        setSuggestions(matches);\r\n        setSearchData(e.target.value);\r\n    }\r\n\r\n    const onSuggestion = e => {\r\n        setSearchData(e);\r\n        setSuggestions([]);\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        setFilters ((prev) => [...prev, formType + \": \" + searchdata].sort())\r\n        setSearch(\"\")\r\n        setFormType(\"\")\r\n        setSearchData(\"\")\r\n    }\r\n\r\n    const getSecondPart = (str) => str.split(\": \")[1];\r\n    \r\n\r\n    const displayGame = () => games ? games\r\n        .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n        .filter(g => {\r\n            if (getSecondPart(filters[0]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.sport.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n             <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n             <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n             </Fragment>\r\n             }\r\n             \r\n            </div>\r\n        </div>\r\n    ) : <></>\r\n\r\n    const displayLocation = () => games ? games\r\n    .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n    .filter(g => {\r\n        if (getSecondPart(filters[0]) === \"\"){\r\n            return g\r\n        }\r\n        if (g.location.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase()) || g.otherLoc.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n            return g\r\n        }\r\n    })\r\n    .map(game =>\r\n        <div className=\"card mb-3\">\r\n        <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{game.sport}</h5>\r\n        <br></br>\r\n        <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n        <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n        <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n        <p className=\"card-text\">\r\n            <br></br>\r\n            <small className=\"text-muted\"> Host: {game.name} </small>\r\n            <br></br>\r\n            <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n        </p>\r\n        {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n        <Fragment>\r\n         <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n         <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n         </Fragment>\r\n         }\r\n        </div>\r\n    </div>\r\n    ) : <></>\r\n\r\n    const displayName = () => games ? games\r\n        .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n        .filter(g => {\r\n            if (getSecondPart(filters[0]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.name.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n            <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n            <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n            </Fragment>\r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n    ) : <></>\r\n    \r\n    const displayGL = () =>  games ? games\r\n        .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n        .filter(g => {\r\n            if (getSecondPart(filters[0]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.sport.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .filter(g => {\r\n            if (getSecondPart(filters[1]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.location.toLowerCase().includes(getSecondPart(filters[1]).toLowerCase()) || g.otherLoc.toLowerCase().includes(getSecondPart(filters[1]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n            <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n            <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n            </Fragment>\r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n    ) : <></>\r\n    \r\n\r\n    const displayGN = () =>  games ? games\r\n        .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n        .filter(g => {\r\n            if (getSecondPart(filters[0]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.sport.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .filter(g => {\r\n            if (getSecondPart(filters[1]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.name.toLowerCase().includes(getSecondPart(filters[1]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n            <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n            <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n            </Fragment>\r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n    ) : <></>\r\n\r\n\r\n    const displayLN = () =>  games ? games\r\n        .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n        .filter(g => {\r\n            if (getSecondPart(filters[0]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.location.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase()) || g.otherLoc.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .filter(g => {\r\n            if (getSecondPart(filters[1]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.name.toLowerCase().includes(getSecondPart(filters[1]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n            <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n            <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n            </Fragment>\r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n    ) : <></>\r\n\r\n\r\n    const displayAll =  games ? games.filter(game => (convertTime(game.dateTime) > Date.now())).\r\n        map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n            <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n            <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n            </Fragment>\r\n            }      \r\n            </div>\r\n        </div>) : <></>\r\n    \r\n\r\n    const displayALN = () =>  games ? games\r\n        .filter(game => (convertTime(game.dateTime) > Date.now()))\r\n        .filter(g => {\r\n            if (getSecondPart(filters[0]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.sport.toLowerCase().includes(getSecondPart(filters[0]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .filter(g => {\r\n            if (getSecondPart(filters[1]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.location.toLowerCase().includes(getSecondPart(filters[1]).toLowerCase()) || g.otherLoc.toLowerCase().includes(getSecondPart(filters[1]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .filter(g => {\r\n            if (getSecondPart(filters[2]) === \"\"){\r\n                return g\r\n            }\r\n            if (g.name.toLowerCase().includes(getSecondPart(filters[2]).toLowerCase())) {\r\n                return g\r\n            }\r\n        })\r\n        .map(game =>\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{game.sport}</h5>\r\n            <br></br>\r\n            <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"? game.otherLoc : game.location}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n            <p className=\"card-text\"> <span className='text-primary'> Time: </span> {dateformat(game.dateTime)} </p>\r\n            <p className=\"card-text\">\r\n                <br></br>\r\n                <small className=\"text-muted\"> Host: {game.name} </small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Created on: {dateformat(game.createTime)} </small>\r\n            </p>\r\n            {auth.user._id !== game.user ? <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link> :\r\n            <Fragment>\r\n            <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all \"> Enter Room </Link>\r\n            <button onClick={()=>deleteGame(game._id)} type =\"button\" className=\"btn btn-danger join-all my-right\"> Cancel Room </button>\r\n            </Fragment>\r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n    ) : <></>\r\n\r\n    const displayAllResults = games.filter(game => (convertTime(game.dateTime) > Date.now())).length;\r\n\r\n    return loading ? <Spinner /> : <Fragment>\r\n          <h1 className = \"large big-header text-dark\"> Available Rooms </h1>\r\n          <div className=\"icon-box\" >\r\n            <h1 className=\"big-description\"> Join an activity or create your own, with a few clicks. </h1>\r\n                <div className=\"vertical-center\">\r\n                <Link to=\"/create-game\" className=\"btn btn-primary my-2\"> Create Your Activity</Link>\r\n                </div>\r\n            </div>\r\n            \r\n    \r\n\r\n            <h5 className=\"my-top\"> Search By : </h5>\r\n                { filters.filter(f => f.charAt(0) === \"a\").length === 0 ? \r\n                (formType === \"activity\" ? <button type=\"button\" className=\"btn btn-primary my-right\">Activity</button> : \r\n                <button type=\"button\" className=\"btn btn-secondary my-right\" onClick={() => setFormType(\"activity\")}>Activity</button>) :\r\n                   disabledActivity }\r\n\r\n\r\n                { filters.filter(f => f.charAt(0) === \"l\").length === 0 ?\r\n                (formType === \"location\" ? <button type=\"button\" className=\"btn btn-primary my-right\">Location</button> :\r\n                <button type=\"button\" className=\"btn btn-secondary my-right\" onClick={() => setFormType(\"location\")}>Location</button>) :\r\n                    disabledLoc }\r\n\r\n                { filters.filter(f => f.charAt(0) === \"n\").length === 0 ? \r\n                (formType === \"name\" ? <button type=\"button\" className=\"btn btn-primary my-right\">Host Name</button> :\r\n                <button type=\"button\" className=\"btn btn-secondary my-right\" onClick={() => setFormType(\"name\")}>Host Name</button>) :\r\n                    disabledName }      \r\n                \r\n                <form className =\"input-group my-3\" onSubmit={e => e.preventDefault()}>\r\n                    {formType === \"\" ? \r\n                        <input className =\"form-control rounded\" value=\"Too many results? Add more filters\" disabled={true}/> :\r\n                        <input type=\"search\" className =\"form-control rounded\" placeholder= {formType} aria-label=\"Search\" value={searchdata}\r\n                        onChange={(e) => onChange(e)}/> \r\n                    }\r\n                    <input type=\"submit\" className=\"btn btn-outline-primary\" onClick={()=>{onSubmit(); setSearch(searchdata)}} value=\"Filter\" />\r\n                </form>\r\n                        {\r\n                            suggestions && formType ===\"activity\" && suggestions.map(suggestion => \r\n                            <div className=\"suggestion justify-content-md-center\" onClick={() => onSuggestion(suggestion)}>{suggestion}</div>\r\n                        )}\r\n                        {\r\n                            suggestions && formType ===\"location\" && suggestions.map(suggestion => \r\n                            <div className=\"suggestion justify-content-md-center\" onClick={() => onSuggestion(suggestion)}>{suggestion}</div>\r\n                        )}\r\n                        {\r\n                            friends && suggestions && formType ===\"name\" && suggestions.map(suggestion => \r\n                            <div className=\"suggestion justify-content-md-center\" onClick={() => onSuggestion(suggestion.name)}>{suggestion.name}</div>\r\n                        )}\r\n\r\n            { filters.length> 0 && filters.map(f => \r\n                <div className=\"bdg bg-dark my-right\"> <p className=\"filter\"> \"{f}\" </p>  <button type=\"button\" onClick={\r\n                    ()=> changefilters({f}) } className=\"btn2 btn-round join-all\"> <i className=\"far fa-times-circle\"/> </button> </div>\r\n                )}\r\n            \r\n          \r\n            \r\n            <hr className=\"line\"></hr>\r\n            <h6 className=\"my-btm\"> Matching Results: {\" \"}\r\n                { filters.length === 0 && displayAllResults}\r\n                { filters.length === 1 && filters[0].charAt(0) === \"a\" && displayGame().length }\r\n                { filters.length === 1 && filters[0].charAt(0) === \"l\" && displayLocation().length }\r\n                { filters.length === 1 && filters[0].charAt(0) === \"n\" && displayName().length }\r\n                { filters.length === 2 ? \r\n                filters[0].charAt(0) === \"a\" && filters[1].charAt(0) === \"l\" ? displayGL().length :\r\n                <></>\r\n                : <></>}\r\n                { filters.length === 2 ? \r\n                filters[0].charAt(0) === \"a\" && filters[1].charAt(0) === \"n\" ? displayGN().length :\r\n                <></>\r\n                : <></>}\r\n                { filters.length === 2 ? \r\n                filters[0].charAt(0) === \"l\" && filters[1].charAt(0) === \"n\" ? displayLN().length :\r\n                <></>\r\n                : <></>}\r\n                 { filters.length === 3 && displayALN().length } \r\n\r\n            </h6>\r\n\r\n\r\n            { filters.length === 0 && displayAll}\r\n            { filters.length === 1 && filters[0].charAt(0) === \"a\" && displayGame() }\r\n            { filters.length === 1 && filters[0].charAt(0) === \"l\" && displayLocation() }\r\n            { filters.length === 1 && filters[0].charAt(0) === \"n\" && displayName() }\r\n            { filters.length === 2 ? \r\n                filters[0].charAt(0) === \"a\" && filters[1].charAt(0) === \"l\" ? displayGL() :\r\n                <></>\r\n                : <></>}\r\n            { filters.length === 2 ? \r\n                filters[0].charAt(0) === \"a\" && filters[1].charAt(0) === \"n\" ? displayGN() :\r\n                <></>\r\n                : <></>}\r\n             { filters.length === 2 ? \r\n                filters[0].charAt(0) === \"l\" && filters[1].charAt(0) === \"n\" ? displayLN() :\r\n                <></>\r\n                : <></>}\r\n            { filters.length === 3 && displayALN()} \r\n\r\n    \r\n    </Fragment>\r\n}\r\n\r\n\r\nGames.propTypes = {\r\n    getGames: PropTypes.func.isRequired,\r\n    clearGame: PropTypes.func.isRequired,\r\n    deleteGame: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    game: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    game : state.game,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteGame, getGames, clearGame })(Games);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameRoom.js",["504"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { authUser } from '../../actions/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { getGameById } from '../../actions/game';\r\nimport { clearProfile } from '../../actions/profile';\r\nimport axios from 'axios';\r\nimport dateformat from '../../utils/dateformat';\r\nimport GameChat from './GameChat';\r\nimport { getGameChat, createGameChat } from '../../actions/gamechat';\r\n\r\nconst GameRoom = ({ getGameChat, createGameChat, clearProfile, getGameById, authUser, auth, game : {game, loading}, match, gamechat: {gamechat} }) => {\r\n    \r\n    const [showTutorial, toggle] = useState(false);\r\n\r\n    const startNewConvo= () => {\r\n        try {\r\n            const formData = {\r\n                room: game._id\r\n            }\r\n            createGameChat(formData)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n    }\r\n\r\n    const quitGame = () => {\r\n        try {\r\n            axios.put(`/api/games/quit/${game._id}`);\r\n        } catch (err) { \r\n            console.log(err.status)\r\n        }\r\n      };\r\n    \r\n    const joinGame = () => {\r\n        try {\r\n            axios.put(`/api/games/join/${game._id}`);\r\n        } catch (err) { \r\n            console.log(err.status)\r\n        }\r\n      };\r\n\r\n    useEffect(() => {\r\n        getGameChat(match.params.id);\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        getGameById(match.params.id);\r\n    });\r\n    \r\n    useEffect(() => {\r\n        authUser();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        clearProfile();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    if (game === null || loading || gamechat === null) {\r\n        return(\r\n            <Fragment>\r\n                <Spinner />\r\n            </Fragment>\r\n        ) \r\n    } else {\r\n        return (\r\n            <Fragment>\r\n                <h1 className=\"text-primary my-3 my-btm\"> {game.name}'s Lobby  </h1>\r\n                <div className=\"row\">\r\n                <div className=\"card-body\">\r\n                {!showTutorial && <button className=\"btn btn-success\" onClick={()=>toggle(!showTutorial)}>Show Tutorial</button>}\r\n                {showTutorial && <button className=\"btn btn-danger\" onClick={()=>toggle(!showTutorial)}>Hide Tutorial</button>}\r\n                <Link to=\"/all-games\" className=\"btn btn-dark join-all\"> <i className=\"fas fa-sign-out-alt\" /> Leave Lobby </Link>\r\n                </div>\r\n                </div>\r\n                    <div className=\"row\">\r\n                    {showTutorial && game.user === auth.user._id &&\r\n                                <Fragment>\r\n                                    <div className=\"col-sm-12 col-md-12\">\r\n                                    <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                <h5 className=\"card-title my-3 host-title\"> Guide To Navigating Around </h5>\r\n                                <h6>As a Host, you can ... </h6>\r\n                                <ul>\r\n                                    <li><strong>Enable Chat:</strong> Chat will not be enabled by default. To allow chat to take place in the room, \r\n                                    you can enable it by clicking the green button below </li>\r\n                                    <li><strong>Join Game:</strong> As the host, you still have to press \"Join Game\" (pink button) to confirm your availability \r\n                                    and be part of the game </li>\r\n                                    <li><strong>Leave Lobby:</strong> Allows you to leave the room and be search for other rooms available. Do not that the room will not be \r\n                                    cancelled until you press the cancel button in the All Games page</li>\r\n                                    <li><strong>Enter Video Call:</strong> This button will only show if your room is created for any online activities, such as study groups and \r\n                                    online games</li>\r\n                                </ul>\r\n                                </div>\r\n                                </div>\r\n                                </div>\r\n                                </Fragment>}\r\n                            \r\n                            {showTutorial && game.user !== auth.user._id &&\r\n                                <Fragment>\r\n                                 <div className=\"col-sm-12 col-md-12\">\r\n                                <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                <h5 className=\"card-title my-3 host-title\"> Guide To Navigating Around </h5>\r\n                                <h6>As a Participant, you can ... </h6>\r\n                                <ul>\r\n                                    <li><strong>Chat:</strong> Chat will have to be enabled by the room Host before any chatting can occur between users in the room</li>\r\n                                    <li><strong>Join Game:</strong> Please remember press \"Join Game\" (pink button) to confirm your availability \r\n                                    and be part of the game </li>\r\n                                    <li><strong>Leave Lobby:</strong> Allows you to leave the room and be search for other rooms available.</li>\r\n                                    <li><strong>Enter Video Call:</strong> This button will only show if the room is created for any online activities, such as study groups and \r\n                                    online games</li>\r\n                                </ul>\r\n                                </div>\r\n                                </div>\r\n                                </div>    \r\n                            </Fragment>}\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                            <h5 className=\"card-title my-3 host-title\">{game.sport}</h5>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Experience Level: </span> {game.experience}</p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"?\r\n                                    game.otherLoc:game.location}</p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Date: </span> {dateformat(game.dateTime)} </p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Max Players: </span> {game.maxPlayers} </p>\r\n                                {game.roomType === \"study\" && <p>This room should only be used for the forming of study groups among NUS students. \r\n                                    Misuse of platform will not be tolerated. </p>}\r\n                                {game.roomType === \"onlineGame\" && <p>This room should only be used for the facilitating of (legal) online/offline games among\r\n                                    NUS students. Misuse of platform will not be tolerated</p>}\r\n                                <br></br>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                <h5 className=\"card-title my-3 host-title\">Players In Waiting Room : {game.players.length} </h5>\r\n                                {game.players.length > 0 && game.players.map(player => { \r\n                                    if (player.user === auth.user._id) {\r\n                                        return (\r\n                                            <Fragment key={player._id}>\r\n                                            <div className=\"card mb-3\">\r\n                                            <div className=\"card-body player-card\">\r\n                                                {player.name}\r\n                                                <button onClick= {()=> {\r\n                                                    quitGame();\r\n                                                }} type=\"button\" className=\"btn btn-danger btn-round join-all\"> <i className=\"far fa-times-circle\"/> </button>\r\n                                            </div>\r\n                                            </div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    } else {\r\n                                        return (\r\n                                            <Fragment key={player._id}>\r\n                                            <div className=\"card mb-3\">\r\n                                            <div className=\"card-body player-card\">\r\n                                                <Link to={`/profile/${player.user}`}> {player.name} </Link> \r\n                                            </div>\r\n                                            </div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    }\r\n                                })}\r\n                                <p> { game.players.length < game.maxPlayers && game.players.filter(player => \r\n                                    player.user === auth.user._id).length === 0  && \r\n                                    <button onClick= {()=> {\r\n                                        joinGame();\r\n                                    }} type=\"button\" className=\"btn btn-primary join-all\"> Join Game </button>}\r\n                                </p>\r\n\r\n                                <h5> { game.players.length >= game.maxPlayers && <span className=\"badge badge-light\">\r\n                                    Waiting Room is Currently Full</span>}</h5>\r\n                             \r\n                                </div>\r\n                            </div>\r\n\r\n                            \r\n                            {game.players.filter(player => player.user === auth.user._id).length === 0 \r\n                            ? <></> \r\n                            : (game.roomType === \"onlineGame\" || \"study\") && game.location === \"Online\" ? \r\n                                    <Link to={`/entercall/${match.params.id}`} className=\"btn btn-secondary btn-lg btn-block\"> \r\n                                    Enter Video Chat  <i className=\"fas fa-video\"/></Link> \r\n                            : <></>}\r\n                            <div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                   \r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"row g-0\">\r\n                                <div className=\"col-md-4\">\r\n                                    <img height=\"195\" width =\"195\" src={game.avatar} className=\"round-img\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                    <h5 className=\"card-title my-3 host-title \">About Game Host </h5>\r\n                                    <p className=\"card-text\"> <span className='text-primary'> Host Name: </span> {game.name}</p>\r\n                                    <small className=\"card-text text-muted\"> Room Created: {dateformat(game.createTime)} </small>\r\n                                    <br></br>\r\n                                </div>\r\n                            </div>\r\n                                {game.user !== auth.user._id &&  <Link to={`/profile/${game.user}`} className=\"btn btn-dark btn-lg btn-block\"> View Host Profile </Link>}\r\n                                {game.user === auth.user._id &&  <Link to=\"#!\" className=\"btn btn-dark btn-lg btn-block\"> <i className=\"fas fa-cog\"/> Game Settings </Link>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 col-md-12\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title my-3 host-title \"> Room Chat</h5>\r\n                                </div>\r\n\r\n                                { gamechat.length === 0 && game.user !== auth.user._id &&\r\n                                    <Fragment>\r\n                                        <h1 className =\"badge badge-danger\"> Room Chat has not been enabled </h1>\r\n                                    </Fragment>\r\n                                }\r\n\r\n                                { (gamechat.length === 0 && game.user === auth.user._id) \r\n                                    && <button type=\"button\" onClick = {()=> {startNewConvo()}} className=\"btn btn-success btn-lg btn-block \">\r\n                                      Enable Room Chat\r\n                                </button> }\r\n\r\n                                { gamechat.length > 0 &&  <GameChat />}\r\n\r\n                                \r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nGameRoom.propTypes = {\r\n    getGameById: PropTypes.func.isRequired,\r\n    authUser: PropTypes.func.isRequired,\r\n    clearProfile: PropTypes.func.isRequired,\r\n    createGameChat: PropTypes.func.isRequired,\r\n    getGameChat: PropTypes.func.isRequired,\r\n    game: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    gamechat: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    game: state.game,\r\n    auth: state.auth,\r\n    gamechat: state.gamechat\r\n})\r\n\r\nexport default connect(mapStateToProps, { getGameChat, createGameChat, clearProfile, getGameById, authUser })(GameRoom);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\CreateGame.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\EnterCall.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\MessageBox.js",["505","506","507"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\types.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\Message.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\Chat.js",["508","509"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nconst Chat = ({auth : {user} , chat , loading }) => {\r\n  const [otherUser, setUser] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    const friendName = chat.names.find((name)=> name !== user.name);\r\n    setUser(friendName);\r\n  });\r\n\r\n  useEffect(() => async () => {\r\n    try {\r\n    const friendId = chat.users.find((u)=> u !== user._id);\r\n      const res = await axios.get(`/api/profile/user/${friendId}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  });\r\n\r\n    if (loading || otherUser == null) {\r\n      return null;\r\n    }\r\n    else {\r\n      return <Fragment>\r\n        <div className=\"conversation my-top-small\">\r\n          <span className=\"conversationName\">{otherUser}</span>\r\n        </div>\r\n      </Fragment>\r\n    }\r\n}\r\n\r\n\r\n\r\nChat.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth\r\n});\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, {})(Chat);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\ChannelForm.js",["510"],"import React, { Component, Fragment } from \"react\";\r\n\r\n\r\nexport default class ChannelForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      channel: \"\",\r\n      click: true\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    let { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.selectChannel(\"Matchmaker\");\r\n  };\r\n\r\n  click = () => {\r\n    this.state.click = false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"my-btm\">\r\n          <form onSubmit={this.onSubmit}>\r\n            {this.state.click ? <input type=\"submit\" value=\"Join Channel\" onClick={this.click()} className=\"btn btn-success btn-full\" /> \r\n            : this.state.click === false && <button type=\"button\" class=\"btn btn-secondary btn-full\" disabled>Joined Channel</button>}\r\n          </form>\r\n\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\StudyForm.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\OnlineGamesForm.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\VideoCall.js",["511"],"import React, { Fragment, Component } from \"react\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet client = AgoraRTC.createClient({ mode: \"live\", codec: \"h264\" });\r\n\r\nconst USER_ID = Math.floor(Math.random() * 1000000001);\r\n\r\nclass Call extends Component {\r\n\r\n  handleClick = () => {\r\n    this.props.history.push(\"/all-games\");\r\n  }\r\n\r\n  localStream = AgoraRTC.createStream({\r\n    streamID: this.props.auth.user.name,\r\n    audio: true,\r\n    video: true,\r\n    screen: false\r\n  });\r\n\r\n  componentDidMount() {\r\n    this.initLocalStream();\r\n    this.initClient();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.channel !== this.props.channel && this.props.channel !== \"\") {\r\n      this.joinChannel();\r\n    }\r\n  }\r\n\r\n  initLocalStream = () => {\r\n    let me = this;\r\n    me.localStream.init(\r\n      function () {\r\n        console.log(\"getUserMedia successfully\");\r\n        me.localStream.play(\"agora_local\");\r\n      },\r\n      function (err) {\r\n        console.log(\"getUserMedia failed\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  initClient = () => {\r\n    client.init(\r\n      \"1eb6cb9def814e4e96ac6afc003a47b0\",\r\n      function () {\r\n        console.log(\"AgoraRTC client initialized\");\r\n      },\r\n      function (err) {\r\n        console.log(\"AgoraRTC client init failed\", err);\r\n      }\r\n    );\r\n    this.subscribeToClient();\r\n  };\r\n\r\n  subscribeToClient = () => {\r\n    let me = this;\r\n    client.on(\"stream-added\", me.onStreamAdded);\r\n    client.on(\"stream-subscribed\", me.onRemoteClientAdded);\r\n    client.on(\"stream-removed\", me.onStreamRemoved);\r\n    client.on(\"peer-leave\", me.onPeerLeave);\r\n  };\r\n\r\n  state = {\r\n    remoteStreams: {}\r\n  }\r\n\r\n  onStreamAdded = evt => {\r\n    let me = this;\r\n    let stream = evt.stream;\r\n    console.log(\"New stream added: \" + stream.getId());\r\n    me.setState(\r\n      {\r\n        remoteStreams: {\r\n          ...me.state.remoteStream,\r\n          [stream.getId()]: stream\r\n        }\r\n      },\r\n      () => {\r\n        client.subscribe(stream, function (err) {\r\n          console.log(\"Subscribe stream failed\", err);\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  joinChannel = () => {\r\n    let me = this;\r\n    client.join(\r\n      \"0061eb6cb9def814e4e96ac6afc003a47b0IADRURW1bgsjcl9yWDOaUWhveSAqzkrZoXyIt3eecnSvAw29DrUAAAAAEACqPfBqBSLjYAEAAQAGIuNg\",\r\n      me.props.channel,\r\n      this.props.auth.user.name,\r\n      function (uid) {\r\n        console.log(\"User \" + uid + \" join channel successfully\");\r\n        client.publish(me.localStream, function (err) {\r\n          console.log(\"Publish local stream error: \" + err);\r\n        });\r\n\r\n        client.on(\"stream-published\", function (evt) {\r\n          console.log(\"Publish local stream successfully\");\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(\"Join channel failed\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  leaveChannel = () => {\r\n    client.leave();\r\n    this.handleClick();\r\n  }\r\n\r\n  onRemoteClientAdded = evt => {\r\n    let me = this;\r\n    let remoteStream = evt.stream;\r\n    me.state.remoteStreams[remoteStream.getId()].play(\r\n      \"agora_remote \" + remoteStream.getId()\r\n    );\r\n  };\r\n\r\n  onStreamRemoved = evt => {\r\n    let me = this;\r\n    let stream = evt.stream;\r\n    if (stream) {\r\n      let streamId = stream.getId();\r\n      let { remoteStreams } = me.state;\r\n\r\n      stream.stop();\r\n      delete remoteStreams[streamId];\r\n\r\n      me.setState({ remoteStreams });\r\n\r\n      console.log(\"Remote stream is removed \" + stream.getId());\r\n    }\r\n  };\r\n\r\n  onPeerLeave = evt => {\r\n    let me = this;\r\n    let stream = evt.stream;\r\n    if (stream) {\r\n      let streamId = stream.getId();\r\n      let { remoteStreams } = me.state;\r\n\r\n      stream.stop();\r\n      delete remoteStreams[streamId];\r\n\r\n      me.setState({ remoteStreams });\r\n\r\n      console.log(\"Remote stream is removed \" + stream.getId());\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className =\"row my-btm\">\r\n        <div className=\"card col-sm-4 col-md-4\" style={{ width: \"400px\", height: \"400px\" }}>\r\n          <div id=\"agora_local\" style={{ width: \"300px\", height: \"400px\" }} />\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">{this.props.auth.user.name} (Me) </h5>\r\n          </div>\r\n        </div>\r\n        {Object.keys(this.state.remoteStreams).map(key => {\r\n          let stream = this.state.remoteStreams[key];\r\n          let streamId = stream.getId();\r\n          return (\r\n            <Fragment>\r\n            <div className=\"card col-sm-4 col-md-4\" style={{ width: \"400px\", height: \"400px\" }}>\r\n              <div \r\n                key={streamId}\r\n                id={`agora_remote ${streamId}`}\r\n                style={{ width: \"300px\", height: \"400px\" }}\r\n              />\r\n              <div class=\"card-body\">\r\n              <h5 class=\"card-title\">{streamId} </h5>\r\n            </div>\r\n            </div>\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n      <button type=\"button\" className=\"btn btn-primary btn-full\" onClick={() => this.leaveChannel()}> Leave </button>\r\n      </Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n      auth: state.auth,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Call));","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\SportsForm.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\utils\\dateformat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameChat.js",["512","513"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\ProfileItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FriendList.js",["514"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport FriendItem from \"./FriendItem\";\r\nimport Loading from '../layout/Loading';\r\n\r\n\r\nconst FriendList = ({auth: { user }, chat:{chats}}) => {\r\n\r\n    const [friends, setFriends] = useState([]);\r\n    const [friendslength, setLength] = useState(\" \");\r\n\r\n\r\n    useEffect(() => {\r\n        const getFriends = async () => {\r\n          try {\r\n            const friendList = await axios.get(\"/api/users/friends/\" + user._id);\r\n            setFriends(friendList.data);\r\n            setLength(friendList.data.length)\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        getFriends()\r\n      }, []);\r\n    \r\n    console.log(friends)\r\n\r\n    return (\r\n      \r\n      <div className=\"card\">\r\n          <div className=\"card-header\">\r\n              <strong> My Friends ({friends.length}) </strong>\r\n          </div>\r\n        \r\n          <ul className=\"list-group list-group-flush\">\r\n            {friendslength === \" \" && <Loading/>}\r\n            {friendslength === 0 && \r\n            <li className=\"list-group-item\"> No friends yet <span role=\"img\"> 😞 </span></li>}\r\n            {friends.map((friend) => (\r\n                <FriendItem friend ={friend} key={friend._id}/>\r\n           ))}\r\n          </ul>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n\r\nFriendList.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  chat: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\nexport default connect(mapStateToProps)(FriendList);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\index.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameMessage.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FriendItem.js",["515"],"import React, { Fragment, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createChat, getChats } from '../../actions/chat';\r\n\r\n\r\nconst FriendItem = ({ createChat, getChats, auth: { user }, friend, chat: { chats }, history }) => {\r\n    useEffect(() => {\r\n        getChats();\r\n    }, [getChats]);\r\n\r\n    const chatID = [];\r\n\r\n    chats.map(chat => {\r\n        chatID.push(chat.users.find(id => id !== user._id));\r\n    })\r\n\r\n    const startNewConvo = () => {\r\n        try {\r\n            if (!chatID.includes(friend._id)) {\r\n                const formData = {\r\n                    receiver: friend._id\r\n                }\r\n                createChat(formData, history)\r\n            } else {\r\n                history.push('/messagebox')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <li className=\"list-group-item\">\r\n                {friend.name}\r\n                <button onClick={() => { startNewConvo() }} type=\"button\" className=\"btn btn-dark join-all\">\r\n                    <i className=\"fas fa-comment-dots\" />\r\n                </button>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nFriendItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { getChats, createChat })(withRouter(FriendItem));\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\BookFacility.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Request.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FollowerItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\FriendList.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\Request.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\FriendItem.js",["516"],"import React, { Fragment, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createChat, getChats } from '../../actions/chat';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst FriendItem = ({ createChat, getChats, auth: { user }, friend, chat: { chats }, history }) => {\r\n    useEffect(() => {\r\n        getChats();\r\n    }, [getChats]);\r\n\r\n    const chatID = [];\r\n\r\n    chats.map(chat => {\r\n        chatID.push(chat.users.find(id => id !== user._id));\r\n    })\r\n\r\n    const startNewConvo = () => {\r\n        try {\r\n            if (!chatID.includes(friend._id)) {\r\n                const formData = {\r\n                    receiver: friend._id\r\n                }\r\n                createChat(formData, history)\r\n            } else {\r\n                history.push('/messagebox')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <li className=\"list-group-item\">\r\n                <Link to={`/profile/${friend._id}`}> {friend.name} </Link>\r\n                <button onClick={() => { startNewConvo() }} type=\"button\" className=\"btn btn-dark join-all\">\r\n                    <i className=\"fas fa-comment-dots\" />\r\n                </button>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nFriendItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { getChats, createChat })(withRouter(FriendItem));\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\FollowerItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\GameItem.js",["517"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Loading.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\SearchDict.js",[],{"ruleId":"518","replacedBy":"519"},{"ruleId":"520","replacedBy":"521"},{"ruleId":"522","severity":1,"message":"523","line":1,"column":37,"nodeType":"524","messageId":"525","endLine":1,"endColumn":46},{"ruleId":"526","severity":1,"message":"527","line":12,"column":7,"nodeType":"528","endLine":12,"endColumn":9,"suggestions":"529"},{"ruleId":"530","severity":1,"message":"531","line":16,"column":20,"nodeType":"532","messageId":"533","endLine":16,"endColumn":22},{"ruleId":"522","severity":1,"message":"534","line":12,"column":8,"nodeType":"524","messageId":"525","endLine":12,"endColumn":14},{"ruleId":"530","severity":1,"message":"535","line":20,"column":30,"nodeType":"532","messageId":"536","endLine":20,"endColumn":32},{"ruleId":"522","severity":1,"message":"537","line":2,"column":10,"nodeType":"524","messageId":"525","endLine":2,"endColumn":14},{"ruleId":"522","severity":1,"message":"538","line":12,"column":10,"nodeType":"524","messageId":"525","endLine":12,"endColumn":18},{"ruleId":"522","severity":1,"message":"539","line":18,"column":22,"nodeType":"524","messageId":"525","endLine":18,"endColumn":33},{"ruleId":"522","severity":1,"message":"540","line":20,"column":12,"nodeType":"524","messageId":"525","endLine":20,"endColumn":22},{"ruleId":"522","severity":1,"message":"541","line":20,"column":24,"nodeType":"524","messageId":"525","endLine":20,"endColumn":33},{"ruleId":"526","severity":1,"message":"542","line":55,"column":7,"nodeType":"528","endLine":55,"endColumn":9,"suggestions":"543"},{"ruleId":"522","severity":1,"message":"544","line":26,"column":8,"nodeType":"524","messageId":"525","endLine":26,"endColumn":18},{"ruleId":"526","severity":1,"message":"527","line":13,"column":3,"nodeType":"528","endLine":13,"endColumn":5,"suggestions":"545"},{"ruleId":"522","severity":1,"message":"546","line":5,"column":8,"nodeType":"524","messageId":"525","endLine":5,"endColumn":15},{"ruleId":"522","severity":1,"message":"523","line":1,"column":27,"nodeType":"524","messageId":"525","endLine":1,"endColumn":36},{"ruleId":"522","severity":1,"message":"537","line":2,"column":10,"nodeType":"524","messageId":"525","endLine":2,"endColumn":14},{"ruleId":"526","severity":1,"message":"547","line":10,"column":3,"nodeType":"524","endLine":10,"endColumn":12,"suggestions":"548"},{"ruleId":"522","severity":1,"message":"549","line":1,"column":38,"nodeType":"524","messageId":"525","endLine":1,"endColumn":46},{"ruleId":"530","severity":1,"message":"531","line":15,"column":20,"nodeType":"532","messageId":"533","endLine":15,"endColumn":22},{"ruleId":"522","severity":1,"message":"523","line":1,"column":27,"nodeType":"524","messageId":"525","endLine":1,"endColumn":36},{"ruleId":"522","severity":1,"message":"549","line":1,"column":38,"nodeType":"524","messageId":"525","endLine":1,"endColumn":46},{"ruleId":"522","severity":1,"message":"537","line":2,"column":10,"nodeType":"524","messageId":"525","endLine":2,"endColumn":14},{"ruleId":"522","severity":1,"message":"550","line":6,"column":8,"nodeType":"524","messageId":"525","endLine":6,"endColumn":13},{"ruleId":"522","severity":1,"message":"551","line":3,"column":10,"nodeType":"524","messageId":"525","endLine":3,"endColumn":18},{"ruleId":"518","replacedBy":"552"},{"ruleId":"520","replacedBy":"553"},{"ruleId":"526","severity":1,"message":"554","line":44,"column":6,"nodeType":"528","endLine":44,"endColumn":13,"suggestions":"555"},{"ruleId":"526","severity":1,"message":"527","line":48,"column":6,"nodeType":"528","endLine":48,"endColumn":15,"suggestions":"556"},{"ruleId":"526","severity":1,"message":"527","line":14,"column":7,"nodeType":"528","endLine":14,"endColumn":9,"suggestions":"557"},{"ruleId":"530","severity":1,"message":"531","line":17,"column":20,"nodeType":"532","messageId":"533","endLine":17,"endColumn":22},{"ruleId":"530","severity":1,"message":"535","line":21,"column":45,"nodeType":"532","messageId":"536","endLine":21,"endColumn":47},{"ruleId":"530","severity":1,"message":"558","line":35,"column":37,"nodeType":"532","messageId":"536","endLine":35,"endColumn":39},{"ruleId":"530","severity":1,"message":"535","line":42,"column":32,"nodeType":"532","messageId":"536","endLine":42,"endColumn":34},{"ruleId":"522","severity":1,"message":"559","line":19,"column":12,"nodeType":"524","messageId":"525","endLine":19,"endColumn":22},{"ruleId":"526","severity":1,"message":"560","line":36,"column":7,"nodeType":"528","endLine":36,"endColumn":13,"suggestions":"561"},{"ruleId":"526","severity":1,"message":"562","line":52,"column":8,"nodeType":"528","endLine":52,"endColumn":10,"suggestions":"563"},{"ruleId":"530","severity":1,"message":"558","line":106,"column":19,"nodeType":"532","messageId":"536","endLine":106,"endColumn":21},{"ruleId":"530","severity":1,"message":"558","line":141,"column":15,"nodeType":"532","messageId":"536","endLine":141,"endColumn":17},{"ruleId":"530","severity":1,"message":"558","line":175,"column":19,"nodeType":"532","messageId":"536","endLine":175,"endColumn":21},{"ruleId":"530","severity":1,"message":"558","line":210,"column":19,"nodeType":"532","messageId":"536","endLine":210,"endColumn":21},{"ruleId":"530","severity":1,"message":"558","line":218,"column":19,"nodeType":"532","messageId":"536","endLine":218,"endColumn":21},{"ruleId":"530","severity":1,"message":"558","line":254,"column":19,"nodeType":"532","messageId":"536","endLine":254,"endColumn":21},{"ruleId":"530","severity":1,"message":"558","line":262,"column":19,"nodeType":"532","messageId":"536","endLine":262,"endColumn":21},{"ruleId":"530","severity":1,"message":"558","line":298,"column":19,"nodeType":"532","messageId":"536","endLine":298,"endColumn":21},{"ruleId":"530","severity":1,"message":"558","line":306,"column":19,"nodeType":"532","messageId":"536","endLine":306,"endColumn":21},{"ruleId":"564","severity":1,"message":"565","line":340,"column":96,"nodeType":"566","messageId":"567","endLine":340,"endColumn":97,"fix":"568"},{"ruleId":"530","severity":1,"message":"558","line":367,"column":19,"nodeType":"532","messageId":"536","endLine":367,"endColumn":21},{"ruleId":"530","severity":1,"message":"558","line":375,"column":19,"nodeType":"532","messageId":"536","endLine":375,"endColumn":21},{"ruleId":"530","severity":1,"message":"558","line":383,"column":19,"nodeType":"532","messageId":"536","endLine":383,"endColumn":21},{"ruleId":"526","severity":1,"message":"542","line":47,"column":7,"nodeType":"528","endLine":47,"endColumn":9,"suggestions":"569"},{"ruleId":"522","severity":1,"message":"570","line":12,"column":5,"nodeType":"524","messageId":"525","endLine":12,"endColumn":10},{"ruleId":"522","severity":1,"message":"571","line":56,"column":17,"nodeType":"524","messageId":"525","endLine":56,"endColumn":20},{"ruleId":"526","severity":1,"message":"572","line":61,"column":10,"nodeType":"528","endLine":61,"endColumn":12,"suggestions":"573"},{"ruleId":"526","severity":1,"message":"547","line":9,"column":3,"nodeType":"524","endLine":9,"endColumn":12,"suggestions":"574"},{"ruleId":"522","severity":1,"message":"571","line":17,"column":13,"nodeType":"524","messageId":"525","endLine":17,"endColumn":16},{"ruleId":"575","severity":1,"message":"576","line":25,"column":5,"nodeType":"566","endLine":25,"endColumn":15},{"ruleId":"522","severity":1,"message":"577","line":8,"column":7,"nodeType":"524","messageId":"525","endLine":8,"endColumn":14},{"ruleId":"522","severity":1,"message":"578","line":12,"column":12,"nodeType":"524","messageId":"525","endLine":12,"endColumn":19},{"ruleId":"522","severity":1,"message":"579","line":12,"column":21,"nodeType":"524","messageId":"525","endLine":12,"endColumn":31},{"ruleId":"526","severity":1,"message":"562","line":26,"column":10,"nodeType":"528","endLine":26,"endColumn":12,"suggestions":"580"},{"ruleId":"530","severity":1,"message":"531","line":15,"column":20,"nodeType":"532","messageId":"533","endLine":15,"endColumn":22},{"ruleId":"530","severity":1,"message":"531","line":16,"column":20,"nodeType":"532","messageId":"533","endLine":16,"endColumn":22},{"ruleId":"526","severity":1,"message":"581","line":32,"column":8,"nodeType":"528","endLine":32,"endColumn":10,"suggestions":"582"},"no-native-reassign",["583"],"no-negated-in-lhs",["584"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["585"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'bball2' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Link' is defined but never used.","'getChats' is defined but never used.","'setMessages' is assigned a value but never used.","'chatStatus' is assigned a value but never used.","'startChat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getGameChat' and 'match.params.id'. Either include them or remove the dependency array. If 'getGameChat' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["586"],"'createTime' is assigned a value but never used.",["587"],"'Spinner' is defined but never used.","React Hook useEffect contains a call to 'setUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [chat.names, user.name] as a second argument to the useEffect Hook.",["588"],"'useState' is defined but never used.","'axios' is defined but never used.","'Redirect' is defined but never used.",["583"],["584"],"React Hook useEffect has a missing dependency: 'getGames'. Either include it or remove the dependency array. If 'getGames' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["589"],["590"],["591"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","'searchterm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clearGame'. Either include it or remove the dependency array. If 'clearGame' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["592"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["593"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"594","text":"595"},["596"],"'model' is defined but never used.","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currChat' and 'user._id'. Either include them or remove the dependency array.",["597"],["598"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","'USER_ID' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["599"],"React Hook useEffect has a missing dependency: 'game._id'. Either include it or remove the dependency array.",["600"],"no-global-assign","no-unsafe-negation",{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"601","fix":"605"},{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"601","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},[15149,15160],"\r\n        .",{"desc":"603","fix":"617"},{"desc":"618","fix":"619"},{"desc":"606","fix":"620"},{"desc":"615","fix":"621"},{"desc":"622","fix":"623"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"624","text":"625"},"Update the dependencies array to be: [getGameChat, match.params.id]",{"range":"626","text":"627"},{"range":"628","text":"625"},"Add dependencies array: [chat.names, user.name]",{"range":"629","text":"630"},"Update the dependencies array to be: [games, getGames]",{"range":"631","text":"632"},"Update the dependencies array to be: [getCurrentProfile, profile]",{"range":"633","text":"634"},{"range":"635","text":"625"},"Update the dependencies array to be: [clearGame, game]",{"range":"636","text":"637"},"Update the dependencies array to be: [user._id]",{"range":"638","text":"639"},{"range":"640","text":"627"},"Update the dependencies array to be: [currChat, user._id]",{"range":"641","text":"642"},{"range":"643","text":"630"},{"range":"644","text":"639"},"Update the dependencies array to be: [game._id]",{"range":"645","text":"646"},[460,462],"[getCurrentProfile]",[1611,1613],"[getGameChat, match.params.id]",[395,397],[444,444],", [chat.names, user.name]",[1759,1766],"[games, getGames]",[1824,1833],"[getCurrentProfile, profile]",[534,536],[1574,1580],"[clearGame, game]",[1962,1964],"[user._id]",[1465,1467],[1883,1885],"[currChat, user._id]",[397,397],[780,782],[1131,1133],"[game._id]"]