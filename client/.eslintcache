[{"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\index.js":"1","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\App.js":"2","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\store.js":"3","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\setAuthToken.js":"4","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\auth.js":"5","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Alert.js":"6","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Navbar.js":"7","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Landing.js":"8","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Login.js":"9","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Register.js":"10","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\CreateProfile.js":"11","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\EditProfile.js":"12","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\MyProfile.js":"13","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\UserProfile.js":"14","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\routing\\PrivateRoute.js":"15","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\Profiles.js":"17","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\types.js":"18","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\alert.js":"19","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\profile.js":"20","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Spinner.js":"21","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\ProfileItem.js":"22","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendList.js":"23","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\index.js":"24","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\alert.js":"25","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\auth.js":"26","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\profile.js":"27","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\game.js":"28","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\Games.js":"29","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\game.js":"30","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameRoom.js":"31","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\dateformat.js":"32","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\CreateGame.js":"33","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\AccountSettings.js":"34","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\MessageBox.js":"35","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Message.js":"36","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Chat.js":"37","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\chat.js":"38","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\chat.js":"39","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendItem.js":"40","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameChat.js":"41","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameMessage.js":"42","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\gamechat.js":"43","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\gamechat.js":"44","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\PasswordChange.js":"45","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\index.js":"46","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\App.js":"47","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\store.js":"48","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\auth.js":"49","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\utils\\setAuthToken.js":"50","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Landing.js":"51","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Navbar.js":"52","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\Login.js":"53","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\Register.js":"54","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\PasswordChange.js":"55","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\AccountSettings.js":"56","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Alert.js":"57","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\CreateProfile.js":"58","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Dashboard.js":"59","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\MyProfile.js":"60","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\EditProfile.js":"61","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\UserProfile.js":"62","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\Profiles.js":"63","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\routing\\PrivateRoute.js":"64","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\Games.js":"65","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameRoom.js":"66","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\CreateGame.js":"67","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\EnterCall.js":"68","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\MessageBox.js":"69","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\types.js":"70","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\alert.js":"71","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\profile.js":"72","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\chat.js":"73","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\Message.js":"74","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\Chat.js":"75","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Spinner.js":"76","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\ChannelForm.js":"77","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\StudyForm.js":"78","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\OnlineGamesForm.js":"79","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\VideoCall.js":"80","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\gamechat.js":"81","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\SportsForm.js":"82","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\utils\\dateformat.js":"83","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\game.js":"84","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameChat.js":"85","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\ProfileItem.js":"86","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FriendList.js":"87","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\index.js":"88","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameMessage.js":"89","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FriendItem.js":"90","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\alert.js":"91","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\auth.js":"92","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\game.js":"93","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\profile.js":"94","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\gamechat.js":"95","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\chat.js":"96","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\BookFacility.js":"97","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Request.js":"98","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FollowerItem.js":"99"},{"size":248,"mtime":1622015683220,"results":"100","hashOfConfig":"101"},{"size":3139,"mtime":1623847663156,"results":"102","hashOfConfig":"101"},{"size":525,"mtime":1622017945910,"results":"103","hashOfConfig":"101"},{"size":253,"mtime":1621834101000,"results":"104","hashOfConfig":"101"},{"size":3395,"mtime":1623856105582,"results":"105","hashOfConfig":"101"},{"size":681,"mtime":1622029844696,"results":"106","hashOfConfig":"101"},{"size":3780,"mtime":1623175227466,"results":"107","hashOfConfig":"101"},{"size":1193,"mtime":1622188968941,"results":"108","hashOfConfig":"101"},{"size":2569,"mtime":1623114736157,"results":"109","hashOfConfig":"101"},{"size":3738,"mtime":1622168655435,"results":"110","hashOfConfig":"101"},{"size":4425,"mtime":1623474395458,"results":"111","hashOfConfig":"101"},{"size":6154,"mtime":1623683989652,"results":"112","hashOfConfig":"101"},{"size":1997,"mtime":1623683989653,"results":"113","hashOfConfig":"101"},{"size":5214,"mtime":1623477385632,"results":"114","hashOfConfig":"101"},{"size":599,"mtime":1622290473306,"results":"115","hashOfConfig":"101"},{"size":5775,"mtime":1623847205614,"results":"116","hashOfConfig":"101"},{"size":1827,"mtime":1623114350195,"results":"117","hashOfConfig":"101"},{"size":1148,"mtime":1623854942224,"results":"118","hashOfConfig":"101"},{"size":636,"mtime":1622033894520,"results":"119","hashOfConfig":"101"},{"size":2820,"mtime":1622962512456,"results":"120","hashOfConfig":"101"},{"size":273,"mtime":1621834101000,"results":"121","hashOfConfig":"101"},{"size":1218,"mtime":1622550892482,"results":"122","hashOfConfig":"101"},{"size":1283,"mtime":1623476012574,"results":"123","hashOfConfig":"101"},{"size":446,"mtime":1623743429712,"results":"124","hashOfConfig":"101"},{"size":611,"mtime":1622039051791,"results":"125","hashOfConfig":"101"},{"size":1581,"mtime":1623854995364,"results":"126","hashOfConfig":"101"},{"size":1040,"mtime":1622964793845,"results":"127","hashOfConfig":"101"},{"size":1423,"mtime":1622880181460,"results":"128","hashOfConfig":"101"},{"size":3351,"mtime":1623842643415,"results":"129","hashOfConfig":"101"},{"size":3249,"mtime":1622863608559,"results":"130","hashOfConfig":"101"},{"size":9702,"mtime":1623806441373,"results":"131","hashOfConfig":"101"},{"size":221,"mtime":1622689019857,"results":"132","hashOfConfig":"101"},{"size":7165,"mtime":1623809742099,"results":"133","hashOfConfig":"101"},{"size":1660,"mtime":1623847680595,"results":"134","hashOfConfig":"101"},{"size":4354,"mtime":1623753344185,"results":"135","hashOfConfig":"101"},{"size":786,"mtime":1623725190497,"results":"136","hashOfConfig":"101"},{"size":1320,"mtime":1623753409743,"results":"137","hashOfConfig":"101"},{"size":898,"mtime":1623473837206,"results":"138","hashOfConfig":"101"},{"size":1110,"mtime":1623727296986,"results":"139","hashOfConfig":"101"},{"size":1669,"mtime":1623727875463,"results":"140","hashOfConfig":"101"},{"size":2416,"mtime":1623816838462,"results":"141","hashOfConfig":"101"},{"size":979,"mtime":1623805635775,"results":"142","hashOfConfig":"101"},{"size":916,"mtime":1623810181643,"results":"143","hashOfConfig":"101"},{"size":1120,"mtime":1623743778545,"results":"144","hashOfConfig":"101"},{"size":2377,"mtime":1623856057761,"results":"145","hashOfConfig":"101"},{"size":257,"mtime":1624199719923,"results":"146","hashOfConfig":"147"},{"size":3495,"mtime":1624373200842,"results":"148","hashOfConfig":"147"},{"size":546,"mtime":1624199719929,"results":"149","hashOfConfig":"147"},{"size":3542,"mtime":1624199719879,"results":"150","hashOfConfig":"147"},{"size":264,"mtime":1624199719930,"results":"151","hashOfConfig":"147"},{"size":1236,"mtime":1624199719892,"results":"152","hashOfConfig":"147"},{"size":3780,"mtime":1624199719893,"results":"153","hashOfConfig":"147"},{"size":2651,"mtime":1624199719882,"results":"154","hashOfConfig":"147"},{"size":3853,"mtime":1624199719883,"results":"155","hashOfConfig":"147"},{"size":2377,"mtime":1624199719882,"results":"156","hashOfConfig":"147"},{"size":1660,"mtime":1624199719881,"results":"157","hashOfConfig":"147"},{"size":706,"mtime":1624199719892,"results":"158","hashOfConfig":"147"},{"size":4425,"mtime":1624199719905,"results":"159","hashOfConfig":"147"},{"size":6399,"mtime":1624435619535,"results":"160","hashOfConfig":"147"},{"size":2009,"mtime":1624271410671,"results":"161","hashOfConfig":"147"},{"size":6154,"mtime":1624199719905,"results":"162","hashOfConfig":"147"},{"size":5397,"mtime":1624373200860,"results":"163","hashOfConfig":"147"},{"size":1883,"mtime":1624199719902,"results":"164","hashOfConfig":"147"},{"size":618,"mtime":1624199719904,"results":"165","hashOfConfig":"147"},{"size":3520,"mtime":1624271410662,"results":"166","hashOfConfig":"147"},{"size":14321,"mtime":1624201740835,"results":"167","hashOfConfig":"147"},{"size":1667,"mtime":1624271410658,"results":"168","hashOfConfig":"147"},{"size":610,"mtime":1624435017168,"results":"169","hashOfConfig":"147"},{"size":4644,"mtime":1624447771922,"results":"170","hashOfConfig":"147"},{"size":1148,"mtime":1624199719881,"results":"171","hashOfConfig":"147"},{"size":656,"mtime":1624199719878,"results":"172","hashOfConfig":"147"},{"size":2820,"mtime":1624199719880,"results":"173","hashOfConfig":"147"},{"size":1110,"mtime":1624199719879,"results":"174","hashOfConfig":"147"},{"size":786,"mtime":1624199719884,"results":"175","hashOfConfig":"147"},{"size":1320,"mtime":1624199719884,"results":"176","hashOfConfig":"147"},{"size":286,"mtime":1624199719893,"results":"177","hashOfConfig":"147"},{"size":706,"mtime":1624433072180,"results":"178","hashOfConfig":"147"},{"size":5109,"mtime":1624373200856,"results":"179","hashOfConfig":"147"},{"size":5891,"mtime":1624373200849,"results":"180","hashOfConfig":"147"},{"size":4380,"mtime":1624439894912,"results":"181","hashOfConfig":"147"},{"size":1120,"mtime":1624199719880,"results":"182","hashOfConfig":"147"},{"size":7073,"mtime":1624373200853,"results":"183","hashOfConfig":"147"},{"size":221,"mtime":1624199719930,"results":"184","hashOfConfig":"147"},{"size":3249,"mtime":1624199719879,"results":"185","hashOfConfig":"147"},{"size":2416,"mtime":1624199719888,"results":"186","hashOfConfig":"147"},{"size":1262,"mtime":1624199719901,"results":"187","hashOfConfig":"147"},{"size":1345,"mtime":1624271410651,"results":"188","hashOfConfig":"147"},{"size":465,"mtime":1624199719927,"results":"189","hashOfConfig":"147"},{"size":979,"mtime":1624199719889,"results":"190","hashOfConfig":"147"},{"size":1699,"mtime":1624435444333,"results":"191","hashOfConfig":"147"},{"size":633,"mtime":1624199719924,"results":"192","hashOfConfig":"147"},{"size":1643,"mtime":1624199719925,"results":"193","hashOfConfig":"147"},{"size":1423,"mtime":1624199719926,"results":"194","hashOfConfig":"147"},{"size":1089,"mtime":1624199719928,"results":"195","hashOfConfig":"147"},{"size":916,"mtime":1624199719926,"results":"196","hashOfConfig":"147"},{"size":898,"mtime":1624199719925,"results":"197","hashOfConfig":"147"},{"size":3582,"mtime":1624373777091,"results":"198","hashOfConfig":"147"},{"size":1861,"mtime":1624379126461,"results":"199","hashOfConfig":"147"},{"size":1206,"mtime":1624436576547,"results":"200","hashOfConfig":"147"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},"1rtdnpg",{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"203"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"203"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"203"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"203"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"203"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"203"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"203"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"203"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"203"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"203"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"203"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"203"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},"bs3a05",{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"306"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"306"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"306"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"306"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"306"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"306"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"306"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"306"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"306"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"306"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"306"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"306"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"306"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"306"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"306"},"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\index.js",[],["425","426"],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\App.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\store.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Login.js",["427"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport \"../../App.css\";\nimport '../../css/bootstrap.min.css';\n\n/**\n * Functional component for login page, allows client to\n * change the fields on the login page, as well as log into\n * their account provided their credentials are correct. \n * Parameters will be destructured props\n * @param login Our login action which will dispatch LOGIN_SUCCESS if successfully logged in with provided \n * email and password\n * @param isAuthenticated A boolean state in auth, to ensure that \n * authenticated users who are logged in will be directed to dashboard\n */\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = a => {\n    a.preventDefault();\n    login(formData.email, formData.password);\n  };\n\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Fragment>\n            <div className =\"box-body\">\n              <h1 className=\"large text-primary\">Sign In</h1>\n              \n              <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                      <input\n                        type=\"email\"\n                        placeholder=\"NUS Email Address\"\n                        name=\"email\"\n                        value={formData.email}\n                        onChange={onChange}\n                        required\n                      />\n                </div>\n\n                <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      value={formData.password}\n                      onChange={onChange}\n                      minLength=\"7\"\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" value=\"Login\" />\n              </form>\n             \n            </div>\n    </Fragment>\n  );\n}; \n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\CreateProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\EditProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\user-profile\\MyProfile.js",["428"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst MyProfile = ({ getCurrentProfile, auth: { user }, profile : { profile, loading } }) => {\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n      getCurrentProfile();\r\n    },[]);\r\n  \r\n    return (\r\n      <Fragment>\r\n          { loading || profile.user._id !== user._id ? (\r\n            <Spinner /> ):\r\n        <Fragment> \r\n            <h1 className=\"large\"> \r\n              {user.name}'s Profile  \r\n              <br/> \r\n              <img className=\"profiledp\" src={user.avatar} alt=\"\"/>\r\n            </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n          <p> <strong> Your Interests: </strong></p>\r\n        <ul>\r\n          {profile.interests.map(item => {\r\n              return <li>{item}</li>;\r\n            })}\r\n        </ul>\r\n\r\n        <div className =\"my-2\"> \r\n            <Link to ='/edit-profile' className=\"btn btn-primary my-1\"> Update Profile </Link>\r\n          \r\n          <> </>\r\n          <Link to=\"/dashboard\" className=\"btn btn-dark join-all\">\r\n            Home\r\n          </Link>\r\n          \r\n         \r\n          </div>\r\n        </Fragment> \r\n    }\r\n    </Fragment>\r\n  );\r\n}\r\n   \r\n  \r\n  MyProfile.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n  });\r\n  \r\n  export default connect(mapStateToProps, { getCurrentProfile })(MyProfile);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\UserProfile.js",["429"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfilesById } from '../../actions/profile';\r\nimport { authUser } from '../../actions/auth'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {createChat} from '../../actions/chat';\r\n\r\n\r\nconst UserProfile = ({ createChat, chat:{chats}, authUser, getProfilesById, profile: { profile, loading }, auth, match, history}) => {\r\n\r\n  const chatID = [];\r\n  if (chats.length > 0) {\r\n    chats.map(chat => {\r\n      chatID.push(chat.users.find(id => id !== auth.user._id));\r\n    })\r\n  }\r\n  \r\n\r\n  const startNewConvo= () => {\r\n      try {\r\n        if (!chatID.includes(profile.user._id)) {\r\n            const formData = {\r\n                receiver: profile.user._id\r\n            }\r\n            createChat(formData, history)\r\n        } else {\r\n            history.push('/messagebox')\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n  \r\n\r\n  const [followed, toggle] = useState(\r\n    auth.user.followings.includes(match.params.id)\r\n  );\r\n\r\n  useEffect(() => {\r\n    authUser();\r\n  });\r\n\r\n\r\n  //cannot rerender if not clicking directly on the main page will conflict with main page rerender\r\n  useEffect(() => {\r\n      getProfilesById(match.params.id);\r\n      // eslint-disable-next-line\r\n    },[getProfilesById]);\r\n\r\n\r\n  const followUnfollow = () => {\r\n      try {\r\n        if (!followed) {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/follow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        } else {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/unfollow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        }\r\n      }catch (err) { \r\n        console.log(err.status)\r\n      }\r\n    };\r\n    \r\n    if (profile === null || loading) {\r\n      return < Spinner />\r\n    } else {\r\n      if (profile.user._id === auth.user._id) {\r\n        return <Spinner />\r\n      } else {\r\n        return <Fragment>\r\n            <h1> {profile.user.name}'s Profile  </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n            <p> <strong> Your Interests: </strong></p>\r\n                <ul>\r\n                {profile.interests.map(item => {\r\n                    return <li>{item}</li>;\r\n                    })}\r\n                </ul>\r\n            \r\n            {profile.hasOwnProperty(\"social\")  && <Fragment>\r\n              <p> <strong> Social Media: </strong> </p>\r\n                  <ul>\r\n                      {profile.social.hasOwnProperty(\"facebook\") && <Fragment> <li><i class=\"fab fa-facebook\"/> {\" \"} {profile.social.facebook}</li> </Fragment> }\r\n                      {profile.social.hasOwnProperty(\"instagram\") && <Fragment> <li><i class=\"fab fa-instagram\"/> {\" \"} {profile.social.instagram}</li> </Fragment> }\r\n                  </ul>\r\n            </Fragment>\r\n            }\r\n\r\n            <Link to=\"/profiles\" className=\"btn btn-secondary\">\r\n            Find more Friends\r\n            </Link>\r\n            <>  </>\r\n            {!followed && auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-dark\">\r\n                  <i class=\"fas fa-user-plus\"/>   Follow\r\n                </button>\r\n                ) \r\n            }\r\n\r\n            {followed && auth.isAuthenticated &&\r\n                auth.loading === false && \r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-success\">\r\n                   <i class=\"fas fa-user-minus\"/>   Unfollow\r\n                </button>\r\n                ) \r\n            }\r\n            \r\n            <>  </>\r\n            {auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {startNewConvo()}} type=\"button\" className=\"btn btn-primary my-1\"> <i class=\"fas fa-comment-dots\"/>\r\n                    {\" \"} Message\r\n                 </button>\r\n                ) \r\n            }\r\n        </Fragment>\r\n      }\r\n    }\r\n  };\r\n\r\n\r\nUserProfile.propTypes = {\r\n    getProfilesById: PropTypes.func.isRequired,\r\n    authUser: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth,\r\n    chat: state.chat\r\n})\r\n\r\nexport default connect(mapStateToProps, { authUser, getProfilesById, createChat })(withRouter(UserProfile));","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\Dashboard.js",["430"],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\Profiles.js",["431"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport ProfileItem from './ProfileItem'\nimport { clearProfile, getProfiles } from '../../actions/profile';\n\nconst Profiles = ({clearProfile, getProfiles, profile: { profiles, loading }, auth}) => {\n    useEffect(()  => {\n        getProfiles();\n    }, [getProfiles]);\n\n    //additional clear profile to clear out dashboard rerendering\n    useEffect(()  => {\n        clearProfile();\n    }, [clearProfile]);\n\n\n    const displayAll = profiles.length <= 0 ? <h4>No profiles found</h4> : \n        profiles.map(profile => {\n            if (profile.user._id !== auth.user._id) {\n                return <ProfileItem key = {profile._id} profile ={profile} />\n            }\n        })\n\n    return <Fragment> \n        { loading ? <Spinner /> : <Fragment>\n            <h1 className = \"large text-dark big-header\"> Sports Enthusiasts of NUS </h1>\n\n            <div className =\"input-group my-3\">\n                <input type=\"search\" className =\"form-control rounded\" placeholder=\"Search\" aria-label=\"Search\"\n                    aria-describedby=\"search-addon\" />\n                <button type=\"button\" class=\"btn btn-outline-primary\">search</button>\n            </div>\n            <div className=\"profiles\">\n                {displayAll}\n            </div>\n\n        </Fragment>}\n    </Fragment>\n    \n}\n  \nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    clearProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n};\n  \nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    auth: state.auth\n});\n\n  \nexport default connect(mapStateToProps, { clearProfile, getProfiles})(Profiles);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\types.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\profiles\\ProfileItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendList.js",["432"],"import { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport FriendItem from \"./FriendItem\";\n\n\nconst FriendList = ({auth: { user }, chat:{chats}}) => {\n\n    const [friends, setFriends] = useState([]);\n\n\n    useEffect(() => {\n        const getFriends = async () => {\n          try {\n            const friendList = await axios.get(\"/api/users/friends/\" + user._id);\n            setFriends(friendList.data);\n          } catch (err) {\n            console.log(err);\n          }\n        };\n        getFriends()\n      });\n    \n    \n\n    return (\n      \n      <div className=\"card\">\n          <div className=\"card-header\">\n              <strong> My Friends ({friends.length}) </strong>\n          </div>\n        \n          <ul className=\"list-group list-group-flush\">\n            {friends.map((friend) => (\n                <FriendItem friend ={friend}/>\n           ))}\n          </ul>\n        </div>\n       \n    )\n}\n\n\nFriendList.propTypes = {\n  auth: PropTypes.object.isRequired,\n  chat: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    chat: state.chat\n});\n\nexport default connect(mapStateToProps)(FriendList);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\index.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\Games.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameRoom.js",["433","434","435","436","437"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { authUser } from '../../actions/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { getGameById } from '../../actions/game';\r\nimport { clearProfile } from '../../actions/profile';\r\nimport axios from 'axios';\r\nimport dateformat from '../../utils/dateformat';\r\nimport GameChat from './GameChat';\r\nimport { getChats } from '../../actions/chat';\r\nimport { getGameChat, createGameChat } from '../../actions/gamechat';\r\n\r\n\r\nconst GameRoom = ({ getGameChat, createGameChat, clearProfile, getGameById, authUser, auth, game : {game, loading}, match, gamechat: {gamechat} }) => {\r\n\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const [chatStatus, startChat] = useState(\r\n        messages.length === 0\r\n    );\r\n    \r\n  \r\n    \r\n    const startNewConvo= () => {\r\n        try {\r\n            const formData = {\r\n                room: game._id\r\n            }\r\n            createGameChat(formData)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n    }\r\n\r\n    const quitGame = () => {\r\n        try {\r\n            axios.put(`/api/games/quit/${game._id}`);\r\n        } catch (err) { \r\n            console.log(err.status)\r\n        }\r\n      };\r\n    \r\n    const joinGame = () => {\r\n        try {\r\n            axios.put(`/api/games/join/${game._id}`);\r\n        } catch (err) { \r\n            console.log(err.status)\r\n        }\r\n      };\r\n\r\n    useEffect(() => {\r\n        getGameChat(match.params.id);\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        getGameById(match.params.id);\r\n    });\r\n    \r\n    useEffect(() => {\r\n        authUser();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        clearProfile();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    if (game === null || loading || gamechat === null) {\r\n        return(\r\n            <Fragment>\r\n                <Spinner />\r\n            </Fragment>\r\n        ) \r\n    } else {\r\n        return (\r\n            <Fragment>\r\n                <h1 className=\"text-primary my-3 my-btm\"> {game.name}'s Game Lobby  </h1>\r\n                <div className=\"row\">\r\n                <div className=\"card-body\">\r\n                <Link to=\"/all-games\" className=\"btn btn-dark join-all\"> <i class=\"fas fa-sign-out-alt\" /> Leave Lobby </Link>\r\n                </div>\r\n                </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                            <h5 className=\"card-title my-3 host-title\">{game.sport}</h5>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Experience Level: </span> {game.experience}</p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"?game.otherLoc:game.location}</p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Date: </span> {dateformat(game.dateTime)} </p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Max Players: </span> {game.maxPlayers} </p>\r\n                                <br></br>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                <h5 className=\"card-title my-3 host-title\">Players In Waiting Room : {game.players.length} </h5>\r\n                                {game.players.length > 0 && game.players.map(player => { \r\n                                    if (player.user === auth.user._id) {\r\n                                        return (\r\n                                            <Fragment>\r\n                                            <div className=\"card mb-3\">\r\n                                            <div className=\"card-body player-card\">\r\n                                                {player.name}\r\n                                                <button onClick= {()=> {\r\n                                                    quitGame();\r\n                                                }} type=\"button\" className=\"btn btn-danger btn-round join-all\"> <i class=\"far fa-times-circle\"/> </button>\r\n                                            </div>\r\n                                            </div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    } else {\r\n                                        return (\r\n                                            <Fragment>\r\n                                            <div className=\"card mb-3\">\r\n                                            <div className=\"card-body player-card\">\r\n                                                <Link to={`/profile/${player.user}`}> {player.name} </Link> \r\n                                            </div>\r\n                                            </div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    }\r\n                                })}\r\n                                <p> { game.players.length < game.maxPlayers && game.players.filter(player => \r\n                                    player.user === auth.user._id).length === 0  && \r\n                                    <button onClick= {()=> {\r\n                                        joinGame();\r\n                                    }} type=\"button\" className=\"btn btn-primary join-all\"> Join Game </button>}\r\n                                </p>\r\n\r\n                                <h5> { game.players.length >= game.maxPlayers && <span class=\"badge badge-light\">\r\n                                    Waiting Room is Currently Full</span>}</h5>\r\n                             \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"row g-0\">\r\n                                <div className=\"col-md-4\">\r\n                                    <img height=\"195\" width =\"195\" src={game.avatar} className=\"round-img\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                    <h5 className=\"card-title my-3 host-title \">About Game Host </h5>\r\n                                    <p className=\"card-text\"> <span className='text-primary'> Host Name: </span> {game.name}</p>\r\n                                    <small className=\"card-text text-muted\"> Room Created: {dateformat(game.createTime)} </small>\r\n                                    <br></br>\r\n                                </div>\r\n                            </div>\r\n                                {game.user !== auth.user._id &&  <Link to={`/profile/${game.user}`} className=\"btn btn-dark btn-lg btn-block\"> View Host Profile </Link>}\r\n                                {game.user === auth.user._id &&  <Link to=\"#!\" className=\"btn btn-dark btn-lg btn-block\"> <i class=\"fas fa-cog\"/> Game Settings </Link>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 col-md-12\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title my-3 host-title \"> Game Chat</h5>\r\n                                </div>\r\n\r\n                                { gamechat.length === 0 && game.user !== auth.user._id &&\r\n                                    <Fragment>\r\n                                        <h1 className =\"badge badge-danger\"> Game Chat has not been enabled </h1>\r\n                                    </Fragment>\r\n                                }\r\n\r\n                                { (gamechat.length === 0 && game.user === auth.user._id) \r\n                                    && <button type=\"button\" onClick = {()=> {startNewConvo()}} className=\"btn btn-success btn-lg btn-block \">\r\n                                      Enable Chat\r\n                                </button> }\r\n\r\n                                { gamechat.length > 0 &&  <GameChat />}\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nGameRoom.propTypes = {\r\n    getGameById: PropTypes.func.isRequired,\r\n    authUser: PropTypes.func.isRequired,\r\n    clearProfile: PropTypes.func.isRequired,\r\n    createGameChat: PropTypes.func.isRequired,\r\n    getGameChat: PropTypes.func.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    game: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    gamechat: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    game: state.game,\r\n    auth: state.auth,\r\n    gamechat: state.gamechat\r\n})\r\n\r\nexport default connect(mapStateToProps, { getGameChat, createGameChat, clearProfile, getGameById, authUser })(GameRoom);","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\utils\\dateformat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\CreateGame.js",["438"],"import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createGame } from '../../actions/game';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst CreateGame = ({ createGame, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        sport: '',\r\n        location: '',\r\n        otherLoc: '',\r\n        experience: '',\r\n        maxPlayers: '',\r\n        dateTime: Date.now,\r\n        createTime: Date.now,\r\n    });\r\n    \r\n    const {\r\n       sport,\r\n       location,\r\n       otherLoc,\r\n       experience,\r\n       maxPlayers,\r\n       dateTime,\r\n       createTime,\r\n    } = formData;\r\n\r\n    const sports = [\r\n        { sport: \"Badminton\", locations:[\"Kent Ridge - MPSH 5\", \"UTown - Sports Hall 1\"], \r\n            maxPlayers:[\"2\",\"3\",\"4\",\"5\",\"6\"] },\r\n        { sport: \"Basketball\", locations:[\"Eusoff Hall\", \"NUS Sports & Recreation Centre\",\"Temasek Hall\",\"Others\"], \r\n        maxPlayers:[\"4\",\"6\",\"8\",\"9\",\"10\"] },\r\n        { sport: \"Frisbee\", locations:[\"Kent Ridge - Multi-Purpose Fields\",\"Utown - Open Field\",\"Others\"], \r\n        maxPlayers:[\"4\",\"6\",\"8\",\"9\",\"10\"] },\r\n        { sport: \"Running\", locations:[\"Kent Ridge - Running Field\", \"West Coast Park\",\"Others\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\"] },\r\n        { sport: \"Squash\", locations:[\"Kent Ridge - Squash Courts\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\"] },\r\n        { sport: \"Swimming\", locations:[\"NUS Sports & Recreation Centre\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\"] },\r\n        { sport: \"Table Tennis\", locations:[\"Kent Ridge - MPSH 2\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\",\"6\"] },\r\n        { sport: \"Tennis\", locations:[\"Kent Ridge - Outdoor Tennis Courts\"], \r\n        maxPlayers:[\"2\",\"3\",\"4\",\"5\",\"6\"] },\r\n      ];\r\n\r\n    const setToday = () => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 1;\r\n        var yyyy = today.getFullYear();\r\n        var hh = today.getHours() + 1;\r\n        var mins = \"00\";\r\n\r\n        if (dd<10) {\r\n            dd = \"0\" + dd;\r\n        }\r\n\r\n        if (mm<10) {\r\n            mm = \"0\" + mm;\r\n        }\r\n\r\n\r\n        if (hh<10) {\r\n            hh = \"0\" + hh;\r\n        }\r\n\r\n        if (hh===24) {\r\n            hh = \"00\";\r\n        }\r\n\r\n        today = yyyy+'-'+mm+'-'+dd+'T'+hh+\":\"+mins;\r\n        document.getElementById(\"datefield\").setAttribute(\"min\", today);\r\n    }\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const locationChange = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value});\r\n        if (e.target.value!==\"Others\" && formData.otherLoc!=='') {\r\n            document.getElementById('otherLoc').value = '';\r\n        }\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createGame(formData, history);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className =\"container\">\r\n            <h1 className=\"large my-btm\"> <i class=\"fas fa-football-ball\"/> {\" \"}\r\n                Host Your Own Game\r\n            </h1>\r\n\r\n            <form className=\"form2\" onSubmit = {data => onSubmit(data)}>\r\n                <div className=\"form-group2\">\r\n                    <select name=\"sport\" value={sport} onChange = {e=> onChange(e)}>\r\n                        <option value=\"\" disabled selected hidden> Sport </option>\r\n                        {sports.map(sport => {\r\n                            return <option>{sport.sport}</option>\r\n                        })}\r\n                    </select> \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group2\">\r\n                            <select name=\"location\" value={location} onChange = {e=> locationChange(e)}>\r\n                                <option value=\"\" disabled selected hidden>Location</option>\r\n                                {sports.filter(sport => sport.sport===formData.sport).map(\r\n                                    sport => sport.locations.map(location => {return <option>{location}</option>}))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group2\">\r\n                            {formData.location===\"Others\" && \r\n                            <Fragment>\r\n                            <input \r\n                                    id=\"otherLoc\"\r\n                                    type=\"text\" \r\n                                    name=\"otherLoc\" \r\n                                    value={otherLoc} \r\n                                    placeholder=\"Other Locations\" \r\n                                    onChange = {e=> onChange(e)}/>\r\n                             <small className=\"form-text\"> Facilities booking for these locations will not be allowed within (Match) Maker </small>\r\n                            </Fragment>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group2\">\r\n                    <select name=\"experience\" value={experience} onChange = {e=> onChange(e)}>\r\n                            <option value=\"\" disabled selected hidden>Experience Level</option>\r\n                            <option>Beginner</option>\r\n                            <option>Intermediate</option>\r\n                            <option>Expert</option>\r\n                    </select> \r\n                </div>\r\n               \r\n               \r\n                <div className=\"form-group2\">\r\n                    <select name=\"maxPlayers\" value={maxPlayers} onChange = {e=> onChange(e)}>\r\n                            <option value=\"\" disabled selected hidden>Max Number of Players</option>\r\n                            {sports.filter(sport => sport.sport===formData.sport).map(\r\n                                sport => sport.maxPlayers.map(player => {return <option>{player}</option>}))\r\n                            }\r\n                    </select> \r\n                </div>\r\n\r\n                <div className=\"form-group row my-btm\">\r\n                    <div className=\"col-md-2\"> <h5> Date and Time </h5> </div>\r\n                    <input \r\n                        id=\"datefield\"\r\n                        name=\"dateTime\"\r\n                        type=\"datetime-local\"\r\n                        value={dateTime}\r\n                        onChange={e => onChange(e)}\r\n                        onClick={setToday}\r\n                        className=\"col-md-6\"\r\n                        max=\"2022-06-14T00:00\"\r\n                    />\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-3\" />\r\n\r\n                <>   </>\r\n                <Link className=\"btn btn-light my-3\" to=\"/all-games\">Go Back</Link>\r\n            </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nCreateGame.propTypes = {\r\n    createGame: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {createGame}) (withRouter(CreateGame))\r\n\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\AccountSettings.js",["439"],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\MessageBox.js",["440"],"import React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport Chat from './Chat';\r\nimport Message from './Message';\r\nimport { getChats } from '../../actions/chat';\r\nimport axios from 'axios';\r\nimport ChatBG from '../../img/ChatBG.png'\r\n\r\n//main page for display of all conversations and messages \r\nconst MessageBox = ({getChats, auth: { user }, chat : {chats}}) => {\r\n    const [currChat, setChat] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [formData, setFormData] = useState(\"\");\r\n    const [friendImg, setImg] = useState(null);\r\n    const scroll = useRef();\r\n\r\n    useEffect(() => {\r\n        getChats();\r\n      }, [getChats]);\r\n\r\n      useEffect(() => async () => {\r\n        try {\r\n          if (currChat !== null) {\r\n          const friendId = currChat.users.find((u)=> u !== user._id);\r\n          const res = await axios.get(`/api/profile/user/${friendId}`);\r\n          const img = res.data.user.avatar;\r\n          setImg(img);\r\n          } \r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n    useEffect(() => {\r\n        const getMessages = async () => {\r\n          try {\r\n            const res = await axios.get(`/api/message/${currChat._id}`);\r\n            setMessages(res.data);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        getMessages();\r\n      }, [currChat]);\r\n\r\n    const onSubmit = async (e) => {\r\n      e.preventDefault();\r\n      const message = {\r\n        text: formData\r\n      }\r\n\r\n      try {\r\n        if (message.text !== \"\"){\r\n          const res = await axios.post(`/api/message/${currChat._id}`, message);\r\n          setMessages([...messages, res.data])\r\n          setFormData(\"\")\r\n        } \r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      scroll.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n  \r\n    \r\n    return <Fragment>\r\n        <div className =\"row\">\r\n        <div className=\"col-sm-4 col-md-4 chatbg-dark\">\r\n        <Link to ='/profiles' className=\"btn btn-outline-primary my-top\"> Find More Friends <i class=\"fas fa-plus\"/> </Link>\r\n            {chats.map((chat=> (\r\n                <div onClick ={()=> setChat(chat)}>\r\n                    <Chat chat = {chat}/> \r\n                </div>\r\n            )))}\r\n        </div>\r\n        {currChat ? \r\n        <Fragment>             \r\n        <div className=\"col-sm-8 col-md-8 namebox chatbg-dark\">\r\n        <h4 className=\"nametext my-btm\"> \r\n          {currChat === null ? <></> : currChat.names.find(name => name !== user.name)} \r\n          <img className=\"chatboxdp\" src={friendImg} alt=\"\"/>      \r\n        </h4>     \r\n            <div className=\"chatbox chatbg\">\r\n                {messages.map((msg) => (\r\n                    <div ref = {scroll}>\r\n                      <Message message={msg} sent={msg.sender === user._id} />\r\n                    </div>\r\n                  ))}\r\n            </div>\r\n            <div className =\"input-group my-top\">\r\n            <textarea \r\n                type=\"text\" \r\n                className =\"form-control rounded\" \r\n                placeholder=\"Type Something\" \r\n                onChange={(e)=>setFormData(e.target.value)}\r\n                value = {formData}\r\n                />\r\n            <button type=\"button\" class=\"btn btn-outline-primary my-right\" onClick={onSubmit}> <i class=\"fas fa-paper-plane\" /> </button>\r\n            </div>\r\n        </div>\r\n        </Fragment> : \r\n        <div className=\"col-sm-8 col-md-8 emptychat\">\r\n          <h3 className =\"emptychattextln1\">Howdy, {user.name}!</h3>\r\n          <h3 className =\"emptychattextln2\">Open a Conversation to Start Chatting :-)</h3>\r\n          <br/>\r\n          <img className=\"emptychatimg\" src={ChatBG} alt=\"ChatBG\"/>\r\n          </div>\r\n        }\r\n        </div>\r\n    </Fragment> \r\n}\r\n\r\n\r\nMessageBox.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, {getChats})(MessageBox);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Message.js",["441","442"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {format} from 'timeago.js'\r\n\r\nconst Message = ({auth: { user }, sent, message}) => {\r\n\r\n  return (\r\n    <Fragment>\r\n       <div className={sent ? \"message sent\" : \"message\"}>\r\n        <div className=\"toptext\">\r\n          <p className=\"messagetext\">{message.text}</p>\r\n        </div>\r\n        <div className=\"text-muted btmtext\">{format(message.createdAt)}</div>\r\n      </div>\r\n      </Fragment>\r\n  );\r\n}\r\n\r\n\r\nMessage.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth,\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, {})(Message);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\chat\\Chat.js",["443"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nconst Chat = ({auth : {user} , chat , loading }) => {\r\n  const [otherUser, setUser] = useState(null);\r\n  const [friendImg, setImg] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    const friendName = chat.names.find((name)=> name !== user.name);\r\n    setUser(friendName);\r\n  });\r\n\r\n  useEffect(() => async () => {\r\n    try {\r\n    const friendId = chat.users.find((u)=> u !== user._id);\r\n      const res = await axios.get(`/api/profile/user/${friendId}`);\r\n      const img = res.data.user.avatar;\r\n      setImg(img);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  });\r\n\r\n    if (loading || otherUser == null) {\r\n      return null;\r\n    }\r\n    else {\r\n      return <Fragment>\r\n        <div className=\"conversation my-top-small\">\r\n          <img className=\"chatdp\" src={friendImg} alt=\"\"/>\r\n          <span className=\"conversationName\">{otherUser}</span>\r\n        </div>\r\n      </Fragment>\r\n    }\r\n}\r\n\r\n\r\n\r\nChat.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth\r\n});\r\n\r\n  \r\n\r\nexport default connect(mapStateToProps, {})(Chat);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\dashboard\\FriendItem.js",["444","445"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createChat, getChats } from '../../actions/chat';\r\n\r\n\r\nconst FriendItem = ({createChat, getChats, auth: { user }, friend, chat:{chats}, history}) => {\r\n    useEffect(() => {\r\n        getChats();\r\n      }, [getChats]);\r\n\r\n    const chatID = [];\r\n    \r\n    chats.map(chat => {\r\n        chatID.push(chat.users.find(id => id !== user._id));\r\n    })\r\n\r\n    const startNewConvo= () => {\r\n        try {\r\n          if (!chatID.includes(friend._id)) {\r\n              const formData = {\r\n                  receiver: friend._id\r\n              }\r\n              createChat(formData, history)\r\n          } else {\r\n              history.push('/messagebox')\r\n          }\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n    }\r\n  \r\n\r\n    return (\r\n        <Fragment>\r\n        <li className=\"list-group-item\"> \r\n                {friend.name}  \r\n                <button onClick= {()=> {startNewConvo()}} type=\"button\" className=\"btn btn-dark join-all\">\r\n                <i class=\"fas fa-comment-dots\"/> \r\n                </button>\r\n            </li> \r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nFriendItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, {getChats, createChat})(withRouter(FriendItem));\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameChat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\games\\GameMessage.js",["446","447","448","449"],"import React, { Fragment, useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {format} from 'timeago.js'\r\nimport axios from 'axios';\r\n\r\n\r\nconst GameMessage = ({auth: { user }, message}) => {\r\n\r\n  const sent = message.name === user.name;\r\n\r\n  return <Fragment>\r\n       <div className={sent ? \"message sent\" : \"message\"}>\r\n        <p>{message.name}</p> \r\n        <div className=\"toptext\">\r\n          {sent ? <></> : <img className=\"gamechatdp\" src={message.avatar} alt=\"\"/>}\r\n          <p className=\"messagetext\">{message.text}</p>\r\n        </div>\r\n        <div className=\"text-muted btmtext\">{format(message.createdAt)}</div>\r\n      </div>\r\n      </Fragment>\r\n\r\n}\r\n\r\n\r\nGameMessage.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ \r\n    auth: state.auth,\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps)(GameMessage);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\reducers\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\actions\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\Orbital\\matchmaker\\client\\src\\components\\auth\\PasswordChange.js",["450"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\index.js",[],["451","452"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\App.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\store.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\Login.js",["453"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\nimport \"../../App.css\";\r\nimport '../../css/bootstrap.min.css';\r\n\r\n/**\r\n * Functional component for login page, allows client to\r\n * change the fields on the login page, as well as log into\r\n * their account provided their credentials are correct. \r\n * Parameters will be destructured props\r\n * @param login Our login action which will dispatch LOGIN_SUCCESS if successfully logged in with provided \r\n * email and password\r\n * @param isAuthenticated A boolean state in auth, to ensure that \r\n * authenticated users who are logged in will be directed to dashboard\r\n */\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = a => {\r\n    a.preventDefault();\r\n    login(formData.email, formData.password);\r\n  };\r\n\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n            <div className =\"box-body\">\r\n              <h1 className=\"large text-primary\">Sign In</h1>\r\n              \r\n              <form className=\"form\" onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                      <input\r\n                        type=\"email\"\r\n                        placeholder=\"NUS Email Address\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={onChange}\r\n                        required\r\n                      />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      name=\"password\"\r\n                      value={formData.password}\r\n                      onChange={onChange}\r\n                      minLength=\"7\"\r\n                    />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" value=\"Login\" />\r\n              </form>\r\n             \r\n            </div>\r\n    </Fragment>\r\n  );\r\n}; \r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\PasswordChange.js",["454"],"import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { changePassword } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/bootstrap.min.css';\r\n\r\n\r\nconst PasswordChange = ({ setAlert, changePassword, history }) => {\r\n    \r\n  \r\n  const [formData, setFormData] = useState({\r\n    password: \"\",\r\n    passwordcfm: \"\"\r\n  });\r\n\r\n  const { password, passwordcfm } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = a => {\r\n    a.preventDefault();\r\n    if (password !== passwordcfm) {\r\n      setAlert('Passwords do not match. Please retype.', 'danger');\r\n    } else {\r\n      changePassword({password},history);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n            <div className =\"box-body\">\r\n              <h1 className=\"large text-primary\">Change Password</h1>\r\n              \r\n              <form className=\"form\" onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    required\r\n                  />\r\n                  <small className=\"form-text\"> Minimum 7 characters </small>\r\n\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"passwordcfm\"\r\n                    value={passwordcfm}\r\n                    onChange={onChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" value=\"Change Password\" />\r\n              </form>\r\n            </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPasswordChange.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  changePassword: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, changePassword })(PasswordChange);\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\auth\\AccountSettings.js",["455"],"import React, { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout } from '../../actions/auth';\r\n\r\n\r\n\r\nconst AccountSettings= ({ getCurrentProfile, logout}) => {\r\n  useEffect(() => {\r\n      getCurrentProfile();\r\n},[]);\r\n  \r\n\r\n  return (\r\n    <Fragment>\r\n        <div className=\"card\">\r\n         <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\"> \r\n                <Link to={`/my-profile`} className=\"btn btn-light btn-lg btn-block\"> My Profile </Link> \r\n            </li> \r\n            <li className=\"list-group-item\"> \r\n                <Link to={`/change-password`} className=\"btn btn-light btn-lg btn-block\"> Update Password  </Link> \r\n            </li> \r\n            <li className=\"list-group-item\"> \r\n                <Link to={\"#!\"} className=\"btn btn-light btn-lg btn-block\"> Privacy Settings </Link> \r\n            </li> \r\n            <li className=\"list-group-item\"> \r\n                <Link to={\"#!\"} className=\"btn btn-light btn-lg btn-block\"> Blocked Users  </Link> \r\n            </li> \r\n            <li className=\"list-group-item\">\r\n            <Link to =\"#!\" onClick={logout} className=\"btn btn-danger btn-lg btn-block\"> Logout </Link>\r\n            </li>\r\n        </ul>\r\n        </div>\r\n    \r\n    </Fragment>\r\n  );\r\n}; \r\n\r\nAccountSettings.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    logout: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nexport default connect(null, { getCurrentProfile, logout })(AccountSettings);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\CreateProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Dashboard.js",["456"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport FriendList from './FriendList';\r\nimport Request from './Request';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport { getGames } from '../../actions/game';\r\nimport '../../css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport bball from '../layout/bball.jpg';\r\nimport { logout } from '../../actions/auth';\r\nimport dateformat from '../../utils/dateformat';\r\n\r\n\r\n\r\nconst Dashboard = ({ getGames, getCurrentProfile, auth: { user }, profile: { profile, loading }, game: { games }, logout }) => {\r\n\r\n  useEffect(() => {\r\n    getGames();\r\n  }, [games]);\r\n\r\n  //Necessary to rerender \r\n  // eslint-disable-next-line\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  });\r\n\r\n  const convertTime = e => {\r\n    var d1 = new Date(e);\r\n    return d1.getTime();\r\n  }\r\n\r\n\r\n  if (loading || user === null) {\r\n    return <Spinner />;\r\n  } else {\r\n    const my_games = games.filter(game => game.user === user._id)\r\n    const joined_games = games.filter(game => game.user !== user._id && game.players.filter(player => player.user === user._id).length > 0)\r\n    return <Fragment>\r\n      <h1 className=\"large text-primary big-header\"><i class=\"fas fa-dumbbell\" /> {\" \"} Hello There, {user && user.name}</h1>\r\n      {profile !== null && user !== null ?\r\n        (profile.user._id !== user._id ? <Spinner /> :\r\n          <Fragment>\r\n\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-8 col-md-8\">\r\n\r\n\r\n                  <h4 className=\"text-primary\">  My Interests </h4>\r\n\r\n                  <ul>\r\n                    {profile.interests.map(item => {\r\n                      return <li><i class=\"fas fa-dot-circle\" /> {item}</li>;\r\n                    })}\r\n                  </ul>\r\n\r\n                  <h4 className=\"text-primary my-top\"> Pending Games </h4>\r\n\r\n\r\n                  {my_games.filter(game => (convertTime(game.dateTime) > Date.now())).length === 0 &&\r\n                    joined_games.filter(game => (convertTime(game.dateTime) > Date.now())).length === 0\r\n                    && <h4 className=\"my-top\">You have no upcoming games</h4>}\r\n\r\n                  {my_games.length > 0 && my_games.map(game => (convertTime(game.dateTime) < Date.now() ? <></> :\r\n\r\n                    <div className=\"card mb-3\">\r\n                      <i className=\"fas fa-crown my-left my-top-small\"></i>\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{game.sport}</h5>\r\n                        <br></br>\r\n                        <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location === \"Others\" ? game.otherLoc : game.location}</p>\r\n                        <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n                        <p className=\"card-text\"> <span className='text-primary'> Game Day: </span> {dateformat(game.dateTime)} </p>\r\n                        <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link>\r\n                        <p className=\"card-text\">\r\n\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n\r\n                  ))}\r\n\r\n                  {joined_games.length > 0 && joined_games.map(game => (convertTime(game.dateTime) < Date.now() ? <></> :\r\n                    <div className=\"card mb-3\">\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{game.sport}</h5>\r\n                        <br></br>\r\n                        <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location === \"Others\" ? game.otherLoc : game.location}</p>\r\n                        <p className=\"card-text\"> <span className='text-primary'> Waiting Room: </span> {game.players.length} players out of {game.maxPlayers}</p>\r\n                        <p className=\"card-text\"> <span className='text-primary'> Game Day: </span> {dateformat(game.dateTime)} </p>\r\n                        <Link to={`/games/${game._id}`} className=\"btn btn-dark join-all\"> Enter Room</Link>\r\n                        <p className=\"card-text\">\r\n\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"col-sm-4 col-md-4\">\r\n                  <div className=\"my-btm\"> <Request /></div>\r\n\r\n                  <FriendList />\r\n\r\n                  <Link to=\"/my-profile\" className=\"btn btn-secondary btn-lg btn-block my-top\"> <i class=\"fas fa-cog\" /> Profile Settings </Link>\r\n\r\n\r\n                  <h4 className=\"text-primary my-top\">  Suggested Games : </h4>\r\n                  <div className=\"card mb-3\">\r\n                    <div className=\"row g-0\">\r\n                      <div className=\"col-md-4\">\r\n                        <img height=\"100\" width=\"195\" src={bball} alt=\"Eusoff\" />\r\n                      </div>\r\n                      <div className=\"col-md-8\">\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title\">Placeholder</h5>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </Fragment>) :\r\n\r\n        <Fragment>\r\n          <p> No Profile Yet. You will need a profile to host or join games. </p>\r\n          <Link to='/create-profile' className=\"btn btn-primary my-1\"> Set Up One Now </Link>\r\n\r\n          <Link to=\"#!\" onClick={logout} className=\"btn btn-danger join-all\"> Logout </Link>\r\n\r\n        </Fragment>}\r\n    </Fragment>\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  getGames: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  logout: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n  game: state.game\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGames, getCurrentProfile, logout })(Dashboard);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\MyProfile.js",["457"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst MyProfile = ({ getCurrentProfile, auth: { user }, profile : { profile, loading } }) => {\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n      getCurrentProfile();\r\n    },[]);\r\n  \r\n    return (\r\n      <Fragment>\r\n          {loading || (profile && profile.user._id !== user._id) ? (\r\n            <Spinner /> ):\r\n        <Fragment> \r\n            <h1 className=\"large\"> \r\n              {user.name}'s Profile  \r\n              <br/> \r\n              <img className=\"profiledp\" src={user.avatar} alt=\"\"/>\r\n            </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n          <p> <strong> Your Interests: </strong></p>\r\n        <ul>\r\n          {profile.interests.map(item => {\r\n              return <li>{item}</li>;\r\n            })}\r\n        </ul>\r\n\r\n        <div className =\"my-2\"> \r\n            <Link to ='/edit-profile' className=\"btn btn-primary my-1\"> Update Profile </Link>\r\n          \r\n          <> </>\r\n          <Link to=\"/dashboard\" className=\"btn btn-dark join-all\">\r\n            Home\r\n          </Link>\r\n          \r\n         \r\n          </div>\r\n        </Fragment> \r\n    }\r\n    </Fragment>\r\n  );\r\n}\r\n   \r\n  \r\n  MyProfile.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n  });\r\n  \r\n  export default connect(mapStateToProps, { getCurrentProfile })(MyProfile);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\user-profile\\EditProfile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\UserProfile.js",["458"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfilesById } from '../../actions/profile';\r\nimport { authUser } from '../../actions/auth'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {createChat} from '../../actions/chat';\r\n\r\n\r\nconst UserProfile = ({ createChat, chat:{chats}, authUser, getProfilesById, profile: { profile, loading }, auth, match, history}) => {\r\n\r\n\r\n  const chatID = [];\r\n  if (chats.length > 0) {\r\n    chats.map(chat => {\r\n      chatID.push(chat.users.find(id => id !== auth.user._id));\r\n    })\r\n  }\r\n  \r\n\r\n  const startNewConvo= () => {\r\n      try {\r\n        if (!chatID.includes(profile.user._id)) {\r\n            const formData = {\r\n                receiver: profile.user._id\r\n            }\r\n            createChat(formData, history)\r\n        } else {\r\n            history.push('/messagebox')\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n  \r\n\r\n  const [followed, toggle] = useState(\r\n    auth.user.followings.includes(match.params.id)\r\n  );\r\n\r\n  useEffect(() => {\r\n    authUser();\r\n  });\r\n\r\n\r\n  //cannot rerender if not clicking directly on the main page will conflict with main page rerender\r\n  useEffect(() => {\r\n      getProfilesById(match.params.id);\r\n      // eslint-disable-next-line\r\n    },[getProfilesById]);\r\n\r\n\r\n  const followUnfollow = () => {\r\n      try {\r\n        if (!followed) {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/follow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        } else {\r\n          toggle(!followed);\r\n          axios.put(`/api/users/${profile.user._id}/unfollow`, {\r\n            userId: auth.user._id,\r\n          });\r\n        }\r\n      }catch (err) { \r\n        console.log(err.status)\r\n      }\r\n    };\r\n    \r\n    if (profile === null || loading) {\r\n      return < Spinner />\r\n    } else {\r\n      if (profile.user._id === auth.user._id) {\r\n        return <Spinner />\r\n      } else {\r\n        return <Fragment>\r\n            <h1> {profile.user.name}'s Profile  </h1>\r\n            <br></br>\r\n            <p> <strong> School:  </strong>National University of Singapore</p>\r\n            <p> <strong> Faculty: </strong> { profile.faculty }</p>\r\n            <p> <strong> Year: </strong> { profile.year }</p>\r\n            <p> <strong> Bio: </strong> { profile.bio }</p>\r\n            <p> <strong> Your Interests: </strong></p>\r\n                <ul>\r\n                {profile.interests.map(item => {\r\n                    return <li>{item}</li>;\r\n                    })}\r\n                </ul>\r\n            \r\n            {profile.hasOwnProperty(\"social\")  && <Fragment>\r\n              <p> <strong> Social Media: </strong> </p>\r\n                  <ul>\r\n                      {profile.social.hasOwnProperty(\"facebook\") && <Fragment> <li><i class=\"fab fa-facebook\"/> {\" \"} {profile.social.facebook}</li> </Fragment> }\r\n                      {profile.social.hasOwnProperty(\"instagram\") && <Fragment> <li><i class=\"fab fa-instagram\"/> {\" \"} {profile.social.instagram}</li> </Fragment> }\r\n                  </ul>\r\n            </Fragment>\r\n            }\r\n\r\n            <Link to=\"/profiles\" className=\"btn btn-secondary\">\r\n            Find more Friends\r\n            </Link>\r\n            <>  </>\r\n            {!followed && auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-dark\">\r\n                  <i class=\"fas fa-user-plus\"/>   Follow\r\n                </button>\r\n                ) \r\n            }\r\n\r\n            {followed && auth.isAuthenticated &&\r\n                auth.loading === false && \r\n                auth.user._id !== profile.user._id && (\r\n                <button onClick= {()=> {\r\n                  followUnfollow();\r\n                }} type=\"button\" className=\"btn btn-success\">\r\n                   <i class=\"fas fa-user-minus\"/>   Unfollow\r\n                </button>\r\n                ) \r\n            }\r\n            \r\n            <>  </>\r\n            {auth.isAuthenticated &&\r\n                auth.loading === false &&\r\n                auth.user._id !== profile.user._id && \r\n                auth.user.followings.find(id => id === profile.user._id) !== undefined &&\r\n                auth.user.followers.find(id => id === profile.user._id) !== undefined &&(\r\n                <button onClick= {()=> {startNewConvo()}} type=\"button\" className=\"btn btn-primary my-1\"> <i class=\"fas fa-comment-dots\"/>\r\n                    {\" \"} Message\r\n                 </button>\r\n                ) \r\n            }\r\n        </Fragment>\r\n      }\r\n    }\r\n  };\r\n\r\n\r\nUserProfile.propTypes = {\r\n    getProfilesById: PropTypes.func.isRequired,\r\n    authUser: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth,\r\n    chat: state.chat\r\n})\r\n\r\nexport default connect(mapStateToProps, { authUser, getProfilesById, createChat })(withRouter(UserProfile));","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\Profiles.js",["459"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport ProfileItem from './ProfileItem'\r\nimport { clearProfile, getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({clearProfile, getProfiles, profile: { profiles, loading }, auth}) => {\r\n    useEffect(()  => {\r\n        getProfiles();\r\n    }, [getProfiles]);\r\n\r\n    //additional clear profile to clear out dashboard rerendering\r\n    useEffect(()  => {\r\n        clearProfile();\r\n    }, [clearProfile]);\r\n\r\n\r\n    const displayAll = profiles.length <= 0 ? <h4>No profiles found</h4> : \r\n        profiles.map(profile => {\r\n            if (profile.user._id !== auth.user._id) {\r\n                return <ProfileItem key = {profile._id} profile ={profile} />\r\n            }\r\n        })\r\n\r\n    return <Fragment> \r\n        { loading ? <Spinner /> : <Fragment>\r\n            <h1 className = \"large text-dark big-header\"> Sports Enthusiasts of NUS </h1>\r\n\r\n            <div className =\"input-group my-3\">\r\n                <input type=\"search\" className =\"form-control rounded\" placeholder=\"Search\" aria-label=\"Search\"\r\n                    aria-describedby=\"search-addon\" />\r\n                <button type=\"button\" class=\"btn btn-outline-primary\">search</button>\r\n            </div>\r\n            <div className=\"profiles\">\r\n                {displayAll}\r\n            </div>\r\n\r\n        </Fragment>}\r\n    </Fragment>\r\n    \r\n}\r\n  \r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    clearProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n  \r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n});\r\n\r\n  \r\nexport default connect(mapStateToProps, { clearProfile, getProfiles})(Profiles);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\Games.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameRoom.js",["460","461"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { authUser } from '../../actions/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { getGameById } from '../../actions/game';\r\nimport { clearProfile } from '../../actions/profile';\r\nimport axios from 'axios';\r\nimport dateformat from '../../utils/dateformat';\r\nimport GameChat from './GameChat';\r\nimport { getGameChat, createGameChat } from '../../actions/gamechat';\r\nimport EnterCall from '../video/EnterCall';\r\n\r\n\r\nconst GameRoom = ({ getGameChat, createGameChat, clearProfile, getGameById, authUser, auth, game : {game, loading}, match, gamechat: {gamechat} }) => {\r\n    \r\n    const [showTutorial, toggle] = useState(false);\r\n\r\n    const startNewConvo= () => {\r\n        try {\r\n            const formData = {\r\n                room: game._id\r\n            }\r\n            createGameChat(formData)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n    }\r\n\r\n    const quitGame = () => {\r\n        try {\r\n            axios.put(`/api/games/quit/${game._id}`);\r\n        } catch (err) { \r\n            console.log(err.status)\r\n        }\r\n      };\r\n    \r\n    const joinGame = () => {\r\n        try {\r\n            axios.put(`/api/games/join/${game._id}`);\r\n        } catch (err) { \r\n            console.log(err.status)\r\n        }\r\n      };\r\n\r\n    useEffect(() => {\r\n        getGameChat(match.params.id);\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        getGameById(match.params.id);\r\n    });\r\n    \r\n    useEffect(() => {\r\n        authUser();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        clearProfile();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    if (game === null || loading || gamechat === null) {\r\n        return(\r\n            <Fragment>\r\n                <Spinner />\r\n            </Fragment>\r\n        ) \r\n    } else {\r\n        return (\r\n            <Fragment>\r\n                <h1 className=\"text-primary my-3 my-btm\"> {game.name}'s Lobby  </h1>\r\n                <div className=\"row\">\r\n                <div className=\"card-body\">\r\n                {!showTutorial && <button className=\"btn btn-success\" onClick={()=>toggle(!showTutorial)}>Show Tutorial</button>}\r\n                {showTutorial && <button className=\"btn btn-danger\" onClick={()=>toggle(!showTutorial)}>Hide Tutorial</button>}\r\n                <Link to=\"/all-games\" className=\"btn btn-dark join-all\"> <i class=\"fas fa-sign-out-alt\" /> Leave Lobby </Link>\r\n                </div>\r\n                </div>\r\n                    <div className=\"row\">\r\n                    {showTutorial && game.user === auth.user._id &&\r\n                                <Fragment>\r\n                                    <div className=\"col-sm-12 col-md-12\">\r\n                                    <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                <h5 className=\"card-title my-3 host-title\"> Guide To Navigating Around </h5>\r\n                                <h6>As a Host, you can ... </h6>\r\n                                <ul>\r\n                                    <li><strong>Enable Chat:</strong> Chat will not be enabled by default. To allow chat to take place in the room, \r\n                                    you can enable it by clicking the green button below </li>\r\n                                    <li><strong>Join Game:</strong> As the host, you still have to press \"Join Game\" (pink button) to confirm your availability \r\n                                    and be part of the game </li>\r\n                                    <li><strong>Leave Lobby:</strong> Allows you to leave the room and be search for other rooms available. Do not that the room will not be \r\n                                    cancelled until you press the cancel button in the All Games page</li>\r\n                                    <li><strong>Enter Video Call:</strong> This button will only show if your room is created for any online activities, such as study groups and \r\n                                    online games</li>\r\n                                </ul>\r\n                                </div>\r\n                                </div>\r\n                                </div>\r\n                                </Fragment>}\r\n                            \r\n                            {showTutorial && game.user !== auth.user._id &&\r\n                                <Fragment>\r\n                                 <div className=\"col-sm-12 col-md-12\">\r\n                                <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                <h5 className=\"card-title my-3 host-title\"> Guide To Navigating Around </h5>\r\n                                <h6>As a Participant, you can ... </h6>\r\n                                <ul>\r\n                                    <li><strong>Chat:</strong> Chat will have to be enabled by the room Host before any chatting can occur between users in the room</li>\r\n                                    <li><strong>Join Game:</strong> Please remember press \"Join Game\" (pink button) to confirm your availability \r\n                                    and be part of the game </li>\r\n                                    <li><strong>Leave Lobby:</strong> Allows you to leave the room and be search for other rooms available.</li>\r\n                                    <li><strong>Enter Video Call:</strong> This button will only show if the room is created for any online activities, such as study groups and \r\n                                    online games</li>\r\n                                </ul>\r\n                                </div>\r\n                                </div>\r\n                                </div>    \r\n                            </Fragment>}\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                            <h5 className=\"card-title my-3 host-title\">{game.sport}</h5>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Experience Level: </span> {game.experience}</p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Location: </span> {game.location===\"Others\"?\r\n                                    game.otherLoc:game.location}</p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Date: </span> {dateformat(game.dateTime)} </p>\r\n                                <p className=\"card-text\"> <span className='text-primary'> Max Players: </span> {game.maxPlayers} </p>\r\n                                {game.roomType === \"study\" && <p>This room should only be used for the forming of study groups among NUS students. \r\n                                    Misuse of platform will not be tolerated. </p>}\r\n                                {game.roomType === \"onlineGame\" && <p>This room should only be used for the facilitating of (legal) online/offline games among\r\n                                    NUS students. Misuse of platform will not be tolerated</p>}\r\n                                <br></br>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                <h5 className=\"card-title my-3 host-title\">Players In Waiting Room : {game.players.length} </h5>\r\n                                {game.players.length > 0 && game.players.map(player => { \r\n                                    if (player.user === auth.user._id) {\r\n                                        return (\r\n                                            <Fragment>\r\n                                            <div className=\"card mb-3\">\r\n                                            <div className=\"card-body player-card\">\r\n                                                {player.name}\r\n                                                <button onClick= {()=> {\r\n                                                    quitGame();\r\n                                                }} type=\"button\" className=\"btn btn-danger btn-round join-all\"> <i class=\"far fa-times-circle\"/> </button>\r\n                                            </div>\r\n                                            </div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    } else {\r\n                                        return (\r\n                                            <Fragment>\r\n                                            <div className=\"card mb-3\">\r\n                                            <div className=\"card-body player-card\">\r\n                                                <Link to={`/profile/${player.user}`}> {player.name} </Link> \r\n                                            </div>\r\n                                            </div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    }\r\n                                })}\r\n                                <p> { game.players.length < game.maxPlayers && game.players.filter(player => \r\n                                    player.user === auth.user._id).length === 0  && \r\n                                    <button onClick= {()=> {\r\n                                        joinGame();\r\n                                    }} type=\"button\" className=\"btn btn-primary join-all\"> Join Game </button>}\r\n                                </p>\r\n\r\n                                <h5> { game.players.length >= game.maxPlayers && <span class=\"badge badge-light\">\r\n                                    Waiting Room is Currently Full</span>}</h5>\r\n                             \r\n                                </div>\r\n                            </div>\r\n\r\n                            \r\n                            {game.players.filter(player => player.user === auth.user._id).length === 0 \r\n                            ? <></> \r\n                            : (game.roomType === \"onlineGame\" || \"study\") && game.location === \"Online\" ? \r\n                                    <Link to={`/entercall/${match.params.id}`} className=\"btn btn-secondary btn-lg btn-block\"> \r\n                                    Enter Video Chat  <i class=\"fas fa-video\"/></Link> \r\n                            : <></>}\r\n                            <div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                   \r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-md-6\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"row g-0\">\r\n                                <div className=\"col-md-4\">\r\n                                    <img height=\"195\" width =\"195\" src={game.avatar} className=\"round-img\" alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                    <h5 className=\"card-title my-3 host-title \">About Game Host </h5>\r\n                                    <p className=\"card-text\"> <span className='text-primary'> Host Name: </span> {game.name}</p>\r\n                                    <small className=\"card-text text-muted\"> Room Created: {dateformat(game.createTime)} </small>\r\n                                    <br></br>\r\n                                </div>\r\n                            </div>\r\n                                {game.user !== auth.user._id &&  <Link to={`/profile/${game.user}`} className=\"btn btn-dark btn-lg btn-block\"> View Host Profile </Link>}\r\n                                {game.user === auth.user._id &&  <Link to=\"#!\" className=\"btn btn-dark btn-lg btn-block\"> <i class=\"fas fa-cog\"/> Game Settings </Link>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 col-md-12\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title my-3 host-title \"> Game Chat</h5>\r\n                                </div>\r\n\r\n                                { gamechat.length === 0 && game.user !== auth.user._id &&\r\n                                    <Fragment>\r\n                                        <h1 className =\"badge badge-danger\"> Game Chat has not been enabled </h1>\r\n                                    </Fragment>\r\n                                }\r\n\r\n                                { (gamechat.length === 0 && game.user === auth.user._id) \r\n                                    && <button type=\"button\" onClick = {()=> {startNewConvo()}} className=\"btn btn-success btn-lg btn-block \">\r\n                                      Enable Room Chat\r\n                                </button> }\r\n\r\n                                { gamechat.length > 0 &&  <GameChat />}\r\n\r\n                                \r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nGameRoom.propTypes = {\r\n    getGameById: PropTypes.func.isRequired,\r\n    authUser: PropTypes.func.isRequired,\r\n    clearProfile: PropTypes.func.isRequired,\r\n    createGameChat: PropTypes.func.isRequired,\r\n    getGameChat: PropTypes.func.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    game: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    gamechat: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    game: state.game,\r\n    auth: state.auth,\r\n    gamechat: state.gamechat\r\n})\r\n\r\nexport default connect(mapStateToProps, { getGameChat, createGameChat, clearProfile, getGameById, authUser })(GameRoom);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\CreateGame.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\EnterCall.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\MessageBox.js",["462"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\types.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\Message.js",["463","464"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\chat\\Chat.js",["465"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\ChannelForm.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\StudyForm.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\OnlineGamesForm.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\video\\VideoCall.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\SportsForm.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\utils\\dateformat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\actions\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameChat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\profiles\\ProfileItem.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FriendList.js",["466"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport FriendItem from \"./FriendItem\";\r\n\r\n\r\nconst FriendList = ({auth: { user }, chat:{chats}}) => {\r\n\r\n    const [friends, setFriends] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const getFriends = async () => {\r\n          try {\r\n            const friendList = await axios.get(\"/api/users/friends/\" + user._id);\r\n            setFriends(friendList.data);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        getFriends()\r\n      });\r\n    \r\n    \r\n\r\n    return (\r\n      \r\n      <div className=\"card\">\r\n          <div className=\"card-header\">\r\n              <strong> My Friends ({friends.length}) </strong>\r\n          </div>\r\n        \r\n          <ul className=\"list-group list-group-flush\">\r\n            {friends.map((friend) => (\r\n                <FriendItem friend ={friend}/>\r\n           ))}\r\n          </ul>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n\r\nFriendList.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  chat: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\nexport default connect(mapStateToProps)(FriendList);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\index.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\GameMessage.js",["467","468","469","470"],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FriendItem.js",["471","472"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createChat, getChats } from '../../actions/chat';\r\n\r\n\r\nconst FriendItem = ({ createChat, getChats, auth: { user }, friend, chat: { chats }, history }) => {\r\n    useEffect(() => {\r\n        getChats();\r\n    }, [getChats]);\r\n\r\n    const chatID = [];\r\n\r\n    chats.map(chat => {\r\n        chatID.push(chat.users.find(id => id !== user._id));\r\n    })\r\n\r\n    const startNewConvo = () => {\r\n        try {\r\n            if (!chatID.includes(friend._id)) {\r\n                const formData = {\r\n                    receiver: friend._id\r\n                }\r\n                createChat(formData, history)\r\n            } else {\r\n                history.push('/messagebox')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <li className=\"list-group-item\">\r\n                {friend.name}\r\n                <button onClick={() => { startNewConvo() }} type=\"button\" className=\"btn btn-dark join-all my-right\">\r\n                    <i class=\"fas fa-comment-dots\" />\r\n                </button>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nFriendItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    chat: PropTypes.object.isRequired,\r\n    getChats: PropTypes.func.isRequired,\r\n    createChat: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { getChats, createChat })(withRouter(FriendItem));\r\n","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\alert.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\auth.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\game.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\profile.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\gamechat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\reducers\\chat.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\games\\BookFacility.js",[],"C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\Request.js",["473"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport FollowerItem from \"./FollowerItem\";\r\n\r\nconst Request = ({auth: { user }, chat:{chats}}) => {\r\n\r\n    const [friends, setFriends] = useState([]);\r\n    const [followers, setFollowers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getFriends = async () => {\r\n          try {\r\n            const friendList = await axios.get(\"/api/users/friends/\" + user._id);\r\n            setFriends(friendList.data);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        getFriends()\r\n      });\r\n\r\n\r\n      useEffect(() => {\r\n        const getFollowers = async () => {\r\n          try {\r\n            const followerList = await axios.get(\"/api/users/followers/\" + user._id);\r\n            setFollowers(followerList.data);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        getFollowers()\r\n      });\r\n    \r\n    \r\n      const idlist = []\r\n      friends.map(friend => idlist.push(friend._id))\r\n\r\n\r\n        return followers.length === 0 ? null:\r\n      <div className=\"card\">\r\n          <div className=\"card-header2\">\r\n              <strong> Follow Requests </strong>\r\n          </div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {followers.filter(follower => !idlist.includes(follower._id)).map(f => \r\n                <FollowerItem follower = {f}/>\r\n                )}\r\n          </ul>\r\n        </div>\r\n       \r\n    \r\n}\r\n\r\n\r\nRequest.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  chat: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    chat: state.chat\r\n});\r\n\r\nexport default connect(mapStateToProps)(Request);","C:\\Users\\leonh\\OneDrive\\Desktop\\matchmakers\\client\\src\\components\\dashboard\\FollowerItem.js",["474"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\n\r\nconst FollowerItem = ({ auth: { user }, follower }) => {\r\n\r\n  const [follow, toggle] = useState(false)\r\n\r\n  const followUnfollow = () => {\r\n    try {\r\n      toggle(!follow)\r\n      axios.put(`/api/users/${follower._id}/follow`, {\r\n        userId: user._id,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.status)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <li className=\"list-group-item\">\r\n        {follower.name}\r\n        {!follow && <button onClick={() => {\r\n          followUnfollow();\r\n        }} type=\"button\" className=\"btn btn-dark join-all\">\r\n          <i class=\"fas fa-user-plus\" />\r\n        </button>}\r\n\r\n        {follow && <button className=\"btn btn-success join-all\"><i class=\"fas fa-cog fa-spin\" /></button>}\r\n      </li>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nFollowerItem.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(withRouter(FollowerItem));\r\n",{"ruleId":"475","replacedBy":"476"},{"ruleId":"477","replacedBy":"478"},{"ruleId":"479","severity":1,"message":"480","line":1,"column":37,"nodeType":"481","messageId":"482","endLine":1,"endColumn":46},{"ruleId":"483","severity":1,"message":"484","line":12,"column":7,"nodeType":"485","endLine":12,"endColumn":9,"suggestions":"486"},{"ruleId":"487","severity":1,"message":"488","line":16,"column":20,"nodeType":"489","messageId":"490","endLine":16,"endColumn":22},{"ruleId":"479","severity":1,"message":"491","line":12,"column":8,"nodeType":"481","messageId":"482","endLine":12,"endColumn":14},{"ruleId":"487","severity":1,"message":"492","line":20,"column":30,"nodeType":"489","messageId":"493","endLine":20,"endColumn":32},{"ruleId":"479","severity":1,"message":"494","line":2,"column":10,"nodeType":"481","messageId":"482","endLine":2,"endColumn":14},{"ruleId":"479","severity":1,"message":"495","line":12,"column":10,"nodeType":"481","messageId":"482","endLine":12,"endColumn":18},{"ruleId":"479","severity":1,"message":"496","line":18,"column":22,"nodeType":"481","messageId":"482","endLine":18,"endColumn":33},{"ruleId":"479","severity":1,"message":"497","line":20,"column":12,"nodeType":"481","messageId":"482","endLine":20,"endColumn":22},{"ruleId":"479","severity":1,"message":"498","line":20,"column":24,"nodeType":"481","messageId":"482","endLine":20,"endColumn":33},{"ruleId":"483","severity":1,"message":"499","line":55,"column":7,"nodeType":"485","endLine":55,"endColumn":9,"suggestions":"500"},{"ruleId":"479","severity":1,"message":"501","line":26,"column":8,"nodeType":"481","messageId":"482","endLine":26,"endColumn":18},{"ruleId":"483","severity":1,"message":"484","line":13,"column":3,"nodeType":"485","endLine":13,"endColumn":5,"suggestions":"502"},{"ruleId":"479","severity":1,"message":"503","line":5,"column":8,"nodeType":"481","messageId":"482","endLine":5,"endColumn":15},{"ruleId":"479","severity":1,"message":"480","line":1,"column":27,"nodeType":"481","messageId":"482","endLine":1,"endColumn":36},{"ruleId":"479","severity":1,"message":"494","line":2,"column":10,"nodeType":"481","messageId":"482","endLine":2,"endColumn":14},{"ruleId":"483","severity":1,"message":"504","line":10,"column":3,"nodeType":"481","endLine":10,"endColumn":12,"suggestions":"505"},{"ruleId":"479","severity":1,"message":"506","line":1,"column":38,"nodeType":"481","messageId":"482","endLine":1,"endColumn":46},{"ruleId":"487","severity":1,"message":"488","line":15,"column":20,"nodeType":"489","messageId":"490","endLine":15,"endColumn":22},{"ruleId":"479","severity":1,"message":"480","line":1,"column":27,"nodeType":"481","messageId":"482","endLine":1,"endColumn":36},{"ruleId":"479","severity":1,"message":"506","line":1,"column":38,"nodeType":"481","messageId":"482","endLine":1,"endColumn":46},{"ruleId":"479","severity":1,"message":"494","line":2,"column":10,"nodeType":"481","messageId":"482","endLine":2,"endColumn":14},{"ruleId":"479","severity":1,"message":"507","line":6,"column":8,"nodeType":"481","messageId":"482","endLine":6,"endColumn":13},{"ruleId":"479","severity":1,"message":"508","line":3,"column":10,"nodeType":"481","messageId":"482","endLine":3,"endColumn":18},{"ruleId":"475","replacedBy":"509"},{"ruleId":"477","replacedBy":"510"},{"ruleId":"479","severity":1,"message":"480","line":1,"column":37,"nodeType":"481","messageId":"482","endLine":1,"endColumn":46},{"ruleId":"479","severity":1,"message":"508","line":3,"column":10,"nodeType":"481","messageId":"482","endLine":3,"endColumn":18},{"ruleId":"483","severity":1,"message":"484","line":13,"column":3,"nodeType":"485","endLine":13,"endColumn":5,"suggestions":"511"},{"ruleId":"483","severity":1,"message":"512","line":22,"column":6,"nodeType":"485","endLine":22,"endColumn":13,"suggestions":"513"},{"ruleId":"483","severity":1,"message":"484","line":12,"column":7,"nodeType":"485","endLine":12,"endColumn":9,"suggestions":"514"},{"ruleId":"487","severity":1,"message":"488","line":17,"column":20,"nodeType":"489","messageId":"490","endLine":17,"endColumn":22},{"ruleId":"487","severity":1,"message":"492","line":20,"column":30,"nodeType":"489","messageId":"493","endLine":20,"endColumn":32},{"ruleId":"479","severity":1,"message":"515","line":13,"column":8,"nodeType":"481","messageId":"482","endLine":13,"endColumn":17},{"ruleId":"483","severity":1,"message":"499","line":49,"column":7,"nodeType":"485","endLine":49,"endColumn":9,"suggestions":"516"},{"ruleId":"479","severity":1,"message":"503","line":5,"column":8,"nodeType":"481","messageId":"482","endLine":5,"endColumn":15},{"ruleId":"479","severity":1,"message":"480","line":1,"column":27,"nodeType":"481","messageId":"482","endLine":1,"endColumn":36},{"ruleId":"479","severity":1,"message":"494","line":2,"column":10,"nodeType":"481","messageId":"482","endLine":2,"endColumn":14},{"ruleId":"483","severity":1,"message":"504","line":10,"column":3,"nodeType":"481","endLine":10,"endColumn":12,"suggestions":"517"},{"ruleId":"479","severity":1,"message":"494","line":2,"column":10,"nodeType":"481","messageId":"482","endLine":2,"endColumn":14},{"ruleId":"479","severity":1,"message":"480","line":1,"column":27,"nodeType":"481","messageId":"482","endLine":1,"endColumn":36},{"ruleId":"479","severity":1,"message":"506","line":1,"column":38,"nodeType":"481","messageId":"482","endLine":1,"endColumn":46},{"ruleId":"479","severity":1,"message":"494","line":2,"column":10,"nodeType":"481","messageId":"482","endLine":2,"endColumn":14},{"ruleId":"479","severity":1,"message":"507","line":6,"column":8,"nodeType":"481","messageId":"482","endLine":6,"endColumn":13},{"ruleId":"479","severity":1,"message":"506","line":1,"column":38,"nodeType":"481","messageId":"482","endLine":1,"endColumn":46},{"ruleId":"487","severity":1,"message":"488","line":15,"column":20,"nodeType":"489","messageId":"490","endLine":15,"endColumn":22},{"ruleId":"479","severity":1,"message":"494","line":2,"column":10,"nodeType":"481","messageId":"482","endLine":2,"endColumn":14},{"ruleId":"479","severity":1,"message":"480","line":1,"column":27,"nodeType":"481","messageId":"482","endLine":1,"endColumn":36},"no-native-reassign",["518"],"no-negated-in-lhs",["519"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["520"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'bball2' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Link' is defined but never used.","'getChats' is defined but never used.","'setMessages' is assigned a value but never used.","'chatStatus' is assigned a value but never used.","'startChat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getGameChat' and 'match.params.id'. Either include them or remove the dependency array. If 'getGameChat' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["521"],"'createTime' is assigned a value but never used.",["522"],"'Spinner' is defined but never used.","React Hook useEffect contains a call to 'setUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [chat.names, user.name] as a second argument to the useEffect Hook.",["523"],"'useState' is defined but never used.","'axios' is defined but never used.","'Redirect' is defined but never used.",["518"],["519"],["524"],"React Hook useEffect has a missing dependency: 'getGames'. Either include it or remove the dependency array. If 'getGames' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["525"],["526"],"'EnterCall' is defined but never used.",["527"],["528"],"no-global-assign","no-unsafe-negation",{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"529","fix":"533"},{"desc":"534","fix":"535"},{"desc":"529","fix":"536"},{"desc":"537","fix":"538"},{"desc":"529","fix":"539"},{"desc":"531","fix":"540"},{"desc":"534","fix":"541"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"542","text":"543"},"Update the dependencies array to be: [getGameChat, match.params.id]",{"range":"544","text":"545"},{"range":"546","text":"543"},"Add dependencies array: [chat.names, user.name]",{"range":"547","text":"548"},{"range":"549","text":"543"},"Update the dependencies array to be: [games, getGames]",{"range":"550","text":"551"},{"range":"552","text":"543"},{"range":"553","text":"545"},{"range":"554","text":"548"},[460,462],"[getCurrentProfile]",[1611,1613],"[getGameChat, match.params.id]",[395,397],[444,444],", [chat.names, user.name]",[395,397],[800,807],"[games, getGames]",[460,462],[1512,1514],[444,444]]